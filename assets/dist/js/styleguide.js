/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./assets/source/3.0/js/styleguide.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/source/3.0/js/styleguide.js":
/*!********************************************!*\
  !*** ./assets/source/3.0/js/styleguide.js ***!
  \********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helsingborg_stad_styleguide_source_js_app_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @helsingborg-stad/styleguide/source/js/app.js */ \"./node_modules/@helsingborg-stad/styleguide/source/js/app.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvc291cmNlLzMuMC9qcy9zdHlsZWd1aWRlLmpzPzZjZjciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSIsImZpbGUiOiIuL2Fzc2V0cy9zb3VyY2UvMy4wL2pzL3N0eWxlZ3VpZGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3R5bGVndWlkZSBmcm9tICdAaGVsc2luZ2Jvcmctc3RhZC9zdHlsZWd1aWRlL3NvdXJjZS9qcy9hcHAuanMnOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./assets/source/3.0/js/styleguide.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/build/initBuild.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/build/initBuild.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass initBuild {\n    \n    constructor() {\n        this.sassComponentBuilder();\n    }\n    \n    /**\n     * Copy Markup to clipboard....\n     */\n    copyGenLinks() {\n        const copyLink = document.querySelector('.c-button--copy-compiled-link').getAttribute('id');\n        document.getElementById(copyLink).addEventListener('click', function (element) {\n            navigator.clipboard.writeText(document.getElementById('compiledCSS').innerText)\n                .then(() => {\n                    document.querySelector('.c-button--copy-compiled-link').innerText = 'COPIED!';\n                    setTimeout(function () {\n                        document.querySelector('.c-button--copy-compiled-link').innerText = 'COPY';\n                    }, 3000);\n                })\n                .catch(err => {\n                    console.error('Sorry! - Could not copy markup: ', err);\n                });\n        });\n    }\n    \n    /**\n     * Sending data to CSS compiler\n     */\n    sassComponentBuilder() {\n        \n        const self = this;\n        \n        if (!document.querySelector('.c-button--generate-css')) {\n            return;\n        }\n        \n        // Prepare to generate build\n        const generateCSS = document.querySelector('.c-button--generate-css').getAttribute('id');\n        document.getElementById(generateCSS).addEventListener('click', function (e) {\n            \n            self.changeMarkupState('preBuild', null);\n            \n            const componentArray = [];\n            const checkboxes = document.querySelectorAll('input[type=checkbox]:checked');\n            \n            // Loop through all component checkboxes\n            for (let i = 0; i < checkboxes.length; i++) {\n                componentArray.push(checkboxes[i].value);\n            }\n            \n            // Set display none to CSS Link Code area\n            if (!document.body.classList.contains('u-display--none')) {\n                document.querySelector('.online-compiled-components').classList.add('u-display--none');\n            }\n            \n            if (!componentArray.length > 0) {\n                return;\n            }\n            \n            // Get selected component values and create list of component from selection\n            for (let i = 0; i < checkboxes.length; i++) {\n                checkboxes[i].checked = false;\n                \n                let node = document.createElement(\"span\");\n                let nodeIcon = document.createElement(\"i\");\n                let textNode = document.createTextNode(componentArray[i]);\n                let textNodeIcon = document.createTextNode('extension');\n                \n                node.appendChild(textNode);\n                nodeIcon.appendChild(textNodeIcon);\n                \n                node.classList.add('component-list', 'comp-list-item-'+i, 'c-tags', 'c-tag--default');\n                nodeIcon.classList.add('c-icon', 'c-icon--size-sm', 'material-icons');\n                //node.setAttribute('disabled', 'disabled');\n                \n                document.querySelector('.selected-components').appendChild(node);\n                document.querySelector('.comp-list-item-'+i).prepend(nodeIcon);\n                \n            }\n            \n            // Create SCSS and Build CSS\n            self.changeMarkupState('build', null);\n            self.fetchFormData(componentArray);\n            \n            // Change markup\n            self.changeMarkupState('postBuild', null);\n        });\n    };\n    \n    \n    /**\n     * FetchData - Send componentData to node\n     * Build SCSS & compile SCC\n     * @param componentArray\n     */\n    fetchFormData(componentArray) {\n        const self = this;\n        \n        fetch(\"https://\"+window.location.hostname+\":1337/compilesasscomponent\", {\n            method: \"POST\",\n            mode: 'cors',\n            body: JSON.stringify({\n                \"payload\": componentArray\n            }),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                return res.json();\n            })\n            .then(res => {\n                // Wait for 10 secs until stuff is done....\n                setTimeout(function () {\n                    const cssLink = res.cssFile;\n                    const cssUrl = 'https://' + window.location.hostname + cssLink;\n                    \n                    self.changeMarkupState('result', cssUrl);\n                    self.copyGenLinks();\n                    \n                }, 2000);\n            })\n    };\n    \n    \n    /**\n     * Change stuff in markup\n     * @param cssUrl\n     */\n    changeMarkupState(buildState, cssUrl) {\n        \n        switch (buildState) {\n            \n            case \"preBuild\":\n                document.querySelector('.selected-components').innerHTML = '';\n                document.querySelector('.Selected-components-title').innerHTML = '';\n                break;\n            \n            case \"build\":\n                document.querySelector('.c-loader--text').classList.remove('u-display--none');\n                document.querySelector('.selected-components-loader').classList.remove('u-display--none');\n                document.querySelector('.Selected-components-title')\n                    .innerHTML = 'Compiling CSS with following components:';\n                break;\n            \n            case \"postBuild\":\n                document.querySelector('.c-button--generate-css').blur();\n                document.querySelector('.c-button--generate-css').innerHTML = 'Compiling CSS';\n                document.querySelector('.c-button--generate-css')\n                    .setAttribute('disabled', 'disabled');\n                break;\n            \n            case \"result\":\n                document.querySelector('.online-compiled-components').classList.remove('u-display--none');\n                document.querySelector('.selected-components-loader').classList.add('u-display--none');\n                document.querySelector('.c-loader--text').classList.add('u-display--none');\n                document.querySelector('.c-button--generate-css').innerHTML = 'Generate CSS';\n                document.querySelector('.c-button--generate-css').removeAttribute('disabled');\n                document.getElementById('css-code-template').setAttribute('href', cssUrl);\n                document.getElementById('css-code-template').innerHTML = cssUrl;\n                break;\n        }\n    };\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initBuild);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9idWlsZC9pbml0QnVpbGQuanM/M2Y1ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSwyQkFBMkIsdUJBQXVCO0FBQ2xEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkJBQTJCLHVCQUF1QjtBQUNsRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUztBQUNUOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWUsd0VBQVMsRUFBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AaGVsc2luZ2Jvcmctc3RhZC9zdHlsZWd1aWRlL2J1aWxkL2luaXRCdWlsZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIGluaXRCdWlsZCB7XG4gICAgXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuc2Fzc0NvbXBvbmVudEJ1aWxkZXIoKTtcbiAgICB9XG4gICAgXG4gICAgLyoqXG4gICAgICogQ29weSBNYXJrdXAgdG8gY2xpcGJvYXJkLi4uLlxuICAgICAqL1xuICAgIGNvcHlHZW5MaW5rcygpIHtcbiAgICAgICAgY29uc3QgY29weUxpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYy1idXR0b24tLWNvcHktY29tcGlsZWQtbGluaycpLmdldEF0dHJpYnV0ZSgnaWQnKTtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY29weUxpbmspLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICAgIG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb21waWxlZENTUycpLmlubmVyVGV4dClcbiAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jLWJ1dHRvbi0tY29weS1jb21waWxlZC1saW5rJykuaW5uZXJUZXh0ID0gJ0NPUElFRCEnO1xuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jLWJ1dHRvbi0tY29weS1jb21waWxlZC1saW5rJykuaW5uZXJUZXh0ID0gJ0NPUFknO1xuICAgICAgICAgICAgICAgICAgICB9LCAzMDAwKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdTb3JyeSEgLSBDb3VsZCBub3QgY29weSBtYXJrdXA6ICcsIGVycik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICAvKipcbiAgICAgKiBTZW5kaW5nIGRhdGEgdG8gQ1NTIGNvbXBpbGVyXG4gICAgICovXG4gICAgc2Fzc0NvbXBvbmVudEJ1aWxkZXIoKSB7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICAgICAgXG4gICAgICAgIGlmICghZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmMtYnV0dG9uLS1nZW5lcmF0ZS1jc3MnKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBQcmVwYXJlIHRvIGdlbmVyYXRlIGJ1aWxkXG4gICAgICAgIGNvbnN0IGdlbmVyYXRlQ1NTID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmMtYnV0dG9uLS1nZW5lcmF0ZS1jc3MnKS5nZXRBdHRyaWJ1dGUoJ2lkJyk7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGdlbmVyYXRlQ1NTKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHNlbGYuY2hhbmdlTWFya3VwU3RhdGUoJ3ByZUJ1aWxkJywgbnVsbCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IGNvbXBvbmVudEFycmF5ID0gW107XG4gICAgICAgICAgICBjb25zdCBjaGVja2JveGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnaW5wdXRbdHlwZT1jaGVja2JveF06Y2hlY2tlZCcpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBMb29wIHRocm91Z2ggYWxsIGNvbXBvbmVudCBjaGVja2JveGVzXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoZWNrYm94ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBjb21wb25lbnRBcnJheS5wdXNoKGNoZWNrYm94ZXNbaV0udmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBTZXQgZGlzcGxheSBub25lIHRvIENTUyBMaW5rIENvZGUgYXJlYVxuICAgICAgICAgICAgaWYgKCFkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5jb250YWlucygndS1kaXNwbGF5LS1ub25lJykpIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcub25saW5lLWNvbXBpbGVkLWNvbXBvbmVudHMnKS5jbGFzc0xpc3QuYWRkKCd1LWRpc3BsYXktLW5vbmUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKCFjb21wb25lbnRBcnJheS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBHZXQgc2VsZWN0ZWQgY29tcG9uZW50IHZhbHVlcyBhbmQgY3JlYXRlIGxpc3Qgb2YgY29tcG9uZW50IGZyb20gc2VsZWN0aW9uXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoZWNrYm94ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBjaGVja2JveGVzW2ldLmNoZWNrZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBsZXQgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgICAgICAgICAgICAgIGxldCBub2RlSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpXCIpO1xuICAgICAgICAgICAgICAgIGxldCB0ZXh0Tm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNvbXBvbmVudEFycmF5W2ldKTtcbiAgICAgICAgICAgICAgICBsZXQgdGV4dE5vZGVJY29uID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJ2V4dGVuc2lvbicpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIG5vZGUuYXBwZW5kQ2hpbGQodGV4dE5vZGUpO1xuICAgICAgICAgICAgICAgIG5vZGVJY29uLmFwcGVuZENoaWxkKHRleHROb2RlSWNvbik7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgbm9kZS5jbGFzc0xpc3QuYWRkKCdjb21wb25lbnQtbGlzdCcsICdjb21wLWxpc3QtaXRlbS0nK2ksICdjLXRhZ3MnLCAnYy10YWctLWRlZmF1bHQnKTtcbiAgICAgICAgICAgICAgICBub2RlSWNvbi5jbGFzc0xpc3QuYWRkKCdjLWljb24nLCAnYy1pY29uLS1zaXplLXNtJywgJ21hdGVyaWFsLWljb25zJyk7XG4gICAgICAgICAgICAgICAgLy9ub2RlLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCAnZGlzYWJsZWQnKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VsZWN0ZWQtY29tcG9uZW50cycpLmFwcGVuZENoaWxkKG5vZGUpO1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb21wLWxpc3QtaXRlbS0nK2kpLnByZXBlbmQobm9kZUljb24pO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBDcmVhdGUgU0NTUyBhbmQgQnVpbGQgQ1NTXG4gICAgICAgICAgICBzZWxmLmNoYW5nZU1hcmt1cFN0YXRlKCdidWlsZCcsIG51bGwpO1xuICAgICAgICAgICAgc2VsZi5mZXRjaEZvcm1EYXRhKGNvbXBvbmVudEFycmF5KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gQ2hhbmdlIG1hcmt1cFxuICAgICAgICAgICAgc2VsZi5jaGFuZ2VNYXJrdXBTdGF0ZSgncG9zdEJ1aWxkJywgbnVsbCk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgXG4gICAgXG4gICAgLyoqXG4gICAgICogRmV0Y2hEYXRhIC0gU2VuZCBjb21wb25lbnREYXRhIHRvIG5vZGVcbiAgICAgKiBCdWlsZCBTQ1NTICYgY29tcGlsZSBTQ0NcbiAgICAgKiBAcGFyYW0gY29tcG9uZW50QXJyYXlcbiAgICAgKi9cbiAgICBmZXRjaEZvcm1EYXRhKGNvbXBvbmVudEFycmF5KSB7XG4gICAgICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xuICAgICAgICBcbiAgICAgICAgZmV0Y2goXCJodHRwczovL1wiK3dpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZStcIjoxMzM3L2NvbXBpbGVzYXNzY29tcG9uZW50XCIsIHtcbiAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICBtb2RlOiAnY29ycycsXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgXCJwYXlsb2FkXCI6IGNvbXBvbmVudEFycmF5XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICAvLyBXYWl0IGZvciAxMCBzZWNzIHVudGlsIHN0dWZmIGlzIGRvbmUuLi4uXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNzc0xpbmsgPSByZXMuY3NzRmlsZTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY3NzVXJsID0gJ2h0dHBzOi8vJyArIHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSArIGNzc0xpbms7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBzZWxmLmNoYW5nZU1hcmt1cFN0YXRlKCdyZXN1bHQnLCBjc3NVcmwpO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmNvcHlHZW5MaW5rcygpO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB9LCAyMDAwKTtcbiAgICAgICAgICAgIH0pXG4gICAgfTtcbiAgICBcbiAgICBcbiAgICAvKipcbiAgICAgKiBDaGFuZ2Ugc3R1ZmYgaW4gbWFya3VwXG4gICAgICogQHBhcmFtIGNzc1VybFxuICAgICAqL1xuICAgIGNoYW5nZU1hcmt1cFN0YXRlKGJ1aWxkU3RhdGUsIGNzc1VybCkge1xuICAgICAgICBcbiAgICAgICAgc3dpdGNoIChidWlsZFN0YXRlKSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNhc2UgXCJwcmVCdWlsZFwiOlxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWxlY3RlZC1jb21wb25lbnRzJykuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLlNlbGVjdGVkLWNvbXBvbmVudHMtdGl0bGUnKS5pbm5lckhUTUwgPSAnJztcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY2FzZSBcImJ1aWxkXCI6XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmMtbG9hZGVyLS10ZXh0JykuY2xhc3NMaXN0LnJlbW92ZSgndS1kaXNwbGF5LS1ub25lJyk7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlbGVjdGVkLWNvbXBvbmVudHMtbG9hZGVyJykuY2xhc3NMaXN0LnJlbW92ZSgndS1kaXNwbGF5LS1ub25lJyk7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLlNlbGVjdGVkLWNvbXBvbmVudHMtdGl0bGUnKVxuICAgICAgICAgICAgICAgICAgICAuaW5uZXJIVE1MID0gJ0NvbXBpbGluZyBDU1Mgd2l0aCBmb2xsb3dpbmcgY29tcG9uZW50czonO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjYXNlIFwicG9zdEJ1aWxkXCI6XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmMtYnV0dG9uLS1nZW5lcmF0ZS1jc3MnKS5ibHVyKCk7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmMtYnV0dG9uLS1nZW5lcmF0ZS1jc3MnKS5pbm5lckhUTUwgPSAnQ29tcGlsaW5nIENTUyc7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmMtYnV0dG9uLS1nZW5lcmF0ZS1jc3MnKVxuICAgICAgICAgICAgICAgICAgICAuc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjYXNlIFwicmVzdWx0XCI6XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm9ubGluZS1jb21waWxlZC1jb21wb25lbnRzJykuY2xhc3NMaXN0LnJlbW92ZSgndS1kaXNwbGF5LS1ub25lJyk7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlbGVjdGVkLWNvbXBvbmVudHMtbG9hZGVyJykuY2xhc3NMaXN0LmFkZCgndS1kaXNwbGF5LS1ub25lJyk7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmMtbG9hZGVyLS10ZXh0JykuY2xhc3NMaXN0LmFkZCgndS1kaXNwbGF5LS1ub25lJyk7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmMtYnV0dG9uLS1nZW5lcmF0ZS1jc3MnKS5pbm5lckhUTUwgPSAnR2VuZXJhdGUgQ1NTJztcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYy1idXR0b24tLWdlbmVyYXRlLWNzcycpLnJlbW92ZUF0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY3NzLWNvZGUtdGVtcGxhdGUnKS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBjc3NVcmwpO1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjc3MtY29kZS10ZW1wbGF0ZScpLmlubmVySFRNTCA9IGNzc1VybDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGluaXRCdWlsZDtcblxuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/build/initBuild.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/app.js":
/*!********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/app.js ***!
  \********************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _expand_section__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expand-section */ \"./node_modules/@helsingborg-stad/styleguide/source/js/expand-section.js\");\n/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ \"./node_modules/@helsingborg-stad/styleguide/source/js/filter.js\");\n/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sort */ \"./node_modules/@helsingborg-stad/styleguide/source/js/sort.js\");\n/* harmony import */ var _toggle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./toggle */ \"./node_modules/@helsingborg-stad/styleguide/source/js/toggle.js\");\n/* harmony import */ var _menu__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./menu */ \"./node_modules/@helsingborg-stad/styleguide/source/js/menu.js\");\n/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modal */ \"./node_modules/@helsingborg-stad/styleguide/source/js/modal.js\");\n/* harmony import */ var _steppers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./steppers */ \"./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js\");\n/* harmony import */ var _image__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./image */ \"./node_modules/@helsingborg-stad/styleguide/source/js/image.js\");\n/* harmony import */ var _splitButton__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./splitButton */ \"./node_modules/@helsingborg-stad/styleguide/source/js/splitButton.js\");\n/* harmony import */ var _dropdown__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dropdown */ \"./node_modules/@helsingborg-stad/styleguide/source/js/dropdown.js\");\n/* harmony import */ var _fields__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./fields */ \"./node_modules/@helsingborg-stad/styleguide/source/js/fields.js\");\n/* harmony import */ var _slider__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./slider */ \"./node_modules/@helsingborg-stad/styleguide/source/js/slider.js\");\n/* harmony import */ var _calendar__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./calendar */ \"./node_modules/@helsingborg-stad/styleguide/source/js/calendar.js\");\n/* harmony import */ var _tile__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./tile */ \"./node_modules/@helsingborg-stad/styleguide/source/js/tile.js\");\n/* harmony import */ var _notification__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./notification */ \"./node_modules/@helsingborg-stad/styleguide/source/js/notification.js\");\n/* harmony import */ var _notificationDoc__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./notificationDoc */ \"./node_modules/@helsingborg-stad/styleguide/source/js/notificationDoc.js\");\n/* harmony import */ var _build_initBuild__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../build/initBuild */ \"./node_modules/@helsingborg-stad/styleguide/build/initBuild.js\");\n/* harmony import */ var _sidebar__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./sidebar */ \"./node_modules/@helsingborg-stad/styleguide/source/js/sidebar.js\");\n/* harmony import */ var _dynamicSidebar__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./dynamicSidebar */ \"./node_modules/@helsingborg-stad/styleguide/source/js/dynamicSidebar.js\");\n/* harmony import */ var _navbar__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./navbar */ \"./node_modules/@helsingborg-stad/styleguide/source/js/navbar.js\");\n/* harmony import */ var _table__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./table */ \"./node_modules/@helsingborg-stad/styleguide/source/js/table.js\");\n/* harmony import */ var _segment__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./segment */ \"./node_modules/@helsingborg-stad/styleguide/source/js/segment.js\");\n/* harmony import */ var _mediaQuery__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./mediaQuery */ \"./node_modules/@helsingborg-stad/styleguide/source/js/mediaQuery.js\");\n/* harmony import */ var _pagination__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./pagination */ \"./node_modules/@helsingborg-stad/styleguide/source/js/pagination.js\");\n/* harmony import */ var _resizeByChildren__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./resizeByChildren */ \"./node_modules/@helsingborg-stad/styleguide/source/js/resizeByChildren.js\");\n/* harmony import */ var _keepInViewPort__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./keepInViewPort */ \"./node_modules/@helsingborg-stad/styleguide/source/js/keepInViewPort.js\");\n/* harmony import */ var _datepicker__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./datepicker */ \"./node_modules/@helsingborg-stad/styleguide/source/js/datepicker.js\");\n/* harmony import */ var _helpers_swipe__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./helpers/swipe */ \"./node_modules/@helsingborg-stad/styleguide/source/js/helpers/swipe.js\");\n/* harmony import */ var _helpers_swipe__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(_helpers_swipe__WEBPACK_IMPORTED_MODULE_27__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObject(_expand_section__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n\nconst SortInstance = new _sort__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\nconst ToggleInstance = new _toggle__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\nconst SplitButtonInstance = new _splitButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"];\nconst DropdownInstance = new _dropdown__WEBPACK_IMPORTED_MODULE_9__[\"default\"];\nconst EventCalendarInstance = new _calendar__WEBPACK_IMPORTED_MODULE_12__[\"default\"];\nconst TilesInstance = new _tile__WEBPACK_IMPORTED_MODULE_13__[\"default\"];\nconst NotificationInstance = new _notification__WEBPACK_IMPORTED_MODULE_14__[\"default\"];\nconst NotificationDocInstance = new _notificationDoc__WEBPACK_IMPORTED_MODULE_15__[\"default\"];\nconst SidebarInstance = new _sidebar__WEBPACK_IMPORTED_MODULE_17__[\"default\"];\nconst NavbarInstance = new _navbar__WEBPACK_IMPORTED_MODULE_19__[\"default\"]();\nconst ContainerMediaQueryInstance = new _mediaQuery__WEBPACK_IMPORTED_MODULE_22__[\"default\"]();\nconst KeepInViewPortInstance = new _keepInViewPort__WEBPACK_IMPORTED_MODULE_25__[\"default\"](); \nconst ResizeByChildrenInstance = new _resizeByChildren__WEBPACK_IMPORTED_MODULE_24__[\"default\"](); \n\nconst tables = document.querySelectorAll('.c-table');\nif (tables.length > 0) {\n    for (let table of tables) {\n        const TableInstance = new _table__WEBPACK_IMPORTED_MODULE_20__[\"default\"](table);\n    }\n}\t\n\nconst sliders = document.querySelectorAll('.c-slider');\nif (sliders) {\n    sliders.forEach(slider => {\n        const SliderInstance = new _slider__WEBPACK_IMPORTED_MODULE_11__[\"default\"](slider);\n    });\n}\n\nconst segments = document.querySelectorAll('.c-segment');\nif (segments) {\n    segments.forEach(segment => {\n        const SegmentInstance = new _segment__WEBPACK_IMPORTED_MODULE_21__[\"default\"](segment);\n    });\n}\n\nconst paginations = document.querySelectorAll('[js-pagination-target]');\nif(paginations) {\n    paginations.forEach((pagination) => {\n        const paginationInstance = new _pagination__WEBPACK_IMPORTED_MODULE_23__[\"default\"](pagination);\n    })\n}\n\n\nSortInstance.applySort();\nToggleInstance.applyToggle();\nDropdownInstance.setValidTargets();\nSplitButtonInstance.syncSplitButton();\nEventCalendarInstance.initiateCalendar();\nTilesInstance.initTiles();\nNotificationDocInstance.addListener();\nNotificationInstance.setup();\nSidebarInstance.applySidebar();\n\n\n// Dynamic Sidebars\nconst DynamicSidebarInstance = new _dynamicSidebar__WEBPACK_IMPORTED_MODULE_18__[\"default\"]();\nDynamicSidebarInstance.applySidebar();\n\nconst filter = new _filter__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n\n// Modal\nconst ModalInstance = new _modal__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\nModalInstance.enableModals();\n\n// Steppers\nconst SteppersInstance = new _steppers__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\nSteppersInstance.enableStepper();\n\n// Menu\nconst MenuInstance = new _menu__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\n\nconst FieldsInstance = new _fields__WEBPACK_IMPORTED_MODULE_10__[\"default\"]();\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvYXBwLmpzPzU3YjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTZDO0FBQ2Y7QUFDSjtBQUNJO0FBQ0o7QUFDRTtBQUNNO0FBQ047QUFDWTtBQUNOO0FBQ0o7QUFDQTtBQUNTO0FBQ1o7QUFDZTtBQUNNO0FBQ0Y7QUFDZDtBQUNjO0FBQ2hCO0FBQ0Y7QUFDSTtBQUNlO0FBQ1Q7QUFDWTtBQUNKOzs7QUFHeEI7QUFDRzs7QUFFekIsK0RBQWE7O0FBRWIseUJBQXlCLDZDQUFJO0FBQzdCLDJCQUEyQiwrQ0FBTTtBQUNqQyxnQ0FBZ0Msb0RBQVc7QUFDM0MsNkJBQTZCLGlEQUFRO0FBQ3JDLGtDQUFrQyxrREFBYTtBQUMvQywwQkFBMEIsOENBQUs7QUFDL0IsaUNBQWlDLHNEQUFZO0FBQzdDLG9DQUFvQyx5REFBZTtBQUNuRCw0QkFBNEIsaURBQU87QUFDbkMsMkJBQTJCLGdEQUFNO0FBQ2pDLHdDQUF3QyxvREFBbUI7QUFDM0QsbUNBQW1DLHdEQUFjLEc7QUFDakQscUNBQXFDLDBEQUFnQixHOztBQUVyRDtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsK0NBQUs7QUFDdkM7QUFDQSxDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxnREFBTTtBQUN6QyxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLGlEQUFPO0FBQzNDLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsb0RBQVU7QUFDakQsS0FBSztBQUNMOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0EsbUNBQW1DLHdEQUFjO0FBQ2pEOztBQUVBLG1CQUFtQiwrQ0FBTTs7QUFFekI7QUFDQSwwQkFBMEIsOENBQUs7QUFDL0I7O0FBRUE7QUFDQSw2QkFBNkIsaURBQVE7QUFDckM7O0FBRUE7QUFDQSx5QkFBeUIsNkNBQUk7O0FBRTdCLDJCQUEyQixnREFBTSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AaGVsc2luZ2Jvcmctc3RhZC9zdHlsZWd1aWRlL3NvdXJjZS9qcy9hcHAuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwYW5kU2VjdGlvbiBmcm9tICcuL2V4cGFuZC1zZWN0aW9uJztcbmltcG9ydCBGaWx0ZXIgZnJvbSAnLi9maWx0ZXInO1xuaW1wb3J0IFNvcnQgZnJvbSAnLi9zb3J0JztcbmltcG9ydCBUb2dnbGUgZnJvbSAnLi90b2dnbGUnO1xuaW1wb3J0IE1lbnUgZnJvbSAnLi9tZW51JztcbmltcG9ydCBNb2RhbCBmcm9tICcuL21vZGFsJztcbmltcG9ydCBTdGVwcGVycyBmcm9tICcuL3N0ZXBwZXJzJztcbmltcG9ydCBJbWFnZSBmcm9tICcuL2ltYWdlJztcbmltcG9ydCBTcGxpdEJ1dHRvbiBmcm9tICcuL3NwbGl0QnV0dG9uJztcbmltcG9ydCBEcm9wZG93biBmcm9tICcuL2Ryb3Bkb3duJztcbmltcG9ydCBGaWVsZHMgZnJvbSAnLi9maWVsZHMnO1xuaW1wb3J0IFNsaWRlciBmcm9tICcuL3NsaWRlcic7XG5pbXBvcnQgRXZlbnRDYWxlbmRhciBmcm9tICcuL2NhbGVuZGFyJztcbmltcG9ydCBUaWxlcyBmcm9tICcuL3RpbGUnO1xuaW1wb3J0IE5vdGlmaWNhdGlvbiBmcm9tICcuL25vdGlmaWNhdGlvbic7XG5pbXBvcnQgTm90aWZpY2F0aW9uRG9jIGZyb20gJy4vbm90aWZpY2F0aW9uRG9jJztcbmltcG9ydCBpbml0QnVpbGQgZnJvbSAnLi4vLi4vYnVpbGQvaW5pdEJ1aWxkJztcbmltcG9ydCBTaWRlYmFyIGZyb20gJy4vc2lkZWJhcic7XG5pbXBvcnQgRHluYW1pY1NpZGViYXIgZnJvbSAnLi9keW5hbWljU2lkZWJhcic7XG5pbXBvcnQgTmF2YmFyIGZyb20gJy4vbmF2YmFyJztcbmltcG9ydCBUYWJsZSBmcm9tICcuL3RhYmxlJztcbmltcG9ydCBTZWdtZW50IGZyb20gJy4vc2VnbWVudCc7XG5pbXBvcnQgQ29udGFpbmVyTWVkaWFRdWVyeSBmcm9tICcuL21lZGlhUXVlcnknO1xuaW1wb3J0IFBhZ2luYXRpb24gZnJvbSAnLi9wYWdpbmF0aW9uJztcbmltcG9ydCBSZXNpemVCeUNoaWxkcmVuIGZyb20gJy4vcmVzaXplQnlDaGlsZHJlbic7XG5pbXBvcnQgS2VlcEluVmlld1BvcnQgZnJvbSAnLi9rZWVwSW5WaWV3UG9ydCc7XG5cblxuaW1wb3J0ICcuL2RhdGVwaWNrZXInO1xuaW1wb3J0ICcuL2hlbHBlcnMvc3dpcGUnO1xuXG5leHBhbmRTZWN0aW9uKCk7XG5cbmNvbnN0IFNvcnRJbnN0YW5jZSA9IG5ldyBTb3J0O1xuY29uc3QgVG9nZ2xlSW5zdGFuY2UgPSBuZXcgVG9nZ2xlO1xuY29uc3QgU3BsaXRCdXR0b25JbnN0YW5jZSA9IG5ldyBTcGxpdEJ1dHRvbjtcbmNvbnN0IERyb3Bkb3duSW5zdGFuY2UgPSBuZXcgRHJvcGRvd247XG5jb25zdCBFdmVudENhbGVuZGFySW5zdGFuY2UgPSBuZXcgRXZlbnRDYWxlbmRhcjtcbmNvbnN0IFRpbGVzSW5zdGFuY2UgPSBuZXcgVGlsZXM7XG5jb25zdCBOb3RpZmljYXRpb25JbnN0YW5jZSA9IG5ldyBOb3RpZmljYXRpb247XG5jb25zdCBOb3RpZmljYXRpb25Eb2NJbnN0YW5jZSA9IG5ldyBOb3RpZmljYXRpb25Eb2M7XG5jb25zdCBTaWRlYmFySW5zdGFuY2UgPSBuZXcgU2lkZWJhcjtcbmNvbnN0IE5hdmJhckluc3RhbmNlID0gbmV3IE5hdmJhcigpO1xuY29uc3QgQ29udGFpbmVyTWVkaWFRdWVyeUluc3RhbmNlID0gbmV3IENvbnRhaW5lck1lZGlhUXVlcnkoKTtcbmNvbnN0IEtlZXBJblZpZXdQb3J0SW5zdGFuY2UgPSBuZXcgS2VlcEluVmlld1BvcnQoKTsgXG5jb25zdCBSZXNpemVCeUNoaWxkcmVuSW5zdGFuY2UgPSBuZXcgUmVzaXplQnlDaGlsZHJlbigpOyBcblxuY29uc3QgdGFibGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmMtdGFibGUnKTtcbmlmICh0YWJsZXMubGVuZ3RoID4gMCkge1xuICAgIGZvciAobGV0IHRhYmxlIG9mIHRhYmxlcykge1xuICAgICAgICBjb25zdCBUYWJsZUluc3RhbmNlID0gbmV3IFRhYmxlKHRhYmxlKTtcbiAgICB9XG59XHRcblxuY29uc3Qgc2xpZGVycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jLXNsaWRlcicpO1xuaWYgKHNsaWRlcnMpIHtcbiAgICBzbGlkZXJzLmZvckVhY2goc2xpZGVyID0+IHtcbiAgICAgICAgY29uc3QgU2xpZGVySW5zdGFuY2UgPSBuZXcgU2xpZGVyKHNsaWRlcik7XG4gICAgfSk7XG59XG5cbmNvbnN0IHNlZ21lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmMtc2VnbWVudCcpO1xuaWYgKHNlZ21lbnRzKSB7XG4gICAgc2VnbWVudHMuZm9yRWFjaChzZWdtZW50ID0+IHtcbiAgICAgICAgY29uc3QgU2VnbWVudEluc3RhbmNlID0gbmV3IFNlZ21lbnQoc2VnbWVudCk7XG4gICAgfSk7XG59XG5cbmNvbnN0IHBhZ2luYXRpb25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2pzLXBhZ2luYXRpb24tdGFyZ2V0XScpO1xuaWYocGFnaW5hdGlvbnMpIHtcbiAgICBwYWdpbmF0aW9ucy5mb3JFYWNoKChwYWdpbmF0aW9uKSA9PiB7XG4gICAgICAgIGNvbnN0IHBhZ2luYXRpb25JbnN0YW5jZSA9IG5ldyBQYWdpbmF0aW9uKHBhZ2luYXRpb24pO1xuICAgIH0pXG59XG5cblxuU29ydEluc3RhbmNlLmFwcGx5U29ydCgpO1xuVG9nZ2xlSW5zdGFuY2UuYXBwbHlUb2dnbGUoKTtcbkRyb3Bkb3duSW5zdGFuY2Uuc2V0VmFsaWRUYXJnZXRzKCk7XG5TcGxpdEJ1dHRvbkluc3RhbmNlLnN5bmNTcGxpdEJ1dHRvbigpO1xuRXZlbnRDYWxlbmRhckluc3RhbmNlLmluaXRpYXRlQ2FsZW5kYXIoKTtcblRpbGVzSW5zdGFuY2UuaW5pdFRpbGVzKCk7XG5Ob3RpZmljYXRpb25Eb2NJbnN0YW5jZS5hZGRMaXN0ZW5lcigpO1xuTm90aWZpY2F0aW9uSW5zdGFuY2Uuc2V0dXAoKTtcblNpZGViYXJJbnN0YW5jZS5hcHBseVNpZGViYXIoKTtcblxuXG4vLyBEeW5hbWljIFNpZGViYXJzXG5jb25zdCBEeW5hbWljU2lkZWJhckluc3RhbmNlID0gbmV3IER5bmFtaWNTaWRlYmFyKCk7XG5EeW5hbWljU2lkZWJhckluc3RhbmNlLmFwcGx5U2lkZWJhcigpO1xuXG5jb25zdCBmaWx0ZXIgPSBuZXcgRmlsdGVyKCk7XG5cbi8vIE1vZGFsXG5jb25zdCBNb2RhbEluc3RhbmNlID0gbmV3IE1vZGFsO1xuTW9kYWxJbnN0YW5jZS5lbmFibGVNb2RhbHMoKTtcblxuLy8gU3RlcHBlcnNcbmNvbnN0IFN0ZXBwZXJzSW5zdGFuY2UgPSBuZXcgU3RlcHBlcnM7XG5TdGVwcGVyc0luc3RhbmNlLmVuYWJsZVN0ZXBwZXIoKTtcblxuLy8gTWVudVxuY29uc3QgTWVudUluc3RhbmNlID0gbmV3IE1lbnUoKTtcblxuY29uc3QgRmllbGRzSW5zdGFuY2UgPSBuZXcgRmllbGRzKCk7XG5cblxuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/app.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/calendar-javascript-lib.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/calendar-javascript-lib.js ***!
  \****************************************************************************************/
/*! exports provided: Calendar, Organizer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Calendar\", function() { return Calendar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Organizer\", function() { return Organizer; });\n/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modal */ \"./node_modules/@helsingborg-stad/styleguide/source/js/modal.js\");\n\r\n\r\n\r\n\r\nfunction Calendar(id, size, labelSettings, colors, options) {\r\n    this.id = id;\r\n    this.size = size;\r\n    this.labelSettings = labelSettings;\r\n    this.colors = colors;\r\n\r\n    this.initday = 0;\r\n\r\n    options = options || {};\r\n\r\n    this.indicator = true;\r\n    if (options.indicator != undefined) this.indicator = options.indicator;\r\n\r\n    this.indicator_type = 1;\r\n    if (options.indicator_type != undefined) this.indicator_type = options.indicator_type;\r\n\r\n    this.indicator_pos  = (this.indicator_type == 1) ? \"bottom\" : \"top\";\r\n    if (options.indicator_pos != undefined) this.indicator_pos = options.indicator_pos;\r\n\r\n    var listPlaceholder = document.createElement(\"LI\");\r\n    listPlaceholder.className = \"cjslib-list-placeholder\";\r\n    listPlaceholder.appendChild(document.createTextNode(\"No events on this day\"));\r\n    listPlaceholder.style = \"text-align: center; padding: 20px 0px;\";\r\n    \r\n    this.placeholder = listPlaceholder.outerHTML;\r\n    if (options.placeholder != undefined) this.placeholder = options.placeholder;\r\n\r\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    if (options.months != undefined && options.months.length == 12) months = options.months;\r\n\r\n    var label = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    if (options.days != undefined && options.days.length == 7) label = options.days;\r\n\r\n    this.months = months;\r\n    this.defaultLabels = label;\r\n\r\n    this.label = [];\r\n    this.labels = [];\r\n    for (var i = 0; i < 7; i++) {\r\n        this.label.push(label[label.indexOf(labelSettings[0]) + this.label.length >= label.length ? Math.abs(label.length - (label.indexOf(labelSettings[0]) + this.label.length)) : label.indexOf(labelSettings[0]) + this.label.length]);\r\n    }\r\n    for (var i = 0; i < 7; i++) {\r\n        this.labels.push(this.label[i].substring(0, labelSettings[1] > 3 ? 3 : labelSettings[1]));\r\n    }\r\n\r\n    this.date = new Date();\r\n    this.today = new Date();\r\n\r\n    this.history = [];\r\n\r\n    this.draw();\r\n    this.update();\r\n\r\n    this.setOnClickListener('days-blocks');\r\n    this.setOnClickListener('month-slider');\r\n    this.setOnClickListener('year-slider');\r\n}\r\n\r\nCalendar.prototype = {\r\n    constructor: Calendar,\r\n    back: function back(func) {\r\n        var date = this.date;\r\n        var lastDay = new Date(date.getMonth() + 1 > 11 ? date.getFullYear() + 1 : date.getFullYear(), date.getMonth() + 1 > 12 ? 0 : date.getMonth() + 1, 0).getDate();\r\n        var previousLastDay = new Date(date.getMonth() < 0 ? date.getFullYear() - 1 : date.getFullYear(), date.getMonth() < 0 ? 11 : date.getMonth(), 0).getDate();\r\n\r\n        if (func == \"month\") {\r\n            if (date.getDate() > previousLastDay) {\r\n                this.changeDateTo(previousLastDay);\r\n            }\r\n            if (date.getMonth() > 0) date.setMonth(date.getMonth() - 1);else {\r\n                date.setMonth(11);\r\n                date.setFullYear(date.getFullYear() - 1);\r\n            }\r\n        } else if (func == \"year\") date.setFullYear(date.getFullYear() - 1);\r\n\r\n        this.update();\r\n    },\r\n    next: function next(func) {\r\n        var date = this.date;\r\n        var lastDay = new Date(date.getMonth() + 1 > 11 ? date.getFullYear() + 1 : date.getFullYear(), date.getMonth() + 1 > 12 ? 0 : date.getMonth() + 1, 0).getDate();\r\n        var soonLastDay = new Date(date.getMonth() + 2 > 11 ? date.getFullYear() + 1 : date.getFullYear(), date.getMonth() + 2 > 12 ? 0 : date.getMonth() + 2, 0).getDate();\r\n\r\n        if (func == \"month\") {\r\n            if (date.getDate() > soonLastDay) {\r\n                this.changeDateTo(soonLastDay);\r\n            }\r\n            if (date.getMonth() != 11) date.setMonth(date.getMonth() + 1);else {\r\n                date.setMonth(0);\r\n                date.setFullYear(date.getFullYear() + 1);\r\n            }\r\n        } else date.setFullYear(date.getFullYear() + 1);\r\n\r\n        this.update();\r\n    },\r\n    changeDateTo: function changeDateTo(theDay, theBlock) {\r\n        if (theBlock >= 31 && theDay <= 11 || theBlock <= 6 && theDay >= 8) {\r\n            if (theBlock >= 31 && theDay <= 11) this.next('month');else if (theBlock <= 6 && theDay >= 8) this.back('month');\r\n\r\n            this.date.setDate(theDay);\r\n\r\n            var calendarInstance = this;\r\n            setTimeout(function () {\r\n                calendarInstance.update();\r\n            }, 1);\r\n\r\n            return true;\r\n        } else this.date.setDate(theDay);\r\n    },\r\n    getDateString: function getDateString() {\r\n        return this.months[this.date.getMonth()] + \" \" + this.date.getDate() + \", \" + this.date.getFullYear();\r\n    }\r\n};\r\n\r\nCalendar.prototype.draw = function () {\r\n    var backSvg = '<svg style=\"width: 24px; height: 24px;\" viewBox=\"0 0 24 24\"><path fill=\"' + this.colors[3] + '\" d=\"M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z\"></path></svg>';\r\n    var nextSvg = '<svg style=\"width: 24px; height: 24px;\" viewBox=\"0 0 24 24\"><path fill=\"' + this.colors[3] + '\" d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\"></path></svg>';\r\n\r\n    var theCalendar = document.createElement(\"DIV\");\r\n    theCalendar.className = \"cjslib-calendar cjslib-size-\" + this.size;\r\n\r\n    //document.getElementById(this.id).appendChild(theCalendar.cloneNode(true));\r\n\r\n    var theContainers = [],\r\n        theNames = ['year', 'month', 'labels', 'days'];\r\n    for (var i = 0; i < theNames.length; i++) {\r\n        theContainers[i] = document.createElement(\"DIV\");\r\n        theContainers[i].className = \"cjslib-\" + theNames[i];\r\n\r\n        if (theNames[i] != \"days\") {\r\n            if (theNames[i] != \"month\") {\r\n                theContainers[i].style.backgroundColor = this.colors[1];\r\n                theContainers[i].style.color = this.colors[3];\r\n\r\n                if (theNames[i] != \"labels\") {\r\n                    var backSlider = document.createElement(\"DIV\");\r\n                    backSlider.id = this.id + \"-year-back\";\r\n                    backSlider.insertAdjacentHTML('beforeend', backSvg);\r\n                    theContainers[i].appendChild(backSlider.cloneNode(true));\r\n\r\n                    var theText = document.createElement(\"SPAN\");\r\n                    theText.id = this.id + \"-\" + theNames[i];\r\n                    theContainers[i].appendChild(theText.cloneNode(true));\r\n\r\n                    var nextSlider = document.createElement(\"DIV\");\r\n                    nextSlider.id = this.id + \"-year-next\";\r\n                    nextSlider.insertAdjacentHTML('beforeend', nextSvg);\r\n                    theContainers[i].appendChild(nextSlider.cloneNode(true));\r\n                }\r\n            } else {\r\n                theContainers[i].style.backgroundColor = this.colors[0];\r\n                theContainers[i].style.color = this.colors[2];\r\n\r\n                var backSlider = document.createElement(\"DIV\");\r\n                backSlider.id = this.id + \"-month-back\";\r\n                backSlider.insertAdjacentHTML('beforeend', backSvg);\r\n                theContainers[i].appendChild(backSlider.cloneNode(true));\r\n\r\n                var theText = document.createElement(\"SPAN\");\r\n                theText.id = this.id + \"-\" + theNames[i];\r\n                theContainers[i].appendChild(theText.cloneNode(true));\r\n\r\n                var nextSlider = document.createElement(\"DIV\");\r\n                nextSlider.id = this.id + \"-month-next\";\r\n                nextSlider.insertAdjacentHTML('beforeend', nextSvg);\r\n                theContainers[i].appendChild(nextSlider.cloneNode(true));\r\n            }\r\n        }\r\n    }\r\n\r\n    for (var i = 0; i < this.labels.length; i++) {\r\n        var theLabel = document.createElement(\"SPAN\");\r\n        theLabel.id = this.id + \"-label-\" + (i + 1);\r\n        theLabel.appendChild(document.createTextNode(this.labels[i]).cloneNode(true));\r\n\r\n        theContainers[2].appendChild(theLabel.cloneNode(true));\r\n    }\r\n\r\n    var theRows = [],\r\n        theDays = [],\r\n        theRadios = [];\r\n    for (var i = 0; i < 6; i++) {\r\n        theRows[i] = document.createElement(\"DIV\");\r\n        theRows[i].className = \"cjslib-row\";\r\n    }\r\n\r\n    for (var i = 0, j = 0; i < 42; i++) {\r\n        theRadios[i] = document.createElement(\"INPUT\");\r\n        theRadios[i].className = \"cjslib-day-radios\";\r\n        theRadios[i].type = \"button\";\r\n        theRadios[i].name = this.id + \"-day-radios\";\r\n        theRadios[i].id = this.id + \"-day-radio-\" + (i + 1);\r\n        theRadios[i].setAttribute('data-open','examplemodalid');\r\n\r\n        theDays[i] = document.createElement(\"LABEL\");\r\n        theDays[i].className = \"cjslib-day\";\r\n        theDays[i].htmlFor = this.id + \"-day-radio-\" + (i + 1);\r\n        theDays[i].id = this.id + \"-day-\" + (i + 1);\r\n        theDays[i].setAttribute('data-open','examplemodalid');\r\n\r\n        var theText = document.createElement(\"SPAN\");\r\n        theText.className = \"cjslib-day-num\";\r\n        theText.id = this.id + \"-day-num-\" + (i + 1);\r\n\r\n        theDays[i].appendChild(theText.cloneNode(true));\r\n\r\n        if (this.indicator) {\r\n            var theIndicator = document.createElement(\"SPAN\");\r\n            theIndicator.className = \"cjslib-day-indicator cjslib-indicator-pos-\" + this.indicator_pos;\r\n                if (this.indicator_type == 1) theIndicator.className += \" cjslib-indicator-type-numeric\";\r\n            theIndicator.id = this.id + \"-day-indicator-\" + (i + 1);\r\n\r\n            theDays[i].appendChild(theIndicator.cloneNode(true));\r\n        }\r\n\r\n        theRows[j].appendChild(theRadios[i].cloneNode(true));\r\n        theRows[j].appendChild(theDays[i].cloneNode(true));\r\n\r\n        if ((i + 1) % 7 == 0) {\r\n            j++;\r\n        }\r\n    }\r\n\r\n    for (var i = 0; i < 6; i++) {\r\n        theContainers[3].appendChild(theRows[i].cloneNode(true));\r\n    }\r\n\r\n    for (var i = 0; i < theContainers.length; i++) {\r\n        theCalendar.appendChild(theContainers[i].cloneNode(true));\r\n    }\r\n\r\n    document.getElementById(this.id).innerHTML = \"<style>.cjslib-day-indicator { color: \" + this.colors[1] + \"; background-color: \" + this.colors[1] + \"; } .cjslib-indicator-type-numeric { color: \" + this.colors[2] + \"; } .cjslib-day.cjslib-day-today > .cjslib-day-num { border-color: \" + this.colors[1] + \" !important; }</style>\";\r\n    document.getElementById(this.id).appendChild(theCalendar.cloneNode(true));\r\n};\r\n\r\nCalendar.prototype.update = function () {\r\n    document.getElementById(this.id + '-year').innerHTML = this.date.getFullYear();\r\n    document.getElementById(this.id + '-month').innerHTML = this.months[this.date.getMonth()];\r\n\r\n    for (var i = 1; i <= 42; i++) {\r\n        document.getElementById(this.id + '-day-num-' + i).innerHTML = \"\";\r\n        document.getElementById(this.id + '-day-' + i).className = this.id + \" cjslib-day cjslib-day-listed\";\r\n    }\r\n\r\n    var firstDay = new Date(this.date.getFullYear(), this.date.getMonth(), 1).getDay();\r\n    var lastDay = new Date(this.date.getMonth() + 1 > 11 ? this.date.getFullYear() + 1 : this.date.getFullYear(), this.date.getMonth() + 1 > 12 ? 0 : this.date.getMonth() + 1, 0).getDate();\r\n\r\n    var previousLastDay = new Date(this.date.getMonth() < 0 ? this.date.getFullYear() - 1 : this.date.getFullYear(), this.date.getMonth() < 0 ? 11 : this.date.getMonth(), 0).getDate();\r\n\r\n    this.initday = this.label.indexOf(this.defaultLabels[firstDay]);\r\n\r\n    var firstDayLabel = this.defaultLabels[firstDay];\r\n    var firstDayLabelPos = this.label.indexOf(firstDayLabel);\r\n\r\n    for (var i = 0, j = previousLastDay; i < firstDayLabelPos; i++, j--) {\r\n        document.getElementById(this.id + '-day-num-' + (firstDayLabelPos - i)).innerHTML = j;\r\n        document.getElementById(this.id + '-day-' + (firstDayLabelPos - i)).className = this.id + \" cjslib-day cjslib-day-diluted\";\r\n    }\r\n\r\n    for (var i = 1; i <= lastDay; i++) {\r\n        document.getElementById(this.id + '-day-num-' + (firstDayLabelPos + i)).innerHTML = i;\r\n\r\n        if (i == this.date.getDate()) document.getElementById(this.id + '-day-radio-' + (firstDayLabelPos + i)).checked = true;\r\n\r\n        if (this.date.getMonth() == this.today.getMonth())\r\n            if (i == this.today.getDate()) document.getElementById(this.id + '-day-' + (firstDayLabelPos + i)).className += \" cjslib-day-today\";\r\n    }\r\n\r\n    for (var i = lastDay + 1, j = 1; firstDayLabelPos + i <= 42; i++, j++) {\r\n        document.getElementById(this.id + '-day-num-' + (firstDayLabelPos + i)).innerHTML = j;\r\n        document.getElementById(this.id + '-day-' + (firstDayLabelPos + i)).className = this.id + \" cjslib-day cjslib-day-diluted\";\r\n    }\r\n};\r\n\r\nCalendar.prototype.setupBlock = function (blockId, calendarInstance, callback) {\r\n    document.getElementById(calendarInstance.id + \"-day-\" + blockId).onclick = function () {\r\n        if (document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).innerHTML.length > 0) {\r\n            calendarInstance.changeDateTo(document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).innerHTML, blockId);\r\n            callback();\r\n        }\r\n    };\r\n};\r\n\r\nCalendar.prototype.setOnClickListener = function (theCase, backCallback, nextCallback) {\r\n    var calendarId = this.id;\r\n\r\n    backCallback = backCallback || function () {};\r\n    nextCallback = nextCallback || function () {};\r\n\r\n    var calendarInstance = this;\r\n\r\n    switch (theCase) {\r\n        case \"days-blocks\":\r\n            for (var i = 1; i <= 42; i++) {\r\n                calendarInstance.setupBlock(i, calendarInstance, backCallback);\r\n            }\r\n            break;\r\n        case \"month-slider\":\r\n            document.getElementById(calendarId + \"-month-back\").onclick = function () {\r\n                calendarInstance.back('month');\r\n                backCallback();\r\n            };\r\n            document.getElementById(calendarId + \"-month-next\").onclick = function () {\r\n                calendarInstance.next('month');\r\n                nextCallback();\r\n            };\r\n            break;\r\n        case \"year-slider\":\r\n            document.getElementById(calendarId + \"-year-back\").onclick = function () {\r\n                calendarInstance.back('year');\r\n                backCallback();\r\n            };\r\n            document.getElementById(calendarId + \"-year-next\").onclick = function () {\r\n                calendarInstance.next('year');\r\n                nextCallback();\r\n            };\r\n            break;\r\n    }\r\n};\r\n\r\nfunction Organizer(id, calendar, data) {\r\n    this.id = id;\r\n    this.calendar = calendar;\r\n\r\n    this.data = data || {};\r\n\r\n    this.draw();\r\n\r\n    var organizerInstance = this;\r\n    organizerInstance.onMonthChange(function () {\r\n        organizerInstance.indicateEvents();\r\n    });\r\n\r\n    this.setOnClickListener('days-blocks');\r\n    this.setOnClickListener('day-slider');\r\n    this.setOnClickListener('month-slider');\r\n    this.setOnClickListener('year-slider');\r\n\r\n    this.setOnLongClickListener('days-blocks');\r\n}\r\n\r\nOrganizer.prototype = {\r\n    constructor: Organizer,\r\n    back: function back(func) {\r\n        var date = this.calendar.date;\r\n        var lastDay = new Date(date.getMonth() + 1 > 11 ? date.getFullYear() + 1 : date.getFullYear(), date.getMonth() + 1 > 12 ? 0 : date.getMonth() + 1, 0).getDate();\r\n        var previousLastDay = new Date(date.getMonth() < 0 ? date.getFullYear() - 1 : date.getFullYear(), date.getMonth() < 0 ? 11 : date.getMonth(), 0).getDate();\r\n\r\n        if (func == \"day\") {\r\n            if (date.getDate() != 1) {\r\n                this.changeDateTo(date.getDate() - 1);\r\n\r\n                this.update();\r\n            } else {\r\n                this.calendar.back('month');\r\n                this.changeDateTo(lastDay);\r\n\r\n                var organizerInstance = this;\r\n                organizerInstance.onMonthChange(function () {\r\n                    organizerInstance.indicateEvents();\r\n                });\r\n            }\r\n\r\n            document.getElementById(this.calendar.id + \"-day-radio-\" + (this.calendar.initday + date.getDate())).checked = true;\r\n        } else {\r\n            this.calendar.back(func);\r\n\r\n            var organizerInstance = this;\r\n            organizerInstance.onMonthChange(function () {\r\n                organizerInstance.indicateEvents();\r\n            });\r\n        }\r\n    },\r\n    next: function next(func) {\r\n        var date = this.calendar.date;\r\n        var lastDay = new Date(date.getMonth() + 1 > 11 ? date.getFullYear() + 1 : date.getFullYear(), date.getMonth() + 1 > 12 ? 0 : date.getMonth() + 1, 0).getDate();\r\n        var soonLastDay = new Date(date.getMonth() + 2 > 11 ? date.getFullYear() + 1 : date.getFullYear(), date.getMonth() + 2 > 12 ? 0 : date.getMonth() + 2, 0).getDate();\r\n\r\n        if (func == \"day\") {\r\n            if (date.getDate() != lastDay) {\r\n                date.setDate(date.getDate() + 1);\r\n\r\n                this.update();\r\n            } else {\r\n                this.calendar.next('month');\r\n                date.setDate(1);\r\n\r\n                var organizerInstance = this;\r\n                organizerInstance.onMonthChange(function () {\r\n                    organizerInstance.indicateEvents();\r\n                });\r\n            }\r\n\r\n            document.getElementById(this.calendar.id + \"-day-radio-\" + (this.calendar.initday + date.getDate())).checked = true;\r\n        } else {\r\n            this.calendar.next(func);\r\n\r\n            var organizerInstance = this;\r\n            organizerInstance.onMonthChange(function () {\r\n                organizerInstance.indicateEvents();\r\n            });\r\n        }\r\n    },\r\n    changeDateTo: function changeDateTo(theDay, theBlock) {\r\n        this.clearHistory();\r\n\r\n        var changedMonth = this.calendar.changeDateTo(theDay, theBlock);\r\n\r\n        var organizerInstance = this;\r\n        return organizerInstance.update();\r\n        setTimeout(function () {\r\n            if (changedMonth) {\r\n                organizerInstance.onMonthChange(function () {\r\n                    organizerInstance.indicateEvents();\r\n                });\r\n            } else return organizerInstance.update();\r\n        }, 1);\r\n    },\r\n    addDate: function changeDateTo(theDay, theBlock) {\r\n        this.showHistory();\r\n\r\n        var changedMonth = this.calendar.changeDateTo(theDay, theBlock);\r\n\r\n        var organizerInstance = this;\r\n        setTimeout(function () {\r\n            if (changedMonth) {\r\n                organizerInstance.onMonthChange(function () {\r\n                    organizerInstance.indicateEvents();\r\n                });\r\n            } else organizerInstance.update();\r\n        }, 1);\r\n    }\r\n};\r\n\r\nOrganizer.prototype.draw = function () {\r\n    var backSvg = '<svg style=\"width: 24px; height: 24px;\" viewBox=\"0 0 24 24\"><path fill=\"' + this.calendar.colors[3] + '\" d=\"M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z\"></path></svg>';\r\n    var nextSvg = '<svg style=\"width: 24px; height: 24px;\" viewBox=\"0 0 24 24\"><path fill=\"' + this.calendar.colors[3] + '\" d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\"></path></svg>';\r\n\r\n    var theOrganizer = document.createElement(\"DIV\");\r\n    theOrganizer.className = \"cjslib-events cjslib-size-\" + this.calendar.size;\r\n\r\n    var theDate = document.createElement(\"DIV\");\r\n    theDate.className = \"cjslib-date\";\r\n    theDate.style.backgroundColor = this.calendar.colors[1];\r\n    theDate.style.color = this.calendar.colors[3];\r\n\r\n    var backSlider = document.createElement(\"DIV\");\r\n    backSlider.id = this.id + \"-day-back\";\r\n    backSlider.insertAdjacentHTML('beforeend', backSvg);\r\n    theDate.appendChild(backSlider.cloneNode(true));\r\n\r\n    var theText = document.createElement(\"SPAN\");\r\n    theText.id = this.id + \"-date\";\r\n    theDate.appendChild(theText.cloneNode(true));\r\n\r\n    var nextSlider = document.createElement(\"DIV\");\r\n    nextSlider.id = this.id + \"-day-next\";\r\n    nextSlider.insertAdjacentHTML('beforeend', nextSvg);\r\n    theDate.appendChild(nextSlider.cloneNode(true));\r\n\r\n    var theRows = document.createElement(\"DIV\");\r\n    theRows.className = \"cjslib-rows\";\r\n    theRows.id = this.id + \"-list-container\";\r\n\r\n    var theList = document.createElement(\"OL\");\r\n    theList.className = \"cjslib-list\";\r\n    theList.id = this.id + \"-list\";\r\n\r\n    var theHistory = document.createElement(\"OL\");\r\n    theHistory.className = \"cjslib-list\";\r\n    theHistory.id = this.id + \"-history\";\r\n\r\n    theRows.appendChild(theList.cloneNode(true));\r\n    theRows.appendChild(theHistory.cloneNode(true));\r\n\r\n    theOrganizer.appendChild(theDate.cloneNode(true));\r\n    theOrganizer.appendChild(theRows.cloneNode(true));\r\n\r\n    document.getElementById(this.id).appendChild(theOrganizer.cloneNode(true));\r\n};\r\n\r\nOrganizer.prototype.update = function () {\r\n    document.getElementById(this.id + \"-date\").innerHTML = this.calendar.months[this.calendar.date.getMonth()] + \" \" + this.calendar.date.getDate() + \", \" + this.calendar.date.getFullYear();\r\n    document.getElementById(this.id + \"-list\").innerHTML = \"\";\r\n    \r\n    return this.showEvents();\r\n};\r\n\r\nOrganizer.prototype.updateData = function (data) {\r\n    this.data = data;\r\n\r\n    this.indicateEvents();\r\n    this.update();\r\n};\r\n\r\nOrganizer.prototype.list = function (data) {\r\n    let events = {'booked': [], 'available': []}\r\n    console.log(\"WHAT\")\r\n    console.log(data)\r\n    for (let i = 0; i < data.length; i++) {\r\n        console.log(i)\r\n        for(event in data[type]){\r\n            let listItem = document.createElement(\"LI\");\r\n            listItem.id = this.id + \"-list-item-\" + type;\r\n    \r\n            \r\n    \r\n            let span = document.createElement(\"SPAN\");\r\n            span.id = this.id + \"-list-item-\" + type + \"-time\";\r\n            span.class = this.id + \" time\";\r\n            span.appendChild(document.createTextNode(data[type].startTime + ' - ' + data[type].endTime));\r\n            \r\n            let division = document.createElement(\"DIV\");\r\n            division.appendChild(span);\r\n    \r\n            let paragraph = document.createElement(\"P\");\r\n            paragraph.id = this.id + \"-list-item-\" + i + \"-text\";\r\n            paragraph.appendChild(document.createTextNode(data[i].text));\r\n    \r\n            listItem.appendChild(division);\r\n            listItem.appendChild(paragraph);\r\n\r\n            events[type].push(listItem);\r\n            \r\n        }\r\n        \r\n    }\r\n    console.log(\"LIST\")\r\n    console.log(events)\r\n    return events;\r\n};\r\n\r\nOrganizer.prototype.remember = function (date, content) {\r\n    if (content.startsWith(\"<div class=\\\"cjslib-list-placeholder\\\">\"))\r\n        return \"\";\r\n\r\n    let dateTitle = this.calendar.getDateString();\r\n    this.calendar.history.unshift(dateTitle);\r\n\r\n    let container = document.createElement(\"UL\");\r\n    container.className = \"cjslib-list cjslib-list-history\"\r\n\r\n    let title = document.createElement(\"LI\");\r\n    title.appendChild(document.createTextNode(dateTitle));\r\n    title.className = \"cjslib-list-history-title cjslib-date\";\r\n    title.style.backgroundColor = this.calendar.colors[1];\r\n    title.style.color = this.calendar.colors[3];\r\n\r\n    container.appendChild(title);\r\n\r\n    container.innerHTML += content;\r\n\r\n    return container.outerHTML;\r\n};\r\n\r\nOrganizer.prototype.clearHistory = function () {\r\n    this.calendar.history = [];\r\n    document.getElementById(this.id + \"-history\").innerHTML = \"\";\r\n}\r\n\r\nOrganizer.prototype.setupBlock = function (blockId, organizerInstance, callback) {\r\n    const calendarInstance = organizerInstance.calendar;\r\n\r\n    document.getElementById(calendarInstance.id + \"-day-\" + blockId).onclick = function (clickEvent) {\r\n        if (document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).innerHTML.length > 0) {\r\n            if (document.getElementById(calendarInstance.id + \"-day-radio-\" + blockId).checked)\r\n                return;\r\n\r\n            var longPressed = \"\" + document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).dataset.longpressed;\r\n            document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).dataset.longpressed = false;\r\n\r\n            if (longPressed != \"true\") {\r\n                const dayNumBlock = document.getElementById(calendarInstance.id + \"-day-num-\" + blockId);\r\n                const dayBlock = document.getElementById(calendarInstance.id + \"-day-\" + blockId);\r\n                const eventList = organizerInstance.changeDateTo(dayNumBlock.innerHTML, blockId);\r\n                console.log('sasd')\r\n                console.log(eventList)\r\n\r\n                callback(clickEvent, eventList, dayBlock, calendarInstance);\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nOrganizer.prototype.showEvents = function (data) {\r\n    data = data || this.data;\r\n    const date = this.calendar.date;\r\n\r\n    return data[date.getFullYear()][date.getMonth() + 1][date.getDate()]\r\n};\r\n\r\nOrganizer.prototype.showHistory = function (data) {\r\n    data = data || this.data;\r\n    var date = this.calendar.date;\r\n\r\n    var content = this.remember(date, document.getElementById(this.id + \"-list\").innerHTML);\r\n    var history = document.getElementById(this.id + \"-history\").innerHTML;\r\n\r\n    document.getElementById(this.id + \"-history\").innerHTML = content + history;\r\n};\r\n\r\nOrganizer.prototype.showPlaceholder = function (data) {\r\n    var container = document.createElement(\"DIV\");\r\n    container.className = \"cjslib-list-placeholder\";\r\n\r\n    container.innerHTML = this.calendar.placeholder;\r\n\r\n    return container.outerHTML;\r\n};\r\n\r\nOrganizer.prototype.indicateEvents = function (data) {\r\n    data = data || this.data;\r\n    var date = this.calendar.date;\r\n    console.log(data)\r\n\r\n    if (this.calendar.indicator) {\r\n        var allDays = document.getElementsByClassName(this.calendar.id + \" cjslib-day cjslib-day-listed\");\r\n\r\n        for (var i = 0; i < allDays.length; i++) {\r\n            allDays[i].children[1].innerHTML = \"\";\r\n        }\r\n\r\n        try {\r\n            var month = data[date.getFullYear()][date.getMonth() + 1];\r\n            \r\n            for (var key in month) {\r\n                console.log(key)\r\n                console.log(month)\r\n                if (month[key]['booked'].length > 0){\r\n                    allDays[key - 1].children[1].innerHTML = (month[key]['booked'].length > 9) ? \"9+\" : month[key]['booked'].length;\r\n                }\r\n                    \r\n        \r\n            }\r\n        } catch (e) {}\r\n    }\r\n\r\n    this.update();\r\n};\r\n\r\nOrganizer.prototype.onMonthChange = function (callback) {\r\n    callback();\r\n};\r\n\r\nOrganizer.prototype.setOnClickListener = function (theCase, backCallback, nextCallback) {\r\n    var calendarId = this.calendar.id;\r\n    var organizerId = this.id;\r\n\r\n    backCallback = backCallback || function () {};\r\n    nextCallback = nextCallback || function () {};\r\n\r\n    var organizerInstance = this;\r\n\r\n    switch (theCase) {\r\n        case \"days-blocks\":\r\n            for (var i = 1; i <= 42; i++) {\r\n                organizerInstance.setupBlock(i, organizerInstance, backCallback);\r\n            }\r\n            break;\r\n        case \"day-slider\":\r\n            document.getElementById(organizerId + \"-day-back\").onclick = function () {\r\n                organizerInstance.back('day');\r\n                backCallback();\r\n            };\r\n            document.getElementById(organizerId + \"-day-next\").onclick = function () {\r\n                organizerInstance.next('day');\r\n                nextCallback();\r\n            };\r\n            break;\r\n        case \"month-slider\":\r\n            document.getElementById(calendarId + \"-month-back\").onclick = function () {\r\n                organizerInstance.back('month');\r\n                backCallback();\r\n            };\r\n            document.getElementById(calendarId + \"-month-next\").onclick = function () {\r\n                organizerInstance.next('month');\r\n                nextCallback();\r\n            };\r\n            break;\r\n        case \"year-slider\":\r\n            document.getElementById(calendarId + \"-year-back\").onclick = function () {\r\n                organizerInstance.back('year');\r\n                backCallback();\r\n            };\r\n            document.getElementById(calendarId + \"-year-next\").onclick = function () {\r\n                organizerInstance.next('year');\r\n                nextCallback();\r\n            };\r\n            break;\r\n    }\r\n};\r\n\r\nOrganizer.prototype.setupLongClickBlock = function (blockId, organizerInstance, callback) {\r\n    var calendarInstance = organizerInstance.calendar;\r\n\r\n    var mouseDownEvent = function () {\r\n        document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).dataset.longpressed = \"-\";\r\n\r\n        window.setTimeout(function () {\r\n            if (document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).innerHTML.length > 0) {\r\n                if (document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).dataset.longpressed == \"false\")\r\n                    return;\r\n                else document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).dataset.longpressed = true;\r\n\r\n                if (document.getElementById(calendarInstance.id + \"-day-radio-\" + blockId).checked)\r\n                    return;\r\n\r\n                organizerInstance.addDate(document.getElementById(calendarInstance.id + \"-day-num-\" + blockId).innerHTML, blockId);\r\n        \r\n                callback();\r\n            }\r\n        }, 1000);\r\n    };\r\n\r\n    document.getElementById(calendarInstance.id + \"-day-\" + blockId).onmousedown = mouseDownEvent;\r\n    document.getElementById(calendarInstance.id + \"-day-\" + blockId).ontouchstart = mouseDownEvent;\r\n};\r\n\r\nOrganizer.prototype.setOnLongClickListener = function (theCase, backCallback, nextCallback) {\r\n    var calendarId = this.calendar.id;\r\n    var organizerId = this.id;\r\n\r\n    backCallback = backCallback || function () {};\r\n    nextCallback = nextCallback || function () {};\r\n\r\n    var organizerInstance = this;\r\n\r\n    switch (theCase) {\r\n        case \"days-blocks\":\r\n            for (var i = 1; i <= 42; i++) {\r\n                organizerInstance.setupLongClickBlock(i, organizerInstance, backCallback);\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/calendar-javascript-lib.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/calendar.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/calendar.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _calendar_javascript_lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./calendar-javascript-lib */ \"./node_modules/@helsingborg-stad/styleguide/source/js/calendar-javascript-lib.js\");\n\n\nclass EventCalendar{\n\n    constructor(){\n        this.timeslots = [];\n    }\n\n    initiateCalendar(){\n\n        const calendar = document.querySelector('.c-calendar');\n        if(calendar){\n            const eventsUrl = calendar.getAttribute('eventsUrl');\n            const bookingUrl = calendar.getAttribute('bookingUrl');\n            const size = calendar.getAttribute('size');\n            const weekStart = calendar.getAttribute('weekStart'); \n\n            this.getEvents(eventsUrl).then(data => this.setup(data, weekStart, size, calendar, bookingUrl));\n        }\n        \n    }\n\n    getEvents(eventsUrl){ \n        return fetch(eventsUrl)\n            .then(response => response.json())\n            .then(data => {\n                return data;\n            });\n    }\n\n    postEvents(bookingUrl){\n        fetch(bookingUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(this.timeslots)\n        })\n    }\n\n    setButtonListener(calendarElement, bookingUrl){\n        const button = calendarElement.getElementsByClassName('postEventButton');\n        button[0].addEventListener('click',() =>{\n            this.postEvents(bookingUrl)\n        })\n    }\n\n    // TODO: modify lib to return timestamps directly instead of strings...\n    setTimeslotListener(checkbox, date, timeslot){\n        checkbox.addEventListener('change', (event) => {\n            const timeslotParts = timeslot.split(' - ')\n            const from = timeslotParts[0].split(':')[0];\n            const to = timeslotParts[1].split(':')[0];\n            const temp = {\n                from: date.setHours(parseInt(from), 0, 0, 0),\n                to: date.setHours(parseInt(to), 0, 0, 0)\n            }\n            \n            if(checkbox.checked){\n                this.timeslots.push(temp)\n            }else if(!checkbox.checked) {\n                //remove timestamp if checked and then unchecked\n                for(let i = 0; i < this.timeslots.length; i++){\n                    if(JSON.stringify(this.timeslots[i]) === JSON.stringify(temp)){\n                        this.timeslots.splice(i, 1)\n                    }\n                }\n            }\n        });\n    }\n\n    //TODO: Research the possibility to make the elment a bit less complex.\n    createListElement(events, date, availableEvents){\n        let listItem = document.createElement(\"LI\");\n        \n        for(let i = 0; i < events.length; i++){\n            const timeslot = events[i].startTime + ' - ' + events[i].endTime;\n            listItem.id = this.id + \"-list-item-\" + i;\n    \n            let division = document.createElement(\"DIV\");\n            \n            let checkbox = document.createElement('INPUT');\n            checkbox.setAttribute('type', 'checkbox');\n            this.setTimeslotListener(checkbox, date, timeslot);\n\n            let span = document.createElement(\"SPAN\");\n            span.id = this.id + \"-list-item-\" + i + \"-time\";\n            span.class = this.id + \" time\";\n            span.appendChild(document.createTextNode(events[i].startTime + ' - ' + events[i].endTime));\n\n            division.appendChild(span);\n    \n            let paragraph = document.createElement(\"P\");\n            paragraph.id = this.id + \"-list-item-\" + i + \"-text\";\n            paragraph.appendChild(document.createTextNode(events[i].text));\n            \n            if(availableEvents) paragraph.appendChild(checkbox);\n\n            listItem.appendChild(division);\n            listItem.appendChild(paragraph);\n        }\n        \n        return listItem\n\n    }\n\n    setup (data, weekStart, size, calendarElement, postUrl){\n        let calendar = new _calendar_javascript_lib__WEBPACK_IMPORTED_MODULE_0__[\"Calendar\"](\"calendarContainer\",\n\t\t\t\tsize,\n\t\t\t\t[\n\t\t\t\t\tweekStart,\n\t\t\t\t\t3\n                ], \n                [],\n\t\t\t\t{\n\t\t\t\t\tindicator: true,\n\t\t\t\t\tindicator_type: 1,\n\t\t\t\t\tindicator_pos: \"bottom\"\n\t\t\t\t}\n\t\t\t);\n\t\t\t\n\t\t\tlet organizer = new _calendar_javascript_lib__WEBPACK_IMPORTED_MODULE_0__[\"Organizer\"](\"organizerContainer\",\n\t\t\t\tcalendar,\n\t\t\t\tdata\n            );\n        \n            this.setButtonListener(calendarElement, postUrl);\n            organizer.setOnClickListener('days-blocks',\n                (clickEvent, eventsList, element, calendarInstance) => {\n                    const modalId = clickEvent.target.getAttribute('data-open'); \n\n                    let modal = document.getElementById(modalId)\n                    const isVisible = \"c-modal__bg--is-visible\";\n\n                    modal.classList.add(isVisible);\n                    const list = calendarElement.querySelector('.c-calendar__event-list');\n                    let bookedEvents = list.querySelector('.booked__list');\n                    let availableEvents = list.querySelector('.available__list');\n                    let listHeader = bookedEvents.closest('.c-modal').querySelector('header').querySelector('h2')\n\n                    listHeader.innerHTML = '';\n                    availableEvents.innerHTML = '';\n                    bookedEvents.innerHTML = '';\n\n                    listHeader.innerHTML = calendarInstance.date.getDate() + '/' + calendarInstance.date.getMonth() + 1 + '/' + calendarInstance.date.getFullYear();\n\n                    if(eventsList.booked)\n                        bookedEvents.appendChild(this.createListElement(eventsList.booked, calendarInstance.date, false));\n                    if(eventsList.available)\n                        availableEvents.appendChild(this.createListElement(eventsList.available, calendarInstance.date, true));\n\n\n                }\n            );\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (EventCalendar);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/calendar.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/datepicker.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/datepicker.js ***!
  \***************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _the_datepicker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./the-datepicker */ \"./node_modules/@helsingborg-stad/styleguide/source/js/the-datepicker.js\");\n\n\nconst addDatepickers = (target = document) => {\n    const datepickers = target.querySelectorAll('[js-datepicker=\"1\"]');\n\n    if (datepickers.length > 0) {\n        datepickers.forEach(element => {\n            const datepicker = new _the_datepicker__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Datepicker(element);\n\n            datepicker.options.setInputFormat('Y-m-d');\n            datepicker.options.setTitle(element.getAttribute('c-datepicker-title'));\n            datepicker.options.setDaysOutOfMonthVisible(\n                element.getAttribute('c-datepicker-showdaysoutofmonth')\n            );\n            datepicker.options.setShowResetButton(element.getAttribute('c-datepicker-showresetbutton'));\n            datepicker.options.setShowDeselectButton(\n                element.getAttribute('c-datepicker-showclearbutton')\n            );\n            datepicker.options.setHideOnBlur(element.getAttribute('c-datepicker-hideonblur'));\n            datepicker.options.setHideOnSelect(element.getAttribute('c-datepicker-hideonselect'));\n            datepicker.options.setMinDate(element.getAttribute('c-datepicker-min'));\n            datepicker.options.setMaxDate(element.getAttribute('c-datepicker-max'));\n\n            datepicker.render();\n        });\n    }\n}\n\n\n// Add new datepickers to JS\nconst observer = new MutationObserver((mutationsList, observer) => {\n    for(const mutation of mutationsList) {\n        if (mutation.type === 'childList') {\n            mutation.addedNodes.forEach((node) =>{\n                if(node.querySelectorAll('[js-datepicker]').length > 0) {\n                    addDatepickers(node)\n                }\n            })\n        }\n    }\n});\n\n// Start observing the target node for configured mutations\naddDatepickers();\n\nobserver.observe(document.querySelector('body'), {childList: true, subtree: true });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvZGF0ZXBpY2tlci5qcz8xNDY4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBNkM7O0FBRTdDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1DQUFtQyx1REFBYTs7QUFFaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBOztBQUVBLGtEQUFrRCxnQ0FBZ0MiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvZGF0ZXBpY2tlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUaGVEYXRlcGlja2VyIGZyb20gJy4vdGhlLWRhdGVwaWNrZXInO1xuXG5jb25zdCBhZGREYXRlcGlja2VycyA9ICh0YXJnZXQgPSBkb2N1bWVudCkgPT4ge1xuICAgIGNvbnN0IGRhdGVwaWNrZXJzID0gdGFyZ2V0LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tqcy1kYXRlcGlja2VyPVwiMVwiXScpO1xuXG4gICAgaWYgKGRhdGVwaWNrZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgZGF0ZXBpY2tlcnMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGVwaWNrZXIgPSBuZXcgVGhlRGF0ZXBpY2tlci5EYXRlcGlja2VyKGVsZW1lbnQpO1xuXG4gICAgICAgICAgICBkYXRlcGlja2VyLm9wdGlvbnMuc2V0SW5wdXRGb3JtYXQoJ1ktbS1kJyk7XG4gICAgICAgICAgICBkYXRlcGlja2VyLm9wdGlvbnMuc2V0VGl0bGUoZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2MtZGF0ZXBpY2tlci10aXRsZScpKTtcbiAgICAgICAgICAgIGRhdGVwaWNrZXIub3B0aW9ucy5zZXREYXlzT3V0T2ZNb250aFZpc2libGUoXG4gICAgICAgICAgICAgICAgZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2MtZGF0ZXBpY2tlci1zaG93ZGF5c291dG9mbW9udGgnKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGRhdGVwaWNrZXIub3B0aW9ucy5zZXRTaG93UmVzZXRCdXR0b24oZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2MtZGF0ZXBpY2tlci1zaG93cmVzZXRidXR0b24nKSk7XG4gICAgICAgICAgICBkYXRlcGlja2VyLm9wdGlvbnMuc2V0U2hvd0Rlc2VsZWN0QnV0dG9uKFxuICAgICAgICAgICAgICAgIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdjLWRhdGVwaWNrZXItc2hvd2NsZWFyYnV0dG9uJylcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBkYXRlcGlja2VyLm9wdGlvbnMuc2V0SGlkZU9uQmx1cihlbGVtZW50LmdldEF0dHJpYnV0ZSgnYy1kYXRlcGlja2VyLWhpZGVvbmJsdXInKSk7XG4gICAgICAgICAgICBkYXRlcGlja2VyLm9wdGlvbnMuc2V0SGlkZU9uU2VsZWN0KGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdjLWRhdGVwaWNrZXItaGlkZW9uc2VsZWN0JykpO1xuICAgICAgICAgICAgZGF0ZXBpY2tlci5vcHRpb25zLnNldE1pbkRhdGUoZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2MtZGF0ZXBpY2tlci1taW4nKSk7XG4gICAgICAgICAgICBkYXRlcGlja2VyLm9wdGlvbnMuc2V0TWF4RGF0ZShlbGVtZW50LmdldEF0dHJpYnV0ZSgnYy1kYXRlcGlja2VyLW1heCcpKTtcblxuICAgICAgICAgICAgZGF0ZXBpY2tlci5yZW5kZXIoKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5cbi8vIEFkZCBuZXcgZGF0ZXBpY2tlcnMgdG8gSlNcbmNvbnN0IG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoKG11dGF0aW9uc0xpc3QsIG9ic2VydmVyKSA9PiB7XG4gICAgZm9yKGNvbnN0IG11dGF0aW9uIG9mIG11dGF0aW9uc0xpc3QpIHtcbiAgICAgICAgaWYgKG11dGF0aW9uLnR5cGUgPT09ICdjaGlsZExpc3QnKSB7XG4gICAgICAgICAgICBtdXRhdGlvbi5hZGRlZE5vZGVzLmZvckVhY2goKG5vZGUpID0+e1xuICAgICAgICAgICAgICAgIGlmKG5vZGUucXVlcnlTZWxlY3RvckFsbCgnW2pzLWRhdGVwaWNrZXJdJykubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBhZGREYXRlcGlja2Vycyhub2RlKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9XG59KTtcblxuLy8gU3RhcnQgb2JzZXJ2aW5nIHRoZSB0YXJnZXQgbm9kZSBmb3IgY29uZmlndXJlZCBtdXRhdGlvbnNcbmFkZERhdGVwaWNrZXJzKCk7XG5cbm9ic2VydmVyLm9ic2VydmUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpLCB7Y2hpbGRMaXN0OiB0cnVlLCBzdWJ0cmVlOiB0cnVlIH0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/datepicker.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/dropdown.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/dropdown.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Dropdown {\n    constructor() {\n        this.DROPDOWN_LIST_VISIBLE = 'c-dropdown__list--visible';\n        this.AUTO_POSITION_LEFT = 'c-dropdown__auto--position-left';\n        this.AUTO_POSITION_RIGHT = 'c-dropdown__auto--position-right';\n    }\n\n    /**\n     * Set Valid Targets and fire toogle\n     */\n    setValidTargets() {\n        const dropdowns = document.getElementsByClassName('c-dropdown--on-click');\n\n        for (let dropdown of dropdowns) {\n            let dropDownList = dropdown.getElementsByClassName('c-dropdown__list')[0]\n                ? dropdown.getElementsByClassName('c-dropdown__list')[0]\n                : '';\n\n            let dropdownButton = dropdown.getElementsByTagName('button')[0]\n                ? dropdown.getElementsByTagName('button')[0]\n                : '';\n\n            let buttonLabel = dropdownButton.getElementsByClassName('c-button__label-text')[0]\n                ? dropdownButton.getElementsByClassName('c-button__label-text')[0]\n                : '';\n\n            let buttonLabelReverse = dropdownButton.getElementsByClassName(\n                'c-button__label-text--reverse'\n            )[0]\n                ? dropdownButton.getElementsByClassName('c-button__label-text--reverse')[0]\n                : '';\n\n            let buttonIcon = dropdownButton.getElementsByTagName('i')[0]\n                ? dropdownButton.getElementsByTagName('i')[0]\n                : '';\n\n            let validTargets = [\n                dropDownList,\n                dropdownButton,\n                buttonLabel,\n                buttonIcon,\n                buttonLabelReverse,\n            ];\n\n            this.toggle(validTargets, dropDownList);\n        }\n    }\n\n    /**\n     * Toogle dropdown on and of\n     * @param validTargets\n     * @param dropDownList\n     */\n    toggle(validTargets, dropDownList) {\n        document.addEventListener('click', event => {\n            let target = event.target;\n            if (\n                validTargets.includes(target) &&\n                !dropDownList.classList.contains(this.DROPDOWN_LIST_VISIBLE)\n            ) {\n                dropDownList.classList.add(this.DROPDOWN_LIST_VISIBLE);\n                const boundingRect = dropDownList.getBoundingClientRect();\n\n                if (boundingRect.left < 0) {\n                    dropDownList.classList.remove('c-dropdown__list--left');\n                    dropDownList.classList.add('c-dropdown__list--right');\n                } else if (boundingRect.right < 0) {\n                    dropDownList.classList.remove('c-dropdown__list--right');\n                    dropDownList.classList.add('c-dropdown__list--left');\n                } else if (boundingRect.top < 0) {\n                    dropDownList.classList.remove('c-dropdown__list--top');\n                    dropDownList.classList.add('c-dropdown__list--bottom');\n                } else if (boundingRect.bottom < 0) {\n                    dropDownList.classList.remove('c-dropdown__list--bottom');\n                    dropDownList.classList.add('c-dropdown__list--top');\n                }\n            } else {\n                dropDownList.classList.remove(this.DROPDOWN_LIST_VISIBLE);\n            }\n        });\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Dropdown);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvZHJvcGRvd24uanM/YmY2ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVlLHVFQUFRLEVBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvZHJvcGRvd24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBEcm9wZG93biB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuRFJPUERPV05fTElTVF9WSVNJQkxFID0gJ2MtZHJvcGRvd25fX2xpc3QtLXZpc2libGUnO1xuICAgICAgICB0aGlzLkFVVE9fUE9TSVRJT05fTEVGVCA9ICdjLWRyb3Bkb3duX19hdXRvLS1wb3NpdGlvbi1sZWZ0JztcbiAgICAgICAgdGhpcy5BVVRPX1BPU0lUSU9OX1JJR0hUID0gJ2MtZHJvcGRvd25fX2F1dG8tLXBvc2l0aW9uLXJpZ2h0JztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXQgVmFsaWQgVGFyZ2V0cyBhbmQgZmlyZSB0b29nbGVcbiAgICAgKi9cbiAgICBzZXRWYWxpZFRhcmdldHMoKSB7XG4gICAgICAgIGNvbnN0IGRyb3Bkb3ducyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2MtZHJvcGRvd24tLW9uLWNsaWNrJyk7XG5cbiAgICAgICAgZm9yIChsZXQgZHJvcGRvd24gb2YgZHJvcGRvd25zKSB7XG4gICAgICAgICAgICBsZXQgZHJvcERvd25MaXN0ID0gZHJvcGRvd24uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnYy1kcm9wZG93bl9fbGlzdCcpWzBdXG4gICAgICAgICAgICAgICAgPyBkcm9wZG93bi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdjLWRyb3Bkb3duX19saXN0JylbMF1cbiAgICAgICAgICAgICAgICA6ICcnO1xuXG4gICAgICAgICAgICBsZXQgZHJvcGRvd25CdXR0b24gPSBkcm9wZG93bi5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYnV0dG9uJylbMF1cbiAgICAgICAgICAgICAgICA/IGRyb3Bkb3duLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdidXR0b24nKVswXVxuICAgICAgICAgICAgICAgIDogJyc7XG5cbiAgICAgICAgICAgIGxldCBidXR0b25MYWJlbCA9IGRyb3Bkb3duQnV0dG9uLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2MtYnV0dG9uX19sYWJlbC10ZXh0JylbMF1cbiAgICAgICAgICAgICAgICA/IGRyb3Bkb3duQnV0dG9uLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2MtYnV0dG9uX19sYWJlbC10ZXh0JylbMF1cbiAgICAgICAgICAgICAgICA6ICcnO1xuXG4gICAgICAgICAgICBsZXQgYnV0dG9uTGFiZWxSZXZlcnNlID0gZHJvcGRvd25CdXR0b24uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcbiAgICAgICAgICAgICAgICAnYy1idXR0b25fX2xhYmVsLXRleHQtLXJldmVyc2UnXG4gICAgICAgICAgICApWzBdXG4gICAgICAgICAgICAgICAgPyBkcm9wZG93bkJ1dHRvbi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdjLWJ1dHRvbl9fbGFiZWwtdGV4dC0tcmV2ZXJzZScpWzBdXG4gICAgICAgICAgICAgICAgOiAnJztcblxuICAgICAgICAgICAgbGV0IGJ1dHRvbkljb24gPSBkcm9wZG93bkJ1dHRvbi5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaScpWzBdXG4gICAgICAgICAgICAgICAgPyBkcm9wZG93bkJ1dHRvbi5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaScpWzBdXG4gICAgICAgICAgICAgICAgOiAnJztcblxuICAgICAgICAgICAgbGV0IHZhbGlkVGFyZ2V0cyA9IFtcbiAgICAgICAgICAgICAgICBkcm9wRG93bkxpc3QsXG4gICAgICAgICAgICAgICAgZHJvcGRvd25CdXR0b24sXG4gICAgICAgICAgICAgICAgYnV0dG9uTGFiZWwsXG4gICAgICAgICAgICAgICAgYnV0dG9uSWNvbixcbiAgICAgICAgICAgICAgICBidXR0b25MYWJlbFJldmVyc2UsXG4gICAgICAgICAgICBdO1xuXG4gICAgICAgICAgICB0aGlzLnRvZ2dsZSh2YWxpZFRhcmdldHMsIGRyb3BEb3duTGlzdCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUb29nbGUgZHJvcGRvd24gb24gYW5kIG9mXG4gICAgICogQHBhcmFtIHZhbGlkVGFyZ2V0c1xuICAgICAqIEBwYXJhbSBkcm9wRG93bkxpc3RcbiAgICAgKi9cbiAgICB0b2dnbGUodmFsaWRUYXJnZXRzLCBkcm9wRG93bkxpc3QpIHtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBldmVudCA9PiB7XG4gICAgICAgICAgICBsZXQgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgIHZhbGlkVGFyZ2V0cy5pbmNsdWRlcyh0YXJnZXQpICYmXG4gICAgICAgICAgICAgICAgIWRyb3BEb3duTGlzdC5jbGFzc0xpc3QuY29udGFpbnModGhpcy5EUk9QRE9XTl9MSVNUX1ZJU0lCTEUpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBkcm9wRG93bkxpc3QuY2xhc3NMaXN0LmFkZCh0aGlzLkRST1BET1dOX0xJU1RfVklTSUJMRSk7XG4gICAgICAgICAgICAgICAgY29uc3QgYm91bmRpbmdSZWN0ID0gZHJvcERvd25MaXN0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGJvdW5kaW5nUmVjdC5sZWZ0IDwgMCkge1xuICAgICAgICAgICAgICAgICAgICBkcm9wRG93bkxpc3QuY2xhc3NMaXN0LnJlbW92ZSgnYy1kcm9wZG93bl9fbGlzdC0tbGVmdCcpO1xuICAgICAgICAgICAgICAgICAgICBkcm9wRG93bkxpc3QuY2xhc3NMaXN0LmFkZCgnYy1kcm9wZG93bl9fbGlzdC0tcmlnaHQnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGJvdW5kaW5nUmVjdC5yaWdodCA8IDApIHtcbiAgICAgICAgICAgICAgICAgICAgZHJvcERvd25MaXN0LmNsYXNzTGlzdC5yZW1vdmUoJ2MtZHJvcGRvd25fX2xpc3QtLXJpZ2h0Jyk7XG4gICAgICAgICAgICAgICAgICAgIGRyb3BEb3duTGlzdC5jbGFzc0xpc3QuYWRkKCdjLWRyb3Bkb3duX19saXN0LS1sZWZ0Jyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChib3VuZGluZ1JlY3QudG9wIDwgMCkge1xuICAgICAgICAgICAgICAgICAgICBkcm9wRG93bkxpc3QuY2xhc3NMaXN0LnJlbW92ZSgnYy1kcm9wZG93bl9fbGlzdC0tdG9wJyk7XG4gICAgICAgICAgICAgICAgICAgIGRyb3BEb3duTGlzdC5jbGFzc0xpc3QuYWRkKCdjLWRyb3Bkb3duX19saXN0LS1ib3R0b20nKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGJvdW5kaW5nUmVjdC5ib3R0b20gPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGRyb3BEb3duTGlzdC5jbGFzc0xpc3QucmVtb3ZlKCdjLWRyb3Bkb3duX19saXN0LS1ib3R0b20nKTtcbiAgICAgICAgICAgICAgICAgICAgZHJvcERvd25MaXN0LmNsYXNzTGlzdC5hZGQoJ2MtZHJvcGRvd25fX2xpc3QtLXRvcCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZHJvcERvd25MaXN0LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5EUk9QRE9XTl9MSVNUX1ZJU0lCTEUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IERyb3Bkb3duO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/dropdown.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/dynamicSidebar.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/dynamicSidebar.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DynamicSidebar; });\nclass DynamicSidebar {\n    constructor() {\n        this.dynamicSidebars = document.querySelectorAll('.c-sidebar[endpoint-children]');\n\n        if(this.dynamicSidebars) {\n            this.endpoints = {};\n            this.pageId = document.getElementsByTagName('body')[0].getAttribute('js-page-id');\n        }\n    }\n\n    /**\n     * Finds all sidebars and applies appropriate classes and attributes on load\n     * @return {void}\n     */\n    applySidebar() {\n        if(this.dynamicSidebars) {\n            this.dynamicSidebars.forEach((sidebar) => {\n\n                this.endpoints.children = sidebar.getAttribute('endpoint-children');\n                this.addTriggers(sidebar.querySelectorAll('.c-sidebar__toggle'));  \n\n                sidebar.querySelectorAll('.c-sidebar__subcontainer').forEach((subContainer) => {\n                    if(subContainer.childElementCount === 0) {\n                        subContainer.parentElement.removeChild(subContainer);\n                    }\n                });\n            });\n        }\n    }\n\n    getChildren(parentId) { \n        return fetch(`${this.endpoints.children  }?pageId=${  parentId}`)\n        .then((response) => {\n            return response.json();\n        })\n        .then((data) => {\n            return data;\n        });\n    }\n    \n    appendChildren(parentID) {\n        return this.getChildren(parentID).then((children) => {\n        \n            const subContainer = document.createElement('div');\n            subContainer.setAttribute('subContainerID', parentID);\n            subContainer.classList.add('c-sidebar__subcontainer');\n            \n            children.forEach( (child) => {\n                const childItem = document.createElement('div');\n                childItem.classList.add('c-sidebar__item');\n                const link = document.createElement('a');\n                link.href = child.href;\n                link.classList.add('c-sidebar__link');\n                link.text = child.label;\n                link.setAttribute('item-active', 'false');\n                link.id = `${child.id}`;\n                \n                childItem.appendChild(link);\n\n                if(child.children) {\n                    \n                    const bar = document.createElement('div');\n                    bar.classList.add('bar');\n\n                    const toggle = document.createElement('div');\n                    toggle.classList.add('c-sidebar__toggle');\n                    toggle.appendChild(bar);\n                    toggle.appendChild(bar.cloneNode(true));\n                    toggle.setAttribute('aria-label', child.id);\n\n                    childItem.appendChild(toggle);  \n                }\n                \n                subContainer.appendChild(childItem);\n\n            });\n            \n            subContainer.classList.add('c-sidebar__item--is-expanded');\n            \n            return subContainer;\n        });\n    }\n    \n    /**\n     * Adds listeners to buttons\n     * @param {Object} sb The sidebar\n    */\n    addTriggers(toggleTriggers) {\n        toggleTriggers.forEach((trigger) => {\n            const parentId = trigger.getAttribute('aria-label');\n            const parent = trigger.parentElement;\n\n            trigger.addEventListener('click', () => {\n\n                const ariaPressed = (trigger.getAttribute('aria-pressed') === 'true') ? 'false' : 'true';\n                trigger.setAttribute('aria-pressed', ariaPressed);\n                \n                if (!trigger.getAttribute('aria-loaded')) {\n                    trigger.setAttribute('aria-loaded', 'true');\n                    this.appendChildren(parentId).then((child) => {\n                        parent.appendChild(child);\n                        \n                        const parentSubcontainer = parent.querySelector('.c-sidebar__subcontainer');\n\n                        this.addTriggers(parentSubcontainer.querySelectorAll('.c-sidebar__toggle'));\n                    });\n                }\n\n                const parentSubcontainer = parent.querySelector('.c-sidebar__subcontainer');\n\n                if(parentSubcontainer) {\n                    parentSubcontainer.classList.toggle('c-sidebar__item--is-expanded');\n                }\n\n            });\n            \n        });\n    }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvZHluYW1pY1NpZGViYXIuanM/NjczOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQWU7QUFDZjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlGOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBOztBQUVBLDJCO0FBQ0Esd0JBQXdCLDBCQUEwQixVQUFVLFdBQVc7QUFDdkU7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsU0FBUzs7QUFFdEM7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtEO0FBQ0E7O0FBRUE7O0FBRUEsYUFBYTs7QUFFYjs7QUFFQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLHFCQUFxQjtBQUNyQjs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYTs7QUFFYixTQUFTO0FBQ1Q7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AaGVsc2luZ2Jvcmctc3RhZC9zdHlsZWd1aWRlL3NvdXJjZS9qcy9keW5hbWljU2lkZWJhci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIER5bmFtaWNTaWRlYmFyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5keW5hbWljU2lkZWJhcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYy1zaWRlYmFyW2VuZHBvaW50LWNoaWxkcmVuXScpO1xuXG4gICAgICAgIGlmKHRoaXMuZHluYW1pY1NpZGViYXJzKSB7XG4gICAgICAgICAgICB0aGlzLmVuZHBvaW50cyA9IHt9O1xuICAgICAgICAgICAgdGhpcy5wYWdlSWQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdLmdldEF0dHJpYnV0ZSgnanMtcGFnZS1pZCcpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRmluZHMgYWxsIHNpZGViYXJzIGFuZCBhcHBsaWVzIGFwcHJvcHJpYXRlIGNsYXNzZXMgYW5kIGF0dHJpYnV0ZXMgb24gbG9hZFxuICAgICAqIEByZXR1cm4ge3ZvaWR9XG4gICAgICovXG4gICAgYXBwbHlTaWRlYmFyKCkge1xuICAgICAgICBpZih0aGlzLmR5bmFtaWNTaWRlYmFycykge1xuICAgICAgICAgICAgdGhpcy5keW5hbWljU2lkZWJhcnMuZm9yRWFjaCgoc2lkZWJhcikgPT4ge1xuXG4gICAgICAgICAgICAgICAgdGhpcy5lbmRwb2ludHMuY2hpbGRyZW4gPSBzaWRlYmFyLmdldEF0dHJpYnV0ZSgnZW5kcG9pbnQtY2hpbGRyZW4nKTtcbiAgICAgICAgICAgICAgICB0aGlzLmFkZFRyaWdnZXJzKHNpZGViYXIucXVlcnlTZWxlY3RvckFsbCgnLmMtc2lkZWJhcl9fdG9nZ2xlJykpOyAgXG5cbiAgICAgICAgICAgICAgICBzaWRlYmFyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5jLXNpZGViYXJfX3N1YmNvbnRhaW5lcicpLmZvckVhY2goKHN1YkNvbnRhaW5lcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZihzdWJDb250YWluZXIuY2hpbGRFbGVtZW50Q291bnQgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1YkNvbnRhaW5lci5wYXJlbnRFbGVtZW50LnJlbW92ZUNoaWxkKHN1YkNvbnRhaW5lcik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0Q2hpbGRyZW4ocGFyZW50SWQpIHsgXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmVuZHBvaW50cy5jaGlsZHJlbiAgfT9wYWdlSWQ9JHsgIHBhcmVudElkfWApXG4gICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgYXBwZW5kQ2hpbGRyZW4ocGFyZW50SUQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0Q2hpbGRyZW4ocGFyZW50SUQpLnRoZW4oKGNoaWxkcmVuKSA9PiB7XG4gICAgICAgIFxuICAgICAgICAgICAgY29uc3Qgc3ViQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICBzdWJDb250YWluZXIuc2V0QXR0cmlidXRlKCdzdWJDb250YWluZXJJRCcsIHBhcmVudElEKTtcbiAgICAgICAgICAgIHN1YkNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdjLXNpZGViYXJfX3N1YmNvbnRhaW5lcicpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjaGlsZHJlbi5mb3JFYWNoKCAoY2hpbGQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBjaGlsZEl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgICAgICBjaGlsZEl0ZW0uY2xhc3NMaXN0LmFkZCgnYy1zaWRlYmFyX19pdGVtJyk7XG4gICAgICAgICAgICAgICAgY29uc3QgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICAgICAgICAgICAgICBsaW5rLmhyZWYgPSBjaGlsZC5ocmVmO1xuICAgICAgICAgICAgICAgIGxpbmsuY2xhc3NMaXN0LmFkZCgnYy1zaWRlYmFyX19saW5rJyk7XG4gICAgICAgICAgICAgICAgbGluay50ZXh0ID0gY2hpbGQubGFiZWw7XG4gICAgICAgICAgICAgICAgbGluay5zZXRBdHRyaWJ1dGUoJ2l0ZW0tYWN0aXZlJywgJ2ZhbHNlJyk7XG4gICAgICAgICAgICAgICAgbGluay5pZCA9IGAke2NoaWxkLmlkfWA7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY2hpbGRJdGVtLmFwcGVuZENoaWxkKGxpbmspO1xuXG4gICAgICAgICAgICAgICAgaWYoY2hpbGQuY2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGJhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgICAgICAgICBiYXIuY2xhc3NMaXN0LmFkZCgnYmFyJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdG9nZ2xlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAgICAgICAgIHRvZ2dsZS5jbGFzc0xpc3QuYWRkKCdjLXNpZGViYXJfX3RvZ2dsZScpO1xuICAgICAgICAgICAgICAgICAgICB0b2dnbGUuYXBwZW5kQ2hpbGQoYmFyKTtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlLmFwcGVuZENoaWxkKGJhci5jbG9uZU5vZGUodHJ1ZSkpO1xuICAgICAgICAgICAgICAgICAgICB0b2dnbGUuc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgY2hpbGQuaWQpO1xuXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkSXRlbS5hcHBlbmRDaGlsZCh0b2dnbGUpOyAgXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHN1YkNvbnRhaW5lci5hcHBlbmRDaGlsZChjaGlsZEl0ZW0pO1xuXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgc3ViQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2Mtc2lkZWJhcl9faXRlbS0taXMtZXhwYW5kZWQnKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcmV0dXJuIHN1YkNvbnRhaW5lcjtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIC8qKlxuICAgICAqIEFkZHMgbGlzdGVuZXJzIHRvIGJ1dHRvbnNcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gc2IgVGhlIHNpZGViYXJcbiAgICAqL1xuICAgIGFkZFRyaWdnZXJzKHRvZ2dsZVRyaWdnZXJzKSB7XG4gICAgICAgIHRvZ2dsZVRyaWdnZXJzLmZvckVhY2goKHRyaWdnZXIpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHBhcmVudElkID0gdHJpZ2dlci5nZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnKTtcbiAgICAgICAgICAgIGNvbnN0IHBhcmVudCA9IHRyaWdnZXIucGFyZW50RWxlbWVudDtcblxuICAgICAgICAgICAgdHJpZ2dlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcblxuICAgICAgICAgICAgICAgIGNvbnN0IGFyaWFQcmVzc2VkID0gKHRyaWdnZXIuZ2V0QXR0cmlidXRlKCdhcmlhLXByZXNzZWQnKSA9PT0gJ3RydWUnKSA/ICdmYWxzZScgOiAndHJ1ZSc7XG4gICAgICAgICAgICAgICAgdHJpZ2dlci5zZXRBdHRyaWJ1dGUoJ2FyaWEtcHJlc3NlZCcsIGFyaWFQcmVzc2VkKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpZiAoIXRyaWdnZXIuZ2V0QXR0cmlidXRlKCdhcmlhLWxvYWRlZCcpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyaWdnZXIuc2V0QXR0cmlidXRlKCdhcmlhLWxvYWRlZCcsICd0cnVlJyk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYXBwZW5kQ2hpbGRyZW4ocGFyZW50SWQpLnRoZW4oKGNoaWxkKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnQuYXBwZW5kQ2hpbGQoY2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXJlbnRTdWJjb250YWluZXIgPSBwYXJlbnQucXVlcnlTZWxlY3RvcignLmMtc2lkZWJhcl9fc3ViY29udGFpbmVyJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkVHJpZ2dlcnMocGFyZW50U3ViY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5jLXNpZGViYXJfX3RvZ2dsZScpKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY29uc3QgcGFyZW50U3ViY29udGFpbmVyID0gcGFyZW50LnF1ZXJ5U2VsZWN0b3IoJy5jLXNpZGViYXJfX3N1YmNvbnRhaW5lcicpO1xuXG4gICAgICAgICAgICAgICAgaWYocGFyZW50U3ViY29udGFpbmVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhcmVudFN1YmNvbnRhaW5lci5jbGFzc0xpc3QudG9nZ2xlKCdjLXNpZGViYXJfX2l0ZW0tLWlzLWV4cGFuZGVkJyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICB9KTtcbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/dynamicSidebar.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/expand-section.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/expand-section.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* Toggle expandable areas */\n\nconst CONTAINER = '[js-expand-container]';\nconst BUTTON = '[js-expand-button]';\nconst EXPANDED = 'aria-expanded';\nconst CONTROLS = 'aria-controls';\nconst HIDDEN = 'aria-hidden';\n\n/**\n * Adds toggle event listeners to expandable elements\n */\nconst expandSection = () => {\n    const buttons = document.querySelectorAll(BUTTON);\n\n    buttons.forEach((button) => {\n        button.addEventListener('click', function (e) {\n            e.preventDefault();\n\n            const expanded = button.getAttribute(EXPANDED) === 'true';\n            toggleButton(button, expanded);\n        });\n    });\n};\n\n/**\n * Toggles a button's and its siblings \"pressed\" state\n * @param {HTMLElement} button\n * @param {bool} expanded\n */\nconst toggleButton = (button, expanded) => {\n    const container = button.closest(CONTAINER);\n    let safeExpanded = expanded;\n\n    if (!container) {\n        throw new Error(`${BUTTON} is missing outer ${CONTAINER}`);\n    }\n\n    // Check if elemnt is a tab\n    const isTab = button.getAttribute('role') === 'tab';\n    // Bail if is tab and is already selected\n    if (expanded && isTab) {\n        return;\n    }\n\n    safeExpanded = toggle(button, !expanded);\n\n    if (safeExpanded) {\n        const containerButtons = container.querySelectorAll(BUTTON);\n\n        containerButtons.forEach((other) => {\n            if (other !== button) {\n                toggle(other, false);\n            }\n        });\n    }\n};\n\n/**\n * Toggle helper\n * @param {HTMLElement} button\n * @param {bool} expanded\n * @return {boolean} the resulting state\n */\nconst toggle = (button, expanded) => {\n    let safeExpanded = expanded;\n\n    if (typeof safeExpanded !== 'boolean') {\n        safeExpanded = button.getAttribute(EXPANDED) === 'false';\n    }\n\n    button.setAttribute(EXPANDED, safeExpanded);\n\n    const id = button.getAttribute(CONTROLS);\n    const controls = document.getElementById(id);\n\n    if (!controls) {\n        throw new Error(`No toggle target found with id: \"${id}\"`);\n    }\n\n    if (safeExpanded) {\n        controls.setAttribute(HIDDEN, 'false');\n    } else {\n        controls.setAttribute(HIDDEN, 'true');\n    }\n\n    return safeExpanded;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (expandSection);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvZXhwYW5kLXNlY3Rpb24uanM/ODMwNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLEtBQUs7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQkFBMkIsT0FBTyxvQkFBb0IsVUFBVTtBQUNoRTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxLQUFLO0FBQ2hCLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSw0REFBNEQsR0FBRztBQUMvRDs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFZSw0RUFBYSxFQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BoZWxzaW5nYm9yZy1zdGFkL3N0eWxlZ3VpZGUvc291cmNlL2pzL2V4cGFuZC1zZWN0aW9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogVG9nZ2xlIGV4cGFuZGFibGUgYXJlYXMgKi9cblxuY29uc3QgQ09OVEFJTkVSID0gJ1tqcy1leHBhbmQtY29udGFpbmVyXSc7XG5jb25zdCBCVVRUT04gPSAnW2pzLWV4cGFuZC1idXR0b25dJztcbmNvbnN0IEVYUEFOREVEID0gJ2FyaWEtZXhwYW5kZWQnO1xuY29uc3QgQ09OVFJPTFMgPSAnYXJpYS1jb250cm9scyc7XG5jb25zdCBISURERU4gPSAnYXJpYS1oaWRkZW4nO1xuXG4vKipcbiAqIEFkZHMgdG9nZ2xlIGV2ZW50IGxpc3RlbmVycyB0byBleHBhbmRhYmxlIGVsZW1lbnRzXG4gKi9cbmNvbnN0IGV4cGFuZFNlY3Rpb24gPSAoKSA9PiB7XG4gICAgY29uc3QgYnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoQlVUVE9OKTtcblxuICAgIGJ1dHRvbnMuZm9yRWFjaCgoYnV0dG9uKSA9PiB7XG4gICAgICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgIGNvbnN0IGV4cGFuZGVkID0gYnV0dG9uLmdldEF0dHJpYnV0ZShFWFBBTkRFRCkgPT09ICd0cnVlJztcbiAgICAgICAgICAgIHRvZ2dsZUJ1dHRvbihidXR0b24sIGV4cGFuZGVkKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59O1xuXG4vKipcbiAqIFRvZ2dsZXMgYSBidXR0b24ncyBhbmQgaXRzIHNpYmxpbmdzIFwicHJlc3NlZFwiIHN0YXRlXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBidXR0b25cbiAqIEBwYXJhbSB7Ym9vbH0gZXhwYW5kZWRcbiAqL1xuY29uc3QgdG9nZ2xlQnV0dG9uID0gKGJ1dHRvbiwgZXhwYW5kZWQpID0+IHtcbiAgICBjb25zdCBjb250YWluZXIgPSBidXR0b24uY2xvc2VzdChDT05UQUlORVIpO1xuICAgIGxldCBzYWZlRXhwYW5kZWQgPSBleHBhbmRlZDtcblxuICAgIGlmICghY29udGFpbmVyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtCVVRUT059IGlzIG1pc3Npbmcgb3V0ZXIgJHtDT05UQUlORVJ9YCk7XG4gICAgfVxuXG4gICAgLy8gQ2hlY2sgaWYgZWxlbW50IGlzIGEgdGFiXG4gICAgY29uc3QgaXNUYWIgPSBidXR0b24uZ2V0QXR0cmlidXRlKCdyb2xlJykgPT09ICd0YWInO1xuICAgIC8vIEJhaWwgaWYgaXMgdGFiIGFuZCBpcyBhbHJlYWR5IHNlbGVjdGVkXG4gICAgaWYgKGV4cGFuZGVkICYmIGlzVGFiKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzYWZlRXhwYW5kZWQgPSB0b2dnbGUoYnV0dG9uLCAhZXhwYW5kZWQpO1xuXG4gICAgaWYgKHNhZmVFeHBhbmRlZCkge1xuICAgICAgICBjb25zdCBjb250YWluZXJCdXR0b25zID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoQlVUVE9OKTtcblxuICAgICAgICBjb250YWluZXJCdXR0b25zLmZvckVhY2goKG90aGVyKSA9PiB7XG4gICAgICAgICAgICBpZiAob3RoZXIgIT09IGJ1dHRvbikge1xuICAgICAgICAgICAgICAgIHRvZ2dsZShvdGhlciwgZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG4vKipcbiAqIFRvZ2dsZSBoZWxwZXJcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGJ1dHRvblxuICogQHBhcmFtIHtib29sfSBleHBhbmRlZFxuICogQHJldHVybiB7Ym9vbGVhbn0gdGhlIHJlc3VsdGluZyBzdGF0ZVxuICovXG5jb25zdCB0b2dnbGUgPSAoYnV0dG9uLCBleHBhbmRlZCkgPT4ge1xuICAgIGxldCBzYWZlRXhwYW5kZWQgPSBleHBhbmRlZDtcblxuICAgIGlmICh0eXBlb2Ygc2FmZUV4cGFuZGVkICE9PSAnYm9vbGVhbicpIHtcbiAgICAgICAgc2FmZUV4cGFuZGVkID0gYnV0dG9uLmdldEF0dHJpYnV0ZShFWFBBTkRFRCkgPT09ICdmYWxzZSc7XG4gICAgfVxuXG4gICAgYnV0dG9uLnNldEF0dHJpYnV0ZShFWFBBTkRFRCwgc2FmZUV4cGFuZGVkKTtcblxuICAgIGNvbnN0IGlkID0gYnV0dG9uLmdldEF0dHJpYnV0ZShDT05UUk9MUyk7XG4gICAgY29uc3QgY29udHJvbHMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG5cbiAgICBpZiAoIWNvbnRyb2xzKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgTm8gdG9nZ2xlIHRhcmdldCBmb3VuZCB3aXRoIGlkOiBcIiR7aWR9XCJgKTtcbiAgICB9XG5cbiAgICBpZiAoc2FmZUV4cGFuZGVkKSB7XG4gICAgICAgIGNvbnRyb2xzLnNldEF0dHJpYnV0ZShISURERU4sICdmYWxzZScpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnRyb2xzLnNldEF0dHJpYnV0ZShISURERU4sICd0cnVlJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHNhZmVFeHBhbmRlZDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGV4cGFuZFNlY3Rpb247XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/expand-section.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/fields.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/fields.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Fields {\n    \n    constructor() {                \n        this.form = document.getElementsByTagName('form')[0];\n        this.formElement = null;\n        this.formElementType = null;\n        this.formElementPattern = null;\n        this.formElementRequired = null;\n        this.formElementDataInvalid = null;\n        this.formElementDataInvalid = null;\n        \n        this.formValidationEventListerners();\n        this.fileInputOnChange();\n    }\n\n    createHiddenInput(visibileInput, filesMax, numberOfInputs, form) {\n        const hiddenInput = visibileInput.cloneNode(true);\n        \n        hiddenInput.setAttribute('style', 'display:none');\n        hiddenInput.setAttribute('js-field-fileinput', '');\n        visibileInput.parentNode.insertBefore(hiddenInput, visibileInput.nextSibling);\n        visibileInput.value = '';                    \n\n        form.addEventListener('submit', (event) => {\n            visibileInput.remove();                \n        });\n\n        return hiddenInput;\n    }\n    \n    createNotice(type, text, icon) {\n                const notice = document.createElement('div');\n                notice.classList.add('c-notice');\n                notice.classList.add('c-notice--' + type);\n        \n                const noticeIcon = document.createElement('span');\n                noticeIcon.classList.add('c-notice__icon')\n        \n                const iconItem = document.createElement('i');\n                iconItem.classList.add('c-icon');\n                iconItem.classList.add('c-icon--size-md');\n                iconItem.classList.add('material-icons');\n                iconItem.innerText = icon;\n        \n                noticeIcon.appendChild(iconItem);\n                notice.appendChild(noticeIcon);\n        \n                notice.innerText = text;\n        \n                return notice;\n          }\n    \n    /**\n     * File input - List files to upload\n     */\n    fileInputOnChange() {\n        \n        const self = this;\n        const inputs = document.querySelectorAll('.c-fileinput__input');\n        const noticeText = formbuilder.files_max_exceeded ? formbuilder.files_max_exceeded : 'Max number of files exceeded';\n        const notice = this.createNotice('danger', noticeText, 'report');\n\n        //Removing multiple attribute as this JS will handle that for the browser\n        inputs.forEach(input => {\n            if(input.hasAttribute('multiple')) {\n                input.removeAttribute('multiple');\n            }\n        });\n        \n        for (const formInput of inputs) {\n            \n            formInput.addEventListener('change', function (e) {\n                if (e.target.files && e.target.files[0]) {\n                    const fileNameContainer = this.closest('div').querySelector('ul');\n                    const clone = e.target.cloneNode(false);\n                    const form = formInput.closest('form');\n                    const filesMax = form.querySelector('.c-fileinput--area').getAttribute('filesMax');\n                    const hiddenInput = self.createHiddenInput(formInput, filesMax, 0, form);\n                    const addedFiles = form.querySelectorAll('input[js-field-fileinput]').length;\n\n                    if (addedFiles == filesMax) {\n                        formInput.setAttribute('disabled', 'true')\n                    } else if (formInput.hasAttribute('disabled')) {\n                        formInput.removeAttribute('disabled')\n                    }\n\n                    for (let int = 0; int < filesMax; int++) {\n                        const createListElement = document.createElement('li');\n                        const listElement = fileNameContainer.appendChild(createListElement);\n                        const fileSize = self.returnFileSize(clone.files[int].size);\n                        listElement.innerHTML = '<i class=\"c-icon c-icon--size-sm material-icons\">' +\n                        'attach_file</i><span class=\"c-icon__label c-icon__label--size\"> '+fileSize +', </span> <span class=\"c-icon__label\"><b>' + clone.files[int].name + '</b></span> <i class=\"c-icon c-fileinput__remove-file c-icon--size-lg  material-icons\">delete</i>';\n\n                        listElement.querySelector('.c-fileinput__remove-file').addEventListener('click', () => {\n                            hiddenInput.remove();\n                            listElement.remove();\n\n                            if(addedFiles <= filesMax) {\n                                notice.remove()\n                                \n                                if (formInput.hasAttribute('disabled')) {\n                                    formInput.removeAttribute('disabled')\n                                }\n                            }\n                        })\n                    }\n                }\n            });\n        }\n    }\n    \n    /**\n     * FileSize\n     * @param number\n     * @returns {string}\n     */\n    returnFileSize(number) {\n        if(number < 1024) {\n            return number + ' bytes';\n        } else if(number >= 1024 && number < 1048576) {\n            return (number/1024).toFixed(1) + ' KB';\n        } else if(number >= 1048576) {\n            return (number/1048576).toFixed(1) + ' MB';\n        }\n    }\n    \n    /**\n     * A simple input validation matcing input value with value\n     * Listerners Click and change\n     */\n    formValidationEventListerners() {\n        \n        const self = this;\n        const inputs = document.querySelectorAll('input[required], textarea[required], select[required]');\n        \n        for (const formInput of inputs) {\n            let inputId = formInput.getAttribute('id');\n            // On Click event listener - Setting data\n            document.getElementById(inputId).addEventListener('click', function (e) {\n                self.formElement = this;\n                \n                self.formElementType = (self.formElement.getAttribute('type')) ?\n                    self.formElement.getAttribute('type') : null;\n                \n                self.formElementPattern = (self.formElement.getAttribute('pattern')) ?\n                    self.formElement.getAttribute('pattern') : null;\n                \n                self.formElementRequired = (self.formElement.getAttribute('data-required')) ?\n                    self.formElement.getAttribute('pattern') : null;\n                \n                self.formElementDataInvalidMessage = (self.formElement.getAttribute('data-invalid-message')) ?\n                    self.formElement.getAttribute('data-invalid-message') : '';\n            });\n            \n            // On Change event listener\n            document.getElementById(inputId).addEventListener('change', function (element) {\n                self.validateFormField(element);\n            });\n        }\n    }\n    \n    \n    /**\n     * Validate Form fields by pattern\n     * @param element\n     */\n    validateFormField(element) {\n        \n        if (!('remove' in Element.prototype)) {\n            Element.prototype.remove = function () {\n                if (this.parentNode) {\n                    this.parentNode.removeChild(this);\n                }\n            };\n        }\n        \n        this.formElement.classList.remove('invalid');\n        this.formElement.classList.remove('valid');\n        \n        // If Require is on\n        if (this.formElementRequired) {\n            \n            let valid = false;\n            if (this.formElementPattern) {\n                valid = (this.formElement.value.match(this.formElementPattern)) ? true : false;\n            } else {\n                valid = true;\n            }\n            \n            const id = this.formElement.getAttribute('id');\n            if (!valid && !this.formElement.checkValidity()) {\n                this.formElement.classList.add('invalid');\n                \n                if (this.formElementDataInvalidMessage) {\n                    const errorMessage = document.getElementById('error_' + id + '_message');\n                    errorMessage.classList.add('error');\n                    errorMessage.getElementsByClassName(\"errorText\")[0].innerHTML = this.formElementDataInvalidMessage;\n                }\n                \n            } else {\n                document.getElementById('error_' + id + '_message').classList.remove('error');\n                this.formElement.className = \"valid\";\n            }\n        }\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Fields);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/fields.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/filter.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/filter.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Filter; });\n/* Filter lists */\nconst   CONTAINER   = \"[js-filter-container]\",\n        ITEM        = \"[js-filter-item]\",\n        DATA        = \"[js-filter-data]\",\n        INPUT       = \"[js-filter-input]\";\n\nclass Filter {\n    constructor() {\n        this.list = [];\n\n        this.enableSearch();\n    }\n\n    enableSearch() {\n        let containers = document.querySelectorAll(CONTAINER);//Get filterable elements\n\n        containers.forEach((container) => {\n\n            //Get filterable items\n            container.querySelectorAll(ITEM).forEach((item) => {\n                let dataItems;\n                let dataString = '';\n\n                if(item.hasAttribute('js-filter-data')) {\n                    dataItems = [item, ...item.querySelectorAll(DATA)];\n                } else {\n                    dataItems = item.querySelectorAll(DATA);\n                }\n\n                //Build search string\n                dataItems.forEach((data) => {\n                    dataString = dataString.concat(data.innerHTML);\n                    dataString = dataString.replace(/(<([^>]+)>)/gi, \"\");\n                });\n\n                //Add to search array\n                this.list.push({\n                    searchId: container.getAttribute('js-filter-container'), //Get id\n                    element: item,\n                    parent: item.parentNode,\n                    data: dataString.toLowerCase()\n                });\n            });\n\n            //Get inputs\n            container.querySelectorAll(INPUT).forEach((input) => {\n                input.addEventListener('input', () => {\n                    let inputId = input.getAttribute('js-filter-input');\n\n                    this.list.forEach((item) => {\n                        if (item.searchId === inputId) {\n                            //Get search term and search in item\n                            let res = item.data.search(input.value.toLocaleLowerCase());\n\n                            if (res < 0) {\n                                item.element.remove(); //Remove unmatched\n                            } else {\n                                item.parent.append(item.element); //Readd match\n                            }\n                        }\n                    });\n                });\n            });\n        });\n    }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvZmlsdGVyLmpzPzYyMGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWU7QUFDZjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSw4REFBOEQ7O0FBRTlEOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxzREFBc0Q7QUFDdEQsNkJBQTZCO0FBQzdCLGlFQUFpRTtBQUNqRTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvZmlsdGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogRmlsdGVyIGxpc3RzICovXG5jb25zdCAgIENPTlRBSU5FUiAgID0gXCJbanMtZmlsdGVyLWNvbnRhaW5lcl1cIixcbiAgICAgICAgSVRFTSAgICAgICAgPSBcIltqcy1maWx0ZXItaXRlbV1cIixcbiAgICAgICAgREFUQSAgICAgICAgPSBcIltqcy1maWx0ZXItZGF0YV1cIixcbiAgICAgICAgSU5QVVQgICAgICAgPSBcIltqcy1maWx0ZXItaW5wdXRdXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZpbHRlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMubGlzdCA9IFtdO1xuXG4gICAgICAgIHRoaXMuZW5hYmxlU2VhcmNoKCk7XG4gICAgfVxuXG4gICAgZW5hYmxlU2VhcmNoKCkge1xuICAgICAgICBsZXQgY29udGFpbmVycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoQ09OVEFJTkVSKTsvL0dldCBmaWx0ZXJhYmxlIGVsZW1lbnRzXG5cbiAgICAgICAgY29udGFpbmVycy5mb3JFYWNoKChjb250YWluZXIpID0+IHtcblxuICAgICAgICAgICAgLy9HZXQgZmlsdGVyYWJsZSBpdGVtc1xuICAgICAgICAgICAgY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoSVRFTSkuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBkYXRhSXRlbXM7XG4gICAgICAgICAgICAgICAgbGV0IGRhdGFTdHJpbmcgPSAnJztcblxuICAgICAgICAgICAgICAgIGlmKGl0ZW0uaGFzQXR0cmlidXRlKCdqcy1maWx0ZXItZGF0YScpKSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGFJdGVtcyA9IFtpdGVtLCAuLi5pdGVtLnF1ZXJ5U2VsZWN0b3JBbGwoREFUQSldO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGFJdGVtcyA9IGl0ZW0ucXVlcnlTZWxlY3RvckFsbChEQVRBKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL0J1aWxkIHNlYXJjaCBzdHJpbmdcbiAgICAgICAgICAgICAgICBkYXRhSXRlbXMuZm9yRWFjaCgoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBkYXRhU3RyaW5nID0gZGF0YVN0cmluZy5jb25jYXQoZGF0YS5pbm5lckhUTUwpO1xuICAgICAgICAgICAgICAgICAgICBkYXRhU3RyaW5nID0gZGF0YVN0cmluZy5yZXBsYWNlKC8oPChbXj5dKyk+KS9naSwgXCJcIik7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAvL0FkZCB0byBzZWFyY2ggYXJyYXlcbiAgICAgICAgICAgICAgICB0aGlzLmxpc3QucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIHNlYXJjaElkOiBjb250YWluZXIuZ2V0QXR0cmlidXRlKCdqcy1maWx0ZXItY29udGFpbmVyJyksIC8vR2V0IGlkXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ6IGl0ZW0sXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudDogaXRlbS5wYXJlbnROb2RlLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhU3RyaW5nLnRvTG93ZXJDYXNlKClcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvL0dldCBpbnB1dHNcbiAgICAgICAgICAgIGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKElOUFVUKS5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgICAgICAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBsZXQgaW5wdXRJZCA9IGlucHV0LmdldEF0dHJpYnV0ZSgnanMtZmlsdGVyLWlucHV0Jyk7XG5cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5saXN0LmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLnNlYXJjaElkID09PSBpbnB1dElkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9HZXQgc2VhcmNoIHRlcm0gYW5kIHNlYXJjaCBpbiBpdGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHJlcyA9IGl0ZW0uZGF0YS5zZWFyY2goaW5wdXQudmFsdWUudG9Mb2NhbGVMb3dlckNhc2UoKSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzIDwgMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLmVsZW1lbnQucmVtb3ZlKCk7IC8vUmVtb3ZlIHVubWF0Y2hlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ucGFyZW50LmFwcGVuZChpdGVtLmVsZW1lbnQpOyAvL1JlYWRkIG1hdGNoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/filter.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/gallery.js":
/*!************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/gallery.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _steppers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./steppers */ \"./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js\");\n/* harmony import */ var _image__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./image */ \"./node_modules/@helsingborg-stad/styleguide/source/js/image.js\");\n/**\n * Component Gallery\n */\n\n\n\nclass Gallery {\n\n    constructor() {\n\n        this.imageDataSet = [];\n        this.imageData = {};\n        this.modalImg = '';\n        this.modalId = null;\n        this.container = null;\n        this.isVisible = \"c-modal__bg--is-visible\";\n        this.StepperInstance = {};\n\n        this.Image = new _image__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n        this.StepperInstance = new _steppers__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    }\n\n    /**\n     * Init Modal Image in Gallery\n     * @param modalId\n     * @param modalImage\n     */\n    initImage(modalId, modalImage) {\n\n        const self = this;\n        this.modalId = modalId;\n        this.modalImg = modalImage;\n\n        for (let img of document.querySelectorAll(\"[data-large-img]\")) {\n            this.imageDataSet.push({\n                image: img.getAttribute('data-large-img'),\n                imageStep: img.getAttribute('data-stepping'),\n                imageCaption: img.getAttribute('data-caption')\n            });\n\n            if (img.getAttribute('data-large-img') === this.modalImg) {\n                this.imageData.image = img.getAttribute('data-large-img');\n                this.imageData.imageStep = img.getAttribute('data-stepping');\n                this.imageData.imageCaption = img.getAttribute('data-caption');\n            }\n        }\n\n        this.container = document.getElementById(this.modalId);\n        this.container.querySelector('.c-image').innerHTML = '';\n        self.createImg(this.container, this.imageData);\n\n    }\n\n    /**\n     * Enable Gallery\n     * Next, Previous image by click or keys\n     */\n    enableGallery() {\n\n        const self = this;\n\n        const nextTrigger = document.querySelectorAll(\"[data-next]\");\n        const prevTrigger = document.querySelectorAll(\"[data-prev]\");\n\n        // Next Image\n        for (const nxt of nextTrigger) {\n            nxt.addEventListener(\"click\", function () {\n                self.imageData = self.cycleImage('next');\n            });\n        }\n\n        // Previous image\n        for (const prev of prevTrigger) {\n            prev.addEventListener(\"click\", function () {\n                self.imageData = self.cycleImage('prev');\n            });\n        }\n\n        // Pressing Right key to skip to next\n        for (const nxt of nextTrigger) {\n            document.addEventListener(\"keyup\", e => {\n                if (e.key === \"ArrowRight\" && document.querySelector(`.${self.isVisible}`)) {\n                    self.imageData = self.cycleImage('next');\n                }\n            });\n        }\n\n        // Pressing Left key to skip to previous\n        for (const nxt of nextTrigger) {\n            document.addEventListener(\"keyup\", e => {\n                if (e.key === \"ArrowLeft\" && document.querySelector(`.${self.isVisible}`)) {\n                    self.imageData = self.cycleImage('prev');\n                }\n            });\n        }\n    }\n\n    /**\n     * Next & previous Image\n     * @param nav\n     * @returns {*}\n     */\n    cycleImage(nav) {\n        const self = this;\n\n        let currentIndex = parseInt(this.imageData.imageStep);\n        let nextIndex = (nav === 'next') ?\n            (currentIndex + 1) % this.imageDataSet.length :\n            (currentIndex - 1) % this.imageDataSet.length;\n\n        nextIndex = (nextIndex < 0) ? this.imageDataSet.length - 1 : nextIndex;\n        (currentIndex > this.imageDataSet.length) ?\n            this.createImg(this.container, this.imageDataSet[0]) :\n            this.createImg(this.container, this.imageDataSet[nextIndex]);\n\n        return this.imageDataSet[nextIndex];\n    }\n\n    /**\n     * Create Image in modal\n     * @param containerId\n     * @param imgSrc\n     */\n    createImg(containerId, imgSrc) {\n\n        const container = containerId.querySelector('.c-image');\n        const containerModalContent = containerId.querySelector('.c-modal__content');\n        this.imageData = imgSrc;\n\n        if (!('remove' in Element.prototype)) {\n            Element.prototype.remove = function() {\n                if (this.parentNode) {\n                    this.parentNode.removeChild(this);\n                }\n            };\n        }\n\n        if (container.querySelectorAll('img').length === 0) {\n\n            container.innerHTML = '';\n            container.classList.remove('c-image--is-placeholder');\n\n            this.Image.initImage({\n                'elementContainer': container,\n                'attrList': {\n                    'src': imgSrc.image,\n                    'data-step': imgSrc.imageStep,\n                    'data-caption': imgSrc.imageCaption\n                },\n                'classList': ['c-image__image']\n            });\n\n            this.imageCaption(containerModalContent, imgSrc);\n            this.StepperInstance.enableStepper('dots', this.container, this.imageDataSet.length, true);\n\n        } else {\n            container.querySelector('.c-image__image').src = imgSrc.image;\n            container.querySelector('.c-image__image').setAttribute('data-step', imgSrc.imageStep);\n\n            this.imageCaption(containerModalContent, imgSrc);\n            this.StepperInstance.enableStepper('dots', this.container, this.imageDataSet.length, false);\n        }\n    }\n\n    /**\n     * Setting image caption\n     * @param containerModalContent\n     * @param imgSrc\n     */\n    imageCaption(containerModalContent, imgSrc) {\n        if (imgSrc.imageCaption) {\n            if (containerModalContent.querySelector('.c-image__caption') !== null) {\n                containerModalContent.querySelector('.c-image__caption').remove();\n            }\n            containerModalContent.insertAdjacentHTML(\"beforeend\",\n                '<figcaption class=\"c-image__caption\">' + imgSrc.imageCaption + '</figcaption>');\n        }\n    }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Gallery);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/gallery.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/helpers/swipe.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/helpers/swipe.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("document.addEventListener('touchstart', handleTouchStart, false);        \ndocument.addEventListener('touchmove', handleTouchMove, false);\n\nconst swipeUp = new CustomEvent('swipeUp', {\n    bubbles: true,\n});\n\nconst swipeDown = new CustomEvent('swipeDown', {\n    bubbles: true,\n});\n\nconst swipeRight = new CustomEvent('swipeRight', {\n    bubbles: true,\n});\n\nconst swipeLeft = new CustomEvent('swipeLeft', {\n    bubbles: true,\n});\n\nvar xDown = null;                                                        \nvar yDown = null;\n\nfunction getTouches(evt) {\n  return evt.touches ||             // browser API\n         evt.originalEvent.touches; // jQuery\n}                                                     \n\nfunction handleTouchStart(evt) {\n    const firstTouch = getTouches(evt)[0];                                      \n    xDown = firstTouch.clientX;                                      \n    yDown = firstTouch.clientY;                                      \n};                                                \n\nfunction handleTouchMove(evt) {\n    if ( ! xDown || ! yDown ) {\n        return;\n    }\n\n    var xUp = evt.touches[0].clientX;                                    \n    var yUp = evt.touches[0].clientY;\n\n    var xDiff = xDown - xUp;\n    var yDiff = yDown - yUp;\n\n    if ( Math.abs( xDiff ) > Math.abs( yDiff ) ) {/*most significant*/\n        if ( xDiff > 0 ) {\n            /* left swipe */ \n            evt.target.dispatchEvent(swipeLeft)\n        } else {\n            /* right swipe */\n            evt.target.dispatchEvent(swipeRight)\n        }                       \n    } else {\n        if ( yDiff > 0 ) {\n            /* up swipe */ \n            evt.target.dispatchEvent(swipeUp)\n        } else { \n            /* down swipe */\n            evt.target.dispatchEvent(swipeDown)\n        }\n    }\n    /* reset values */\n    xDown = null;\n    yDown = null;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvaGVscGVycy9zd2lwZS5qcz81NTVkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLENBQUM7O0FBRUQsaUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DLEM7O0FBRUE7QUFDQSwwQztBQUNBLCtCO0FBQ0EsK0I7QUFDQSxFOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHFDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVMsTztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvaGVscGVycy9zd2lwZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBoYW5kbGVUb3VjaFN0YXJ0LCBmYWxzZSk7ICAgICAgICBcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIGhhbmRsZVRvdWNoTW92ZSwgZmFsc2UpO1xuXG5jb25zdCBzd2lwZVVwID0gbmV3IEN1c3RvbUV2ZW50KCdzd2lwZVVwJywge1xuICAgIGJ1YmJsZXM6IHRydWUsXG59KTtcblxuY29uc3Qgc3dpcGVEb3duID0gbmV3IEN1c3RvbUV2ZW50KCdzd2lwZURvd24nLCB7XG4gICAgYnViYmxlczogdHJ1ZSxcbn0pO1xuXG5jb25zdCBzd2lwZVJpZ2h0ID0gbmV3IEN1c3RvbUV2ZW50KCdzd2lwZVJpZ2h0Jywge1xuICAgIGJ1YmJsZXM6IHRydWUsXG59KTtcblxuY29uc3Qgc3dpcGVMZWZ0ID0gbmV3IEN1c3RvbUV2ZW50KCdzd2lwZUxlZnQnLCB7XG4gICAgYnViYmxlczogdHJ1ZSxcbn0pO1xuXG52YXIgeERvd24gPSBudWxsOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG52YXIgeURvd24gPSBudWxsO1xuXG5mdW5jdGlvbiBnZXRUb3VjaGVzKGV2dCkge1xuICByZXR1cm4gZXZ0LnRvdWNoZXMgfHwgICAgICAgICAgICAgLy8gYnJvd3NlciBBUElcbiAgICAgICAgIGV2dC5vcmlnaW5hbEV2ZW50LnRvdWNoZXM7IC8vIGpRdWVyeVxufSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cbmZ1bmN0aW9uIGhhbmRsZVRvdWNoU3RhcnQoZXZ0KSB7XG4gICAgY29uc3QgZmlyc3RUb3VjaCA9IGdldFRvdWNoZXMoZXZ0KVswXTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgIHhEb3duID0gZmlyc3RUb3VjaC5jbGllbnRYOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgeURvd24gPSBmaXJzdFRvdWNoLmNsaWVudFk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbn07ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cbmZ1bmN0aW9uIGhhbmRsZVRvdWNoTW92ZShldnQpIHtcbiAgICBpZiAoICEgeERvd24gfHwgISB5RG93biApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciB4VXAgPSBldnQudG91Y2hlc1swXS5jbGllbnRYOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgIHZhciB5VXAgPSBldnQudG91Y2hlc1swXS5jbGllbnRZO1xuXG4gICAgdmFyIHhEaWZmID0geERvd24gLSB4VXA7XG4gICAgdmFyIHlEaWZmID0geURvd24gLSB5VXA7XG5cbiAgICBpZiAoIE1hdGguYWJzKCB4RGlmZiApID4gTWF0aC5hYnMoIHlEaWZmICkgKSB7Lyptb3N0IHNpZ25pZmljYW50Ki9cbiAgICAgICAgaWYgKCB4RGlmZiA+IDAgKSB7XG4gICAgICAgICAgICAvKiBsZWZ0IHN3aXBlICovIFxuICAgICAgICAgICAgZXZ0LnRhcmdldC5kaXNwYXRjaEV2ZW50KHN3aXBlTGVmdClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8qIHJpZ2h0IHN3aXBlICovXG4gICAgICAgICAgICBldnQudGFyZ2V0LmRpc3BhdGNoRXZlbnQoc3dpcGVSaWdodClcbiAgICAgICAgfSAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKCB5RGlmZiA+IDAgKSB7XG4gICAgICAgICAgICAvKiB1cCBzd2lwZSAqLyBcbiAgICAgICAgICAgIGV2dC50YXJnZXQuZGlzcGF0Y2hFdmVudChzd2lwZVVwKVxuICAgICAgICB9IGVsc2UgeyBcbiAgICAgICAgICAgIC8qIGRvd24gc3dpcGUgKi9cbiAgICAgICAgICAgIGV2dC50YXJnZXQuZGlzcGF0Y2hFdmVudChzd2lwZURvd24pXG4gICAgICAgIH1cbiAgICB9XG4gICAgLyogcmVzZXQgdmFsdWVzICovXG4gICAgeERvd24gPSBudWxsO1xuICAgIHlEb3duID0gbnVsbDtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/helpers/swipe.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/helpers/video.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/helpers/video.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return VideoControls; });\nclass VideoControls {\n    constructor(videoElement) {\n        this.PLAYER = videoElement;\n\n        this.videoInteractions();\n    }\n\n    videoInteractions() {\n        const btn = this.PLAYER.querySelector('[js-video-control]');\n        if(btn) {\n            btn.addEventListener('click', () => {\n                if (this.getVideoState() === 'playing' || !this.getVideoState()) {\n                    this.pauseVideo();\n                } else {\n                    this.playVideo();\n                }\n            })\n        }\n    }\n\n    getVideoState() {\n        return this.PLAYER.getAttribute('js-video-control');\n    }\n\n    pauseVideo() {\n        this.PLAYER.setAttribute('js-video-control', 'paused');\n        this.PLAYER.querySelector('video').pause();\n    }\n\n    playVideo() {\n        this.PLAYER.setAttribute('js-video-control', 'playing');\n        this.PLAYER.querySelector('video').play();\n    }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvaGVscGVycy92aWRlby5qcz8yNmQ4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBZTtBQUNmO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BoZWxzaW5nYm9yZy1zdGFkL3N0eWxlZ3VpZGUvc291cmNlL2pzL2hlbHBlcnMvdmlkZW8uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBWaWRlb0NvbnRyb2xzIHtcbiAgICBjb25zdHJ1Y3Rvcih2aWRlb0VsZW1lbnQpIHtcbiAgICAgICAgdGhpcy5QTEFZRVIgPSB2aWRlb0VsZW1lbnQ7XG5cbiAgICAgICAgdGhpcy52aWRlb0ludGVyYWN0aW9ucygpO1xuICAgIH1cblxuICAgIHZpZGVvSW50ZXJhY3Rpb25zKCkge1xuICAgICAgICBjb25zdCBidG4gPSB0aGlzLlBMQVlFUi5xdWVyeVNlbGVjdG9yKCdbanMtdmlkZW8tY29udHJvbF0nKTtcbiAgICAgICAgaWYoYnRuKSB7XG4gICAgICAgICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2V0VmlkZW9TdGF0ZSgpID09PSAncGxheWluZycgfHwgIXRoaXMuZ2V0VmlkZW9TdGF0ZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGF1c2VWaWRlbygpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGxheVZpZGVvKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldFZpZGVvU3RhdGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLlBMQVlFUi5nZXRBdHRyaWJ1dGUoJ2pzLXZpZGVvLWNvbnRyb2wnKTtcbiAgICB9XG5cbiAgICBwYXVzZVZpZGVvKCkge1xuICAgICAgICB0aGlzLlBMQVlFUi5zZXRBdHRyaWJ1dGUoJ2pzLXZpZGVvLWNvbnRyb2wnLCAncGF1c2VkJyk7XG4gICAgICAgIHRoaXMuUExBWUVSLnF1ZXJ5U2VsZWN0b3IoJ3ZpZGVvJykucGF1c2UoKTtcbiAgICB9XG5cbiAgICBwbGF5VmlkZW8oKSB7XG4gICAgICAgIHRoaXMuUExBWUVSLnNldEF0dHJpYnV0ZSgnanMtdmlkZW8tY29udHJvbCcsICdwbGF5aW5nJyk7XG4gICAgICAgIHRoaXMuUExBWUVSLnF1ZXJ5U2VsZWN0b3IoJ3ZpZGVvJykucGxheSgpO1xuICAgIH1cbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/helpers/video.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/image.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/image.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * Component Image\n */\nclass Image {\n\n    constructor() {\n\n        this.image = null;\n        this.container = null;\n        this.imgAttr = null;\n        this.imgCss = null;\n    }\n\n    /**\n     * Init\n     * @return void\n     */\n    initImage(imageData) {\n\n        this.container = imageData.elementContainer;\n        this.imgAttr = imageData.attrList;\n        this.imgCss = imageData.classList;\n        this.image = document.createElement(\"img\");\n\n        this.appendImage();\n    }\n\n    /**\n     * Setting Image Attributes\n     * @return void\n     */\n    setAttr(){\n\n        if (this.imgAttr.src) {\n            for (let [key, value] of Object.entries(this.imgAttr)) {\n                this.image.setAttribute(`${key}`, value);\n            }\n        }\n    }\n\n    /**\n     * Adding CSS classes\n     * @return void\n     */\n    setCSSClasses(){\n\n        if (this.imgCss.length > 0) {\n            for (const cssClass of this.imgCss) {\n                this.image.classList.add(cssClass);\n            }\n        }\n    }\n\n    /**\n     * Append image to container\n     * @param img\n     */\n    appendImage() {\n\n        this.setAttr();\n        this.container.appendChild(this.image);\n        this.setCSSClasses();\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Image);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvaW1hZ2UuanM/YmQ0NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDJDQUEyQyxJQUFJO0FBQy9DO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWUsb0VBQUsiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvaW1hZ2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbXBvbmVudCBJbWFnZVxuICovXG5jbGFzcyBJbWFnZSB7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcblxuICAgICAgICB0aGlzLmltYWdlID0gbnVsbDtcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBudWxsO1xuICAgICAgICB0aGlzLmltZ0F0dHIgPSBudWxsO1xuICAgICAgICB0aGlzLmltZ0NzcyA9IG51bGw7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSW5pdFxuICAgICAqIEByZXR1cm4gdm9pZFxuICAgICAqL1xuICAgIGluaXRJbWFnZShpbWFnZURhdGEpIHtcblxuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IGltYWdlRGF0YS5lbGVtZW50Q29udGFpbmVyO1xuICAgICAgICB0aGlzLmltZ0F0dHIgPSBpbWFnZURhdGEuYXR0ckxpc3Q7XG4gICAgICAgIHRoaXMuaW1nQ3NzID0gaW1hZ2VEYXRhLmNsYXNzTGlzdDtcbiAgICAgICAgdGhpcy5pbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG5cbiAgICAgICAgdGhpcy5hcHBlbmRJbWFnZSgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldHRpbmcgSW1hZ2UgQXR0cmlidXRlc1xuICAgICAqIEByZXR1cm4gdm9pZFxuICAgICAqL1xuICAgIHNldEF0dHIoKXtcblxuICAgICAgICBpZiAodGhpcy5pbWdBdHRyLnNyYykge1xuICAgICAgICAgICAgZm9yIChsZXQgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHRoaXMuaW1nQXR0cikpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmltYWdlLnNldEF0dHJpYnV0ZShgJHtrZXl9YCwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkaW5nIENTUyBjbGFzc2VzXG4gICAgICogQHJldHVybiB2b2lkXG4gICAgICovXG4gICAgc2V0Q1NTQ2xhc3Nlcygpe1xuXG4gICAgICAgIGlmICh0aGlzLmltZ0Nzcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNzc0NsYXNzIG9mIHRoaXMuaW1nQ3NzKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbWFnZS5jbGFzc0xpc3QuYWRkKGNzc0NsYXNzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFwcGVuZCBpbWFnZSB0byBjb250YWluZXJcbiAgICAgKiBAcGFyYW0gaW1nXG4gICAgICovXG4gICAgYXBwZW5kSW1hZ2UoKSB7XG5cbiAgICAgICAgdGhpcy5zZXRBdHRyKCk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMuaW1hZ2UpO1xuICAgICAgICB0aGlzLnNldENTU0NsYXNzZXMoKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEltYWdlOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/image.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/keepInViewPort.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/keepInViewPort.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return KeepInViewPort; });\nclass KeepInViewPort {\n  constructor() {\n    this.VIEWPORTRESIZE = 'js-keep-in-viewport-after-resize';\n    this.VIEWPORT = 'js-keep-in-viewport';\n\n    // Get containers.\n    const ViewPortResizeContainer = document.querySelectorAll(`[${this.VIEWPORTRESIZE}]`);\n      \n    if(ViewPortResizeContainer) {\n      ViewPortResizeContainer.forEach(item => {\n        item.addEventListener('resizeByChildren', KeepInViewPort.resizeEvent);\n      });\n    }\n\n    // Get containers.\n    const ViewPortContainer = document.querySelectorAll(`[${this.VIEWPORT}]`);\n\n    if(ViewPortContainer) {\n      ViewPortContainer.forEach(item => {\n        KeepInViewPort.moveInsideViewPort(item, 8);\n      });\n    }\n  }\n\n  /**\n   * Keep the actual viewport function cleaned from event objects.\n   * @param {object} event \n   * @return void\n   */\n  static resizeEvent(event) {\n    KeepInViewPort.moveInsideViewPort(event.target, 8);\n  }\n\n  /**\n   * Move element inside viewport.\n   * @param {object} element \n   * @param {integer} margin\n   * @return void\n   */\n  static moveInsideViewPort(element, margin) {\n    // Enable calculations.\n    element.classList.add('u-display--block');\n\n    // Compare window width with right most position.\n    const viewPortRightDistance = window.innerWidth - element.getBoundingClientRect().right;\n    if (viewPortRightDistance < 0) {\n        element.setAttribute('style', `${element.getAttribute('style')} left: ${viewPortRightDistance - margin}px;`);\n    }\n\n    // Disable calculations.\n    element.classList.remove('u-display--block'); \n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMva2VlcEluVmlld1BvcnQuanM/ZDY1OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQWU7QUFDZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrRUFBa0Usb0JBQW9COztBQUV0RjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQSw0REFBNEQsY0FBYzs7QUFFMUU7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLE9BQU87QUFDcEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLDhCQUE4QixTQUFTLCtCQUErQixHQUFHO0FBQ2xIOztBQUVBO0FBQ0EsaUQ7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BoZWxzaW5nYm9yZy1zdGFkL3N0eWxlZ3VpZGUvc291cmNlL2pzL2tlZXBJblZpZXdQb3J0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgS2VlcEluVmlld1BvcnQge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLlZJRVdQT1JUUkVTSVpFID0gJ2pzLWtlZXAtaW4tdmlld3BvcnQtYWZ0ZXItcmVzaXplJztcbiAgICB0aGlzLlZJRVdQT1JUID0gJ2pzLWtlZXAtaW4tdmlld3BvcnQnO1xuXG4gICAgLy8gR2V0IGNvbnRhaW5lcnMuXG4gICAgY29uc3QgVmlld1BvcnRSZXNpemVDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGBbJHt0aGlzLlZJRVdQT1JUUkVTSVpFfV1gKTtcbiAgICAgIFxuICAgIGlmKFZpZXdQb3J0UmVzaXplQ29udGFpbmVyKSB7XG4gICAgICBWaWV3UG9ydFJlc2l6ZUNvbnRhaW5lci5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZUJ5Q2hpbGRyZW4nLCBLZWVwSW5WaWV3UG9ydC5yZXNpemVFdmVudCk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBHZXQgY29udGFpbmVycy5cbiAgICBjb25zdCBWaWV3UG9ydENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYFske3RoaXMuVklFV1BPUlR9XWApO1xuXG4gICAgaWYoVmlld1BvcnRDb250YWluZXIpIHtcbiAgICAgIFZpZXdQb3J0Q29udGFpbmVyLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgIEtlZXBJblZpZXdQb3J0Lm1vdmVJbnNpZGVWaWV3UG9ydChpdGVtLCA4KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBLZWVwIHRoZSBhY3R1YWwgdmlld3BvcnQgZnVuY3Rpb24gY2xlYW5lZCBmcm9tIGV2ZW50IG9iamVjdHMuXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBldmVudCBcbiAgICogQHJldHVybiB2b2lkXG4gICAqL1xuICBzdGF0aWMgcmVzaXplRXZlbnQoZXZlbnQpIHtcbiAgICBLZWVwSW5WaWV3UG9ydC5tb3ZlSW5zaWRlVmlld1BvcnQoZXZlbnQudGFyZ2V0LCA4KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBNb3ZlIGVsZW1lbnQgaW5zaWRlIHZpZXdwb3J0LlxuICAgKiBAcGFyYW0ge29iamVjdH0gZWxlbWVudCBcbiAgICogQHBhcmFtIHtpbnRlZ2VyfSBtYXJnaW5cbiAgICogQHJldHVybiB2b2lkXG4gICAqL1xuICBzdGF0aWMgbW92ZUluc2lkZVZpZXdQb3J0KGVsZW1lbnQsIG1hcmdpbikge1xuICAgIC8vIEVuYWJsZSBjYWxjdWxhdGlvbnMuXG4gICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKCd1LWRpc3BsYXktLWJsb2NrJyk7XG5cbiAgICAvLyBDb21wYXJlIHdpbmRvdyB3aWR0aCB3aXRoIHJpZ2h0IG1vc3QgcG9zaXRpb24uXG4gICAgY29uc3Qgdmlld1BvcnRSaWdodERpc3RhbmNlID0gd2luZG93LmlubmVyV2lkdGggLSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnJpZ2h0O1xuICAgIGlmICh2aWV3UG9ydFJpZ2h0RGlzdGFuY2UgPCAwKSB7XG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdzdHlsZScsIGAke2VsZW1lbnQuZ2V0QXR0cmlidXRlKCdzdHlsZScpfSBsZWZ0OiAke3ZpZXdQb3J0UmlnaHREaXN0YW5jZSAtIG1hcmdpbn1weDtgKTtcbiAgICB9XG5cbiAgICAvLyBEaXNhYmxlIGNhbGN1bGF0aW9ucy5cbiAgICBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ3UtZGlzcGxheS0tYmxvY2snKTsgXG4gIH1cbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/keepInViewPort.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/mediaQuery.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/mediaQuery.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* eslint-disable no-restricted-globals */\n/* eslint-disable class-methods-use-this */\n/**\n * Component Image\n */\nclass ContainerMediaQuery {\n  constructor() {\n\n    // Class vars\n    const prefixName = \"--size-\"; \n      \n    // Init only if browser supports ResizeObserver\n    if ('ResizeObserver' in self) {\n      this.resizeObserver = new ResizeObserver((entries) => {\n        \n        const defaultBreakpoints = {xs: 384, sm: 576, md: 768, lg: 960};\n\n        entries.forEach((entry) => {\n          \n          // If breakpoints are defined on the observed element,\n          const breakpoints = entry.target.dataset.breakpoints ?\n          JSON.parse(entry.target.dataset.breakpoints) :\n          defaultBreakpoints;\n\n          // Update the matching breakpoints on the observed element.\n          Object.keys(breakpoints).forEach((breakpoint) => {\n\n            const minWidth = breakpoints[breakpoint];\n\n            if (entry.contentRect.width >= minWidth) {\n              entry.target.classList.add(entry.target.classList[0] + prefixName + breakpoint);\n            } else {\n              entry.target.classList.remove(entry.target.classList[0] + prefixName + breakpoint);\n            }\n\n          });\n        });  \n      }); \n\n      this.initMediaQueryElements(); \n    }\n  }\n\n  /**\n   * Init\n   * @return void\n   */\n  initMediaQueryElements() {\n\n    // Get elements\n    const targetElemets = this.getTargetElements(); \n\n    // Init observer on all target elements\n    if(targetElemets.length) {\n      targetElemets.forEach((element) => {\n        this.resizeObserver.observe(element);\n      }); \n    }\n  }\n\n  /**\n   * Makes query to dom, for observe data attr. \n   */\n  getTargetElements() {\n    return document.querySelectorAll('[data-observe-resizes]');\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ContainerMediaQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvbWVkaWFRdWVyeS5qcz9iNTY2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpQzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsb0NBQW9DOztBQUVwQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTs7QUFFQSxXQUFXO0FBQ1gsU0FBUyxFO0FBQ1QsT0FBTyxFOztBQUVQLG9DO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLEU7QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVlLGtGQUFtQiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AaGVsc2luZ2Jvcmctc3RhZC9zdHlsZWd1aWRlL3NvdXJjZS9qcy9tZWRpYVF1ZXJ5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tcmVzdHJpY3RlZC1nbG9iYWxzICovXG4vKiBlc2xpbnQtZGlzYWJsZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzICovXG4vKipcbiAqIENvbXBvbmVudCBJbWFnZVxuICovXG5jbGFzcyBDb250YWluZXJNZWRpYVF1ZXJ5IHtcbiAgY29uc3RydWN0b3IoKSB7XG5cbiAgICAvLyBDbGFzcyB2YXJzXG4gICAgY29uc3QgcHJlZml4TmFtZSA9IFwiLS1zaXplLVwiOyBcbiAgICAgIFxuICAgIC8vIEluaXQgb25seSBpZiBicm93c2VyIHN1cHBvcnRzIFJlc2l6ZU9ic2VydmVyXG4gICAgaWYgKCdSZXNpemVPYnNlcnZlcicgaW4gc2VsZikge1xuICAgICAgdGhpcy5yZXNpemVPYnNlcnZlciA9IG5ldyBSZXNpemVPYnNlcnZlcigoZW50cmllcykgPT4ge1xuICAgICAgICBcbiAgICAgICAgY29uc3QgZGVmYXVsdEJyZWFrcG9pbnRzID0ge3hzOiAzODQsIHNtOiA1NzYsIG1kOiA3NjgsIGxnOiA5NjB9O1xuXG4gICAgICAgIGVudHJpZXMuZm9yRWFjaCgoZW50cnkpID0+IHtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBJZiBicmVha3BvaW50cyBhcmUgZGVmaW5lZCBvbiB0aGUgb2JzZXJ2ZWQgZWxlbWVudCxcbiAgICAgICAgICBjb25zdCBicmVha3BvaW50cyA9IGVudHJ5LnRhcmdldC5kYXRhc2V0LmJyZWFrcG9pbnRzID9cbiAgICAgICAgICBKU09OLnBhcnNlKGVudHJ5LnRhcmdldC5kYXRhc2V0LmJyZWFrcG9pbnRzKSA6XG4gICAgICAgICAgZGVmYXVsdEJyZWFrcG9pbnRzO1xuXG4gICAgICAgICAgLy8gVXBkYXRlIHRoZSBtYXRjaGluZyBicmVha3BvaW50cyBvbiB0aGUgb2JzZXJ2ZWQgZWxlbWVudC5cbiAgICAgICAgICBPYmplY3Qua2V5cyhicmVha3BvaW50cykuZm9yRWFjaCgoYnJlYWtwb2ludCkgPT4ge1xuXG4gICAgICAgICAgICBjb25zdCBtaW5XaWR0aCA9IGJyZWFrcG9pbnRzW2JyZWFrcG9pbnRdO1xuXG4gICAgICAgICAgICBpZiAoZW50cnkuY29udGVudFJlY3Qud2lkdGggPj0gbWluV2lkdGgpIHtcbiAgICAgICAgICAgICAgZW50cnkudGFyZ2V0LmNsYXNzTGlzdC5hZGQoZW50cnkudGFyZ2V0LmNsYXNzTGlzdFswXSArIHByZWZpeE5hbWUgKyBicmVha3BvaW50KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGVudHJ5LnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKGVudHJ5LnRhcmdldC5jbGFzc0xpc3RbMF0gKyBwcmVmaXhOYW1lICsgYnJlYWtwb2ludCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7ICBcbiAgICAgIH0pOyBcblxuICAgICAgdGhpcy5pbml0TWVkaWFRdWVyeUVsZW1lbnRzKCk7IFxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBJbml0XG4gICAqIEByZXR1cm4gdm9pZFxuICAgKi9cbiAgaW5pdE1lZGlhUXVlcnlFbGVtZW50cygpIHtcblxuICAgIC8vIEdldCBlbGVtZW50c1xuICAgIGNvbnN0IHRhcmdldEVsZW1ldHMgPSB0aGlzLmdldFRhcmdldEVsZW1lbnRzKCk7IFxuXG4gICAgLy8gSW5pdCBvYnNlcnZlciBvbiBhbGwgdGFyZ2V0IGVsZW1lbnRzXG4gICAgaWYodGFyZ2V0RWxlbWV0cy5sZW5ndGgpIHtcbiAgICAgIHRhcmdldEVsZW1ldHMuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgICAgICB0aGlzLnJlc2l6ZU9ic2VydmVyLm9ic2VydmUoZWxlbWVudCk7XG4gICAgICB9KTsgXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIE1ha2VzIHF1ZXJ5IHRvIGRvbSwgZm9yIG9ic2VydmUgZGF0YSBhdHRyLiBcbiAgICovXG4gIGdldFRhcmdldEVsZW1lbnRzKCkge1xuICAgIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1vYnNlcnZlLXJlc2l6ZXNdJyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29udGFpbmVyTWVkaWFRdWVyeTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/mediaQuery.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/menu.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/menu.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Menu; });\nclass Menu {\n    constructor() {\n        this.TRIGGER = 'js-menu-trigger';\n        this.DART = 'js-menu-dart';\n        this.TARGET = 'js-menu-target';\n        this.EXPANDID = 'data-load-submenu';\n\n        this.elm = '';\n\n        this.getSubitem();\n        this.getNavbar();\n    }\n\n    /**\n     * Finds each navbar in the document.\n     * \n     * Finds each navbar in the document and then sends it for further handling\n     */\n    getNavbar() {\n        const navbar = document.querySelectorAll(\".c-navbar\");\n\n        navbar.forEach((element) => {\n            this.addTriggers(element)\n        })\n    }\n\n    /**\n     * Adds event listeners to the link items.\n     * \n     * @param {*} element   The navbar element to add triggers to\n     */\n    addTriggers(element) {\n        const triggers = element.querySelectorAll(`[${this.TRIGGER}]`);\n\n        triggers.forEach((trigger) => {\n            const toggleClass = trigger.getAttribute(this.TRIGGER);\n            const targetId = trigger.getAttribute(this.DART);\n\n            trigger.addEventListener('click', (event) => {\n                const targets = document.querySelectorAll(`[${this.TARGET}=\"${targetId}\"]`);\n\n                targets.forEach((target) => {\n                    target.classList.toggle(toggleClass);\n                })\n            });\n        });\n    }\n\n    /**\n     * Looks if a nav items has children.\n     * \n     * First looks if nav items has children, if it does then it add and event listener to the toggle button\n     * \n     * @param {*} root  The container to look inside, cna be a single nav item or the root navbar\n     */\n    getSubitem(root) {\n        const IDS = root ? root.querySelectorAll(`[${this.EXPANDID}]`) : document.querySelectorAll(`[${this.EXPANDID}]`)\n\n        IDS.forEach((id) => {\n            id.addEventListener('click', (event) => {\n                event.preventDefault();\n                id.toggleAttribute(\"is-open\");\n\n                if (!id.hasAttribute(\"data-isAppended-subitem\")) {\n                    id.setAttribute('data-isAppended-subitem', '');\n                    this.findItems([], id.getAttribute(this.EXPANDID))\n                }\n            });\n        });\n    }\n\n    /**\n     * Fetches JSON data\n     * \n     * @param {*} path  Path to json file\n     * @param {*} find  What id to look for\n     */\n     fetchJSONFile(path, find) {\n        const httpRequest = new XMLHttpRequest();\n        httpRequest.onreadystatechange = () => {\n            if (httpRequest.readyState === 4 || httpRequest.readyState === 0) {\n                if (httpRequest.status === 200) {\n                    const data = JSON.parse(httpRequest.responseText);\n\n                    this.findItems(data, find)\n                    return data;\n                }\n            }\n\n            return 0;\n        };\n        httpRequest.open('GET', path, true);\n        httpRequest.send(); \n    }\n    \n    /**\n     * Looks for a specific nav item\n     * @param {*} data Data to search through\n     * @param {*} find What id to look for\n     */\n    findItems(data, find) {\n        if (data.length > 0) {\n            return Object.keys(data).some((k) => {\n                if (data[k].id === find) {\n                    this.appendItems(data[k].list, data[k].id);\n    \n                    return 0; // return on direct found\n                }\n    \n                if (Array.isArray(data[k].list)) {\n                    return this.findItems(data[k].list, find); // return result of nested search\n                }\n\n                return 0;\n\n            });\n        }\n\n        // Data is empty. fetch from JSON file\n        this.fetchJSONFile('/assets/data/nav.json', find);\n        \n        return 0;\n    }\n\n    /**\n     * Appends each child item to the parent item.\n     * \n     * @param {*} list  List of items to be appended\n     * @param {*} id    Identifier for which element to append to.\n     */\n    appendItems(list, id) {\n        const target = document.querySelector(`[data-append-submenu=\"${id}\"]`);\n\n        list.forEach((item) => {\n            this.buildDOM(item)\n            target.appendChild(this.elm)\n            this.getSubitem(this.elm);\n            this.addTriggers(this.elm)\n        });\n    }\n\n    /**\n     * Builds a nav item dom object \n     * \n     * @param {*} item The item data to build the element based on\n     */\n    buildDOM(item) {\n        const uniqID = Math.random().toString(36).substr(2, 9);\n\n        const newLink = document.createElement(\"a\");\n        newLink.href = item.href\n\n        const newEl = document.createElement(\"div\");\n        newEl.className = \"c-navbar__item\";\n\n        // Build link element\n        const newSpan = document.createElement(\"span\");\n        newSpan.appendChild(document.createTextNode(item.name))\n        \n        newEl.appendChild(newSpan);\n\n        if (item.list) {\n            // Item has children\n            // Build toggle elements\n            const newTgl = document.createElement(\"div\");\n            newTgl.className = \"c-navbar__toggle\";\n\n            const newBtn = document.createElement(\"button\");\n            newBtn.className = \"c-button c-button__icon\";\n\n            newBtn.setAttribute('js-menu-trigger', 'c-navbar__subitem--expanded');\n            newBtn.setAttribute('js-menu-dart', uniqID);\n            newBtn.setAttribute('data-load-submenu', item.id);\n\n            const newLbl = document.createElement(\"span\");\n            newLbl.className = \"c-btn__label\";\n\n            const newIcon = document.createElement(\"i\");\n            newIcon.className = \"c-icon c-icon--color-primary c-icon--size-md material-icons\";\n            newIcon.appendChild(document.createTextNode(\"expand_more\"))\n\n            // Append Icon elemetns\n            newLbl.appendChild(newIcon);\n            newBtn.appendChild(newLbl);\n            newTgl.appendChild(newBtn);\n\n            // Append element\n            newEl.appendChild(newTgl);\n\n            const newSubItem = document.createElement(\"div\");\n            newSubItem.className = \"c-navbar__subitem\"\n            newSubItem.setAttribute('js-menu-target', uniqID);\n            newSubItem.setAttribute('data-append-submenu', item.id);\n\n            newEl.appendChild(newSubItem);\n        }\n\n        newLink.appendChild(newEl)\n\n        this.elm = newLink;\n    }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/menu.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/modal.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/modal.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _gallery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gallery */ \"./node_modules/@helsingborg-stad/styleguide/source/js/gallery.js\");\n\n\nclass Modal {\n\n    constructor() {\n\n        this.modalId = null;\n        this.openTrigger = document.querySelectorAll(\"[data-open]\");\n        this.closeTrigger = document.querySelectorAll(\"[data-close]\");\n        this.isVisible = \"c-modal__bg--is-visible\";\n    }\n\n    /**\n     * Enable Modal\n     */\n    enableModals() {\n\n        const self = this;\n        // Gallery\n        let GalleryInstance = new _gallery__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n        GalleryInstance.enableGallery(this.modalId);\n\n        for(const trigger of this.openTrigger) {\n            trigger.addEventListener(\"click\", function() {\n                this.modalId = this.getAttribute('data-open'); //this.dataset.open;\n                document.getElementById(this.modalId).classList.add(self.isVisible);\n\n                if(this.getAttribute('data-large-img')) {\n                    GalleryInstance.initImage(this.modalId, this.getAttribute('data-large-img'));\n                }\n\n                self.lockScroll();\n            });\n        }\n\n        // Close\n        for (const trigger of this.closeTrigger) {\n            trigger.addEventListener(\"click\", function() {\n                document.querySelector(`.${self.isVisible}`).classList.remove(self.isVisible);\n                self.unlockScroll();\n            });\n        }\n\n        // Click outside modal\n        document.addEventListener(\"click\", e => {\n            if (e.target === document.querySelector(`.${self.isVisible}`)) {\n                document.querySelector(`.${self.isVisible}`).classList.remove(self.isVisible);\n                self.unlockScroll();\n            }\n        });\n\n        // Pressing Esc key to close modal\n        document.addEventListener(\"keyup\", e => {\n            if (e.key === \"Escape\" && document.querySelector(`.${self.isVisible}`)) {\n                document.querySelector(`.${self.isVisible}`).classList.remove(self.isVisible);\n                self.unlockScroll();\n            }\n        });\n    }\n\n    /**\n     * Lock scroll\n     * @returns {*}\n     */\n    lockScroll() {\n        const overflowHidden = \"u-overflow--hidden\";\n        document.querySelector(`body`).classList.add(overflowHidden);\n    }\n\n    /**\n     * Unlock scroll\n     * @returns {*}\n     */\n    unlockScroll() {\n        const overflowHidden = \"u-overflow--hidden\";\n        document.querySelector(`body`).classList.remove(overflowHidden);\n    }\n\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Modal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvbW9kYWwuanM/OGZjYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQWdDOztBQUVoQzs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQ0FBa0MsZ0RBQU87QUFDekM7O0FBRUE7QUFDQTtBQUNBLDhEQUE4RDtBQUM5RDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGVBQWU7QUFDMUQ7QUFDQSxhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBLHdEQUF3RCxlQUFlO0FBQ3ZFLDJDQUEyQyxlQUFlO0FBQzFEO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxpRUFBaUUsZUFBZTtBQUNoRiwyQ0FBMkMsZUFBZTtBQUMxRDtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBOztBQUVlLG9FQUFLIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BoZWxzaW5nYm9yZy1zdGFkL3N0eWxlZ3VpZGUvc291cmNlL2pzL21vZGFsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbGxlcnkgZnJvbSBcIi4vZ2FsbGVyeVwiO1xuXG5jbGFzcyBNb2RhbCB7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcblxuICAgICAgICB0aGlzLm1vZGFsSWQgPSBudWxsO1xuICAgICAgICB0aGlzLm9wZW5UcmlnZ2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLW9wZW5dXCIpO1xuICAgICAgICB0aGlzLmNsb3NlVHJpZ2dlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1jbG9zZV1cIik7XG4gICAgICAgIHRoaXMuaXNWaXNpYmxlID0gXCJjLW1vZGFsX19iZy0taXMtdmlzaWJsZVwiO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEVuYWJsZSBNb2RhbFxuICAgICAqL1xuICAgIGVuYWJsZU1vZGFscygpIHtcblxuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICAgICAgLy8gR2FsbGVyeVxuICAgICAgICBsZXQgR2FsbGVyeUluc3RhbmNlID0gbmV3IEdhbGxlcnk7XG4gICAgICAgIEdhbGxlcnlJbnN0YW5jZS5lbmFibGVHYWxsZXJ5KHRoaXMubW9kYWxJZCk7XG5cbiAgICAgICAgZm9yKGNvbnN0IHRyaWdnZXIgb2YgdGhpcy5vcGVuVHJpZ2dlcikge1xuICAgICAgICAgICAgdHJpZ2dlci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5tb2RhbElkID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ2RhdGEtb3BlbicpOyAvL3RoaXMuZGF0YXNldC5vcGVuO1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMubW9kYWxJZCkuY2xhc3NMaXN0LmFkZChzZWxmLmlzVmlzaWJsZSk7XG5cbiAgICAgICAgICAgICAgICBpZih0aGlzLmdldEF0dHJpYnV0ZSgnZGF0YS1sYXJnZS1pbWcnKSkge1xuICAgICAgICAgICAgICAgICAgICBHYWxsZXJ5SW5zdGFuY2UuaW5pdEltYWdlKHRoaXMubW9kYWxJZCwgdGhpcy5nZXRBdHRyaWJ1dGUoJ2RhdGEtbGFyZ2UtaW1nJykpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHNlbGYubG9ja1Njcm9sbCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDbG9zZVxuICAgICAgICBmb3IgKGNvbnN0IHRyaWdnZXIgb2YgdGhpcy5jbG9zZVRyaWdnZXIpIHtcbiAgICAgICAgICAgIHRyaWdnZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke3NlbGYuaXNWaXNpYmxlfWApLmNsYXNzTGlzdC5yZW1vdmUoc2VsZi5pc1Zpc2libGUpO1xuICAgICAgICAgICAgICAgIHNlbGYudW5sb2NrU2Nyb2xsKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENsaWNrIG91dHNpZGUgbW9kYWxcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGUgPT4ge1xuICAgICAgICAgICAgaWYgKGUudGFyZ2V0ID09PSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuJHtzZWxmLmlzVmlzaWJsZX1gKSkge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke3NlbGYuaXNWaXNpYmxlfWApLmNsYXNzTGlzdC5yZW1vdmUoc2VsZi5pc1Zpc2libGUpO1xuICAgICAgICAgICAgICAgIHNlbGYudW5sb2NrU2Nyb2xsKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIFByZXNzaW5nIEVzYyBrZXkgdG8gY2xvc2UgbW9kYWxcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIGUgPT4ge1xuICAgICAgICAgICAgaWYgKGUua2V5ID09PSBcIkVzY2FwZVwiICYmIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke3NlbGYuaXNWaXNpYmxlfWApKSB7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLiR7c2VsZi5pc1Zpc2libGV9YCkuY2xhc3NMaXN0LnJlbW92ZShzZWxmLmlzVmlzaWJsZSk7XG4gICAgICAgICAgICAgICAgc2VsZi51bmxvY2tTY3JvbGwoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTG9jayBzY3JvbGxcbiAgICAgKiBAcmV0dXJucyB7Kn1cbiAgICAgKi9cbiAgICBsb2NrU2Nyb2xsKCkge1xuICAgICAgICBjb25zdCBvdmVyZmxvd0hpZGRlbiA9IFwidS1vdmVyZmxvdy0taGlkZGVuXCI7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYGJvZHlgKS5jbGFzc0xpc3QuYWRkKG92ZXJmbG93SGlkZGVuKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBVbmxvY2sgc2Nyb2xsXG4gICAgICogQHJldHVybnMgeyp9XG4gICAgICovXG4gICAgdW5sb2NrU2Nyb2xsKCkge1xuICAgICAgICBjb25zdCBvdmVyZmxvd0hpZGRlbiA9IFwidS1vdmVyZmxvdy0taGlkZGVuXCI7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYGJvZHlgKS5jbGFzc0xpc3QucmVtb3ZlKG92ZXJmbG93SGlkZGVuKTtcbiAgICB9XG5cblxufVxuXG5leHBvcnQgZGVmYXVsdCBNb2RhbDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/modal.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/navbar.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/navbar.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Navbar; });\nclass Navbar{\n    constructor() {\n    \n        this.dynamicNavBar = document.querySelector('.c-navbar[js-is-dynamic]');\n\n        if(this.dynamicNavBar){\n            this.pageID = this.dynamicNavBar.getAttribute('data-page-id');\n            this.pageParentID = this.dynamicNavBar.getAttribute('data-page-parent-id');\n        \n            this.navbarExpandedGrid = this.dynamicNavBar.querySelector('.c-navbar__expanded_grid');\n            this.navBarGridItems = this.navbarExpandedGrid.querySelectorAll('a');\n            this.navbarExpandedMain = this.dynamicNavBar.querySelector('.c-navbar__expanded_main');\n            this.childItemsUrl = this.dynamicNavBar.getAttribute('js-child-items-url');\n    \n            this.cleanUpNavBarContent();\n            this.populateNavBarContent();\n            this.setupPrevButton();\n        }\n        \n    }\n\n    cleanUpNavBarContent() {\n        this.navbarExpandedGrid.innerHTML = ' ';\n    }\n\n    getPageData(id) {\n\n        return fetch(`${this.childItemsUrl}?pageID=${id}`)\n        .then((response) => {\n            return response.json();\n        })\n        .then((data) => {\n            return data;\n        });\n    }\n\n    populateNavBarContent() {\n        this.getPageData(this.pageID).then((currentPageItems) => {\n            \n            currentPageItems.items.forEach((item) => {\n                const anchorElement = this.constructor.createAnchorElement(item);\n\n                this.navbarExpandedGrid.innerHTML += anchorElement;\n                this.navbarExpandedMain.querySelector('h2').innerText = currentPageItems.title;\n            });\n        });\n    \n    }\n\n    setupPrevButton() {\n        this.getPageData(this.pageParentID).then((previousPage) => {\n            const previousButton = this.navbarExpandedMain.querySelector('a');\n\n            previousButton.href = previousPage.href;\n            previousButton.querySelector('.c-button__label-text--reverse').innerText = previousPage.title;\n        });\n    }\n\n    static createAnchorElement(item) {\n        return `\n            <a class=\"c-grid u-margin__y--4 c-grid__container__gap__col--0 c-grid__container__gap__row--0\" href=\"${item.href}\" pageid=\"${item.id}\">\n                \n                <h2 class=\"c-typography c-navbar__title c-typography__variant--h2\">\n                    ${item.label}\n                </h2>\n        \n                <p class=\"c-typography c-typography__variant--body\">\n                    ${item.preview ? item.preview : 'No Preview Available'}\n                </p>\n            </a>\n        `;\n    }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvbmF2YmFyLmpzP2YwMmUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFlO0FBQ2Y7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSx3QkFBd0IsbUJBQW1CLFVBQVUsR0FBRztBQUN4RDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUzs7QUFFVDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0EsbUhBQW1ILFVBQVUsWUFBWSxRQUFROztBQUVqSjtBQUNBLHNCQUFzQjtBQUN0Qjs7QUFFQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BoZWxzaW5nYm9yZy1zdGFkL3N0eWxlZ3VpZGUvc291cmNlL2pzL25hdmJhci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIE5hdmJhcntcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICBcbiAgICAgICAgdGhpcy5keW5hbWljTmF2QmFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmMtbmF2YmFyW2pzLWlzLWR5bmFtaWNdJyk7XG5cbiAgICAgICAgaWYodGhpcy5keW5hbWljTmF2QmFyKXtcbiAgICAgICAgICAgIHRoaXMucGFnZUlEID0gdGhpcy5keW5hbWljTmF2QmFyLmdldEF0dHJpYnV0ZSgnZGF0YS1wYWdlLWlkJyk7XG4gICAgICAgICAgICB0aGlzLnBhZ2VQYXJlbnRJRCA9IHRoaXMuZHluYW1pY05hdkJhci5nZXRBdHRyaWJ1dGUoJ2RhdGEtcGFnZS1wYXJlbnQtaWQnKTtcbiAgICAgICAgXG4gICAgICAgICAgICB0aGlzLm5hdmJhckV4cGFuZGVkR3JpZCA9IHRoaXMuZHluYW1pY05hdkJhci5xdWVyeVNlbGVjdG9yKCcuYy1uYXZiYXJfX2V4cGFuZGVkX2dyaWQnKTtcbiAgICAgICAgICAgIHRoaXMubmF2QmFyR3JpZEl0ZW1zID0gdGhpcy5uYXZiYXJFeHBhbmRlZEdyaWQucXVlcnlTZWxlY3RvckFsbCgnYScpO1xuICAgICAgICAgICAgdGhpcy5uYXZiYXJFeHBhbmRlZE1haW4gPSB0aGlzLmR5bmFtaWNOYXZCYXIucXVlcnlTZWxlY3RvcignLmMtbmF2YmFyX19leHBhbmRlZF9tYWluJyk7XG4gICAgICAgICAgICB0aGlzLmNoaWxkSXRlbXNVcmwgPSB0aGlzLmR5bmFtaWNOYXZCYXIuZ2V0QXR0cmlidXRlKCdqcy1jaGlsZC1pdGVtcy11cmwnKTtcbiAgICBcbiAgICAgICAgICAgIHRoaXMuY2xlYW5VcE5hdkJhckNvbnRlbnQoKTtcbiAgICAgICAgICAgIHRoaXMucG9wdWxhdGVOYXZCYXJDb250ZW50KCk7XG4gICAgICAgICAgICB0aGlzLnNldHVwUHJldkJ1dHRvbigpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgIH1cblxuICAgIGNsZWFuVXBOYXZCYXJDb250ZW50KCkge1xuICAgICAgICB0aGlzLm5hdmJhckV4cGFuZGVkR3JpZC5pbm5lckhUTUwgPSAnICc7XG4gICAgfVxuXG4gICAgZ2V0UGFnZURhdGEoaWQpIHtcblxuICAgICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5jaGlsZEl0ZW1zVXJsfT9wYWdlSUQ9JHtpZH1gKVxuICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcG9wdWxhdGVOYXZCYXJDb250ZW50KCkge1xuICAgICAgICB0aGlzLmdldFBhZ2VEYXRhKHRoaXMucGFnZUlEKS50aGVuKChjdXJyZW50UGFnZUl0ZW1zKSA9PiB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGN1cnJlbnRQYWdlSXRlbXMuaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGFuY2hvckVsZW1lbnQgPSB0aGlzLmNvbnN0cnVjdG9yLmNyZWF0ZUFuY2hvckVsZW1lbnQoaXRlbSk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLm5hdmJhckV4cGFuZGVkR3JpZC5pbm5lckhUTUwgKz0gYW5jaG9yRWxlbWVudDtcbiAgICAgICAgICAgICAgICB0aGlzLm5hdmJhckV4cGFuZGVkTWFpbi5xdWVyeVNlbGVjdG9yKCdoMicpLmlubmVyVGV4dCA9IGN1cnJlbnRQYWdlSXRlbXMudGl0bGU7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgXG4gICAgfVxuXG4gICAgc2V0dXBQcmV2QnV0dG9uKCkge1xuICAgICAgICB0aGlzLmdldFBhZ2VEYXRhKHRoaXMucGFnZVBhcmVudElEKS50aGVuKChwcmV2aW91c1BhZ2UpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHByZXZpb3VzQnV0dG9uID0gdGhpcy5uYXZiYXJFeHBhbmRlZE1haW4ucXVlcnlTZWxlY3RvcignYScpO1xuXG4gICAgICAgICAgICBwcmV2aW91c0J1dHRvbi5ocmVmID0gcHJldmlvdXNQYWdlLmhyZWY7XG4gICAgICAgICAgICBwcmV2aW91c0J1dHRvbi5xdWVyeVNlbGVjdG9yKCcuYy1idXR0b25fX2xhYmVsLXRleHQtLXJldmVyc2UnKS5pbm5lclRleHQgPSBwcmV2aW91c1BhZ2UudGl0bGU7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHN0YXRpYyBjcmVhdGVBbmNob3JFbGVtZW50KGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgICAgIDxhIGNsYXNzPVwiYy1ncmlkIHUtbWFyZ2luX195LS00IGMtZ3JpZF9fY29udGFpbmVyX19nYXBfX2NvbC0tMCBjLWdyaWRfX2NvbnRhaW5lcl9fZ2FwX19yb3ctLTBcIiBocmVmPVwiJHtpdGVtLmhyZWZ9XCIgcGFnZWlkPVwiJHtpdGVtLmlkfVwiPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxoMiBjbGFzcz1cImMtdHlwb2dyYXBoeSBjLW5hdmJhcl9fdGl0bGUgYy10eXBvZ3JhcGh5X192YXJpYW50LS1oMlwiPlxuICAgICAgICAgICAgICAgICAgICAke2l0ZW0ubGFiZWx9XG4gICAgICAgICAgICAgICAgPC9oMj5cbiAgICAgICAgXG4gICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJjLXR5cG9ncmFwaHkgYy10eXBvZ3JhcGh5X192YXJpYW50LS1ib2R5XCI+XG4gICAgICAgICAgICAgICAgICAgICR7aXRlbS5wcmV2aWV3ID8gaXRlbS5wcmV2aWV3IDogJ05vIFByZXZpZXcgQXZhaWxhYmxlJ31cbiAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICA8L2E+XG4gICAgICAgIGA7XG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/navbar.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/notification.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/notification.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Notification{\n    setup(){\n        const containers = document.getElementsByClassName('c-notification__container');\n\n        if(containers && containers.length > 0){\n            containers.forEach(container => {\n                const direction = container.getAttribute('direction');\n                const directionClass = `c-notification__container--${  direction}`;\n                container.classList.add(directionClass);\n                this.setOnClickClose(container);\n            });\n        }\n        \n    }\n\n    removeFirst(target){\n        const notifications = target.querySelectorAll('.c-notification');\n        const maxAmount = target.getAttribute('maxamount');\n        if(notifications.length > maxAmount){\n            notifications[0].outerHTML = '';\n        } \n    }\n\n    setOnClickClose(targetNode){\n        let count = 0;\n        const observerOptions = {\n        childList: true\n        }\n        const observer = new MutationObserver((event)=>{\n            count++;\n            this.removeFirst(targetNode);\n            event.forEach((record)=>{\n                record.addedNodes.forEach((node) =>{\n                    if(node.classList.contains('c-notification')){\n                        this.setAutoHideDuration(node);\n                        node.addEventListener('click', ()=>{\n                            node.classList.add(`c-notification--dying--${ count}`)\n                            node.outerHTML = '';\n                        })\n                    }\n                })\n            })\n            \n        });\n        observer.observe(targetNode, observerOptions);\n    }\n\n    setAutoHideDuration(notification){\n        const autoHideDuration = notification.getAttribute('autoHideDuration');\n        setTimeout(function(){ notification.outerHTML = \"\"; }, autoHideDuration);\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Notification);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvbm90aWZpY2F0aW9uLmpzP2ZjZDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EscUVBQXFFLFlBQVk7QUFDakY7QUFDQTtBQUNBLGFBQWE7QUFDYjs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLE9BQU87QUFDaEY7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTs7QUFFYixTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsOEJBQThCLDZCQUE2QixFQUFFO0FBQzdEO0FBQ0E7O0FBRWUsMkVBQVkiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvbm90aWZpY2F0aW9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgTm90aWZpY2F0aW9ue1xuICAgIHNldHVwKCl7XG4gICAgICAgIGNvbnN0IGNvbnRhaW5lcnMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdjLW5vdGlmaWNhdGlvbl9fY29udGFpbmVyJyk7XG5cbiAgICAgICAgaWYoY29udGFpbmVycyAmJiBjb250YWluZXJzLmxlbmd0aCA+IDApe1xuICAgICAgICAgICAgY29udGFpbmVycy5mb3JFYWNoKGNvbnRhaW5lciA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGlyZWN0aW9uID0gY29udGFpbmVyLmdldEF0dHJpYnV0ZSgnZGlyZWN0aW9uJyk7XG4gICAgICAgICAgICAgICAgY29uc3QgZGlyZWN0aW9uQ2xhc3MgPSBgYy1ub3RpZmljYXRpb25fX2NvbnRhaW5lci0tJHsgIGRpcmVjdGlvbn1gO1xuICAgICAgICAgICAgICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKGRpcmVjdGlvbkNsYXNzKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldE9uQ2xpY2tDbG9zZShjb250YWluZXIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgfVxuXG4gICAgcmVtb3ZlRmlyc3QodGFyZ2V0KXtcbiAgICAgICAgY29uc3Qgbm90aWZpY2F0aW9ucyA9IHRhcmdldC5xdWVyeVNlbGVjdG9yQWxsKCcuYy1ub3RpZmljYXRpb24nKTtcbiAgICAgICAgY29uc3QgbWF4QW1vdW50ID0gdGFyZ2V0LmdldEF0dHJpYnV0ZSgnbWF4YW1vdW50Jyk7XG4gICAgICAgIGlmKG5vdGlmaWNhdGlvbnMubGVuZ3RoID4gbWF4QW1vdW50KXtcbiAgICAgICAgICAgIG5vdGlmaWNhdGlvbnNbMF0ub3V0ZXJIVE1MID0gJyc7XG4gICAgICAgIH0gXG4gICAgfVxuXG4gICAgc2V0T25DbGlja0Nsb3NlKHRhcmdldE5vZGUpe1xuICAgICAgICBsZXQgY291bnQgPSAwO1xuICAgICAgICBjb25zdCBvYnNlcnZlck9wdGlvbnMgPSB7XG4gICAgICAgIGNoaWxkTGlzdDogdHJ1ZVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoKGV2ZW50KT0+e1xuICAgICAgICAgICAgY291bnQrKztcbiAgICAgICAgICAgIHRoaXMucmVtb3ZlRmlyc3QodGFyZ2V0Tm9kZSk7XG4gICAgICAgICAgICBldmVudC5mb3JFYWNoKChyZWNvcmQpPT57XG4gICAgICAgICAgICAgICAgcmVjb3JkLmFkZGVkTm9kZXMuZm9yRWFjaCgobm9kZSkgPT57XG4gICAgICAgICAgICAgICAgICAgIGlmKG5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKCdjLW5vdGlmaWNhdGlvbicpKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0QXV0b0hpZGVEdXJhdGlvbihub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuY2xhc3NMaXN0LmFkZChgYy1ub3RpZmljYXRpb24tLWR5aW5nLS0keyBjb3VudH1gKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUub3V0ZXJIVE1MID0gJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBcbiAgICAgICAgfSk7XG4gICAgICAgIG9ic2VydmVyLm9ic2VydmUodGFyZ2V0Tm9kZSwgb2JzZXJ2ZXJPcHRpb25zKTtcbiAgICB9XG5cbiAgICBzZXRBdXRvSGlkZUR1cmF0aW9uKG5vdGlmaWNhdGlvbil7XG4gICAgICAgIGNvbnN0IGF1dG9IaWRlRHVyYXRpb24gPSBub3RpZmljYXRpb24uZ2V0QXR0cmlidXRlKCdhdXRvSGlkZUR1cmF0aW9uJyk7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXsgbm90aWZpY2F0aW9uLm91dGVySFRNTCA9IFwiXCI7IH0sIGF1dG9IaWRlRHVyYXRpb24pO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTm90aWZpY2F0aW9uOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/notification.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/notificationDoc.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/notificationDoc.js ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass NotificationDoc{\n    addListener(){\n         \n        const notificationButton = document.getElementsByClassName(\"notification__button\")[0];\n        const notification = document.getElementsByClassName(\"c-notification\")[0];\n\n        if(notification)\n        {\n            const direction = notification.getAttribute('direction');\n            let container = document.createElement('DIV');\n            container.classList.add('c-notification__container');\n            container.classList.add('c-notification__container--' + direction);\n            container.setAttribute('maxAmount', 3)\n            document.body.appendChild(container);\n\n            notificationButton.addEventListener('click', ()=>{\n                let notificationCopy = notification.cloneNode(true);\n                notificationCopy.classList.remove('u-display--none');\n                \n                container.appendChild(notificationCopy);\n            })\n        }\n        \n            \n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (NotificationDoc);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvbm90aWZpY2F0aW9uRG9jLmpzPzAwNTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhO0FBQ2I7OztBQUdBO0FBQ0E7O0FBRWUsOEVBQWUiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvbm90aWZpY2F0aW9uRG9jLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgTm90aWZpY2F0aW9uRG9je1xuICAgIGFkZExpc3RlbmVyKCl7XG4gICAgICAgICBcbiAgICAgICAgY29uc3Qgbm90aWZpY2F0aW9uQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm5vdGlmaWNhdGlvbl9fYnV0dG9uXCIpWzBdO1xuICAgICAgICBjb25zdCBub3RpZmljYXRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiYy1ub3RpZmljYXRpb25cIilbMF07XG5cbiAgICAgICAgaWYobm90aWZpY2F0aW9uKVxuICAgICAgICB7XG4gICAgICAgICAgICBjb25zdCBkaXJlY3Rpb24gPSBub3RpZmljYXRpb24uZ2V0QXR0cmlidXRlKCdkaXJlY3Rpb24nKTtcbiAgICAgICAgICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdESVYnKTtcbiAgICAgICAgICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdjLW5vdGlmaWNhdGlvbl9fY29udGFpbmVyJyk7XG4gICAgICAgICAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgnYy1ub3RpZmljYXRpb25fX2NvbnRhaW5lci0tJyArIGRpcmVjdGlvbik7XG4gICAgICAgICAgICBjb250YWluZXIuc2V0QXR0cmlidXRlKCdtYXhBbW91bnQnLCAzKVxuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuXG4gICAgICAgICAgICBub3RpZmljYXRpb25CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xuICAgICAgICAgICAgICAgIGxldCBub3RpZmljYXRpb25Db3B5ID0gbm90aWZpY2F0aW9uLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgICAgICBub3RpZmljYXRpb25Db3B5LmNsYXNzTGlzdC5yZW1vdmUoJ3UtZGlzcGxheS0tbm9uZScpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChub3RpZmljYXRpb25Db3B5KTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE5vdGlmaWNhdGlvbkRvYzsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/notificationDoc.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/pagination.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/pagination.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Pagination; });\nclass Pagination {\n    constructor(\n        container\n    ){\n        this.container = container\n        this.link = null\n        this.list = this.container.querySelectorAll(`[js-pagination-item]`);\n\n        //Targeting attributes\n        this.indexLinks = 'js-pagination-index';\n        this.paginationContainer = this.container.querySelector(`[js-pagination]`);\n        this.listContainer = this.container.querySelector(`[js-pagination-container]`);\n        this.prevBtn = 'js-pagination-prev'\n        this.nextBtn = 'js-pagination-next'\n\n        this.perPage = parseInt(this.paginationContainer.getAttribute('js-pagination-per-page'))\n        this.maxPages = this.paginationContainer.getAttribute('js-pagination-max-pages')\n\n        this.container.setAttribute('js-table-pagination--current', 1);\n\n        this.tableRefresh();\n        this.paginationButtons()\n    }\n\n    tableRefresh() {\n        // eslint-disable-next-line prefer-destructuring\n        let list = this.paginateList(this.list)\n\n        this.renderTable(list);\n        this.paginatePages();\n        this.paginationLinks();\n        this.paginateLinkListeners();\n    }\n\n    renderTable(list = null) {\n        const body = this.listContainer;\n        body.innerHTML = \"\";\n\n        list.forEach(element => {\n            body.appendChild(element)\n        });\n    }\n\n    paginatePages() {\n        const numberOfPages = Math.ceil(this.list.length / this.perPage);\n\n        if(this.maxPages && (numberOfPages > this.maxPages)) {\n            return this.maxPages;\n        }\n\n        return numberOfPages;\n    }\n\n    paginationLinks() {\n        if(!this.link) {\n            this.link = this.container.querySelector(`[${this.indexLinks}]`);\n            this.link.classList.remove(\"c-pagination__item--is-active\");\n        }\n        \n        const body = this.container.querySelector(`[js-table-pagination--links]`);\n        this.paginationContainer.classList.remove('u-display--none')\n        body.innerHTML = \"\";\n\n        if(this.paginatePages() > 1) {\n            // eslint-disable-next-line no-plusplus\n            for (let index = 0; index < this.paginatePages(); index++) {\n                const elm = this.link.cloneNode(true);\n                // elm.innerHTML = index +1;\n                elm.classList.remove('c-button__filled--primary');\n                elm.setAttribute(this.indexLinks, index +1);\n                elm.querySelector('.c-pagination__label').innerHTML = index +1;\n\n                if((index +1) === this.paginationCurrent() ){\n                    elm.classList.add('c-button__filled--primary');\n                }\n\n                body.appendChild(elm);\n            }\n        } else {\n            this.paginationContainer.classList.add('u-display--none')\n        }\n    }\n\n    paginateLinkListeners() {\n        const btns = this.container.querySelectorAll(`[${this.indexLinks}]`)\n\n        btns.forEach(btn => {\n            btn.addEventListener('click', (e) => {\n                e.preventDefault();\n                let next = e.target.closest(`[${this.indexLinks}]`).getAttribute(this.indexLinks);\n                this.paginateSetCurrent(next);\n                this.tableRefresh();\n            })\n        });\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    paginateList(list) {\n        const first = (this.paginationCurrent() - 1) * this.perPage;\n        const last = this.paginationCurrent() * this.perPage;\n\n        return Array.from(list).slice(first, last);\n    }\n\n    paginationButtons() {\n        this.paginateSetCurrent();\n\n        this.container.querySelector(`[${this.nextBtn}]`).addEventListener('click', (e) => {\n            e.preventDefault();\n\n            if ((this.paginationCurrent()) != this.paginatePages()) {\n                this.paginateSetCurrent(this.paginationCurrent() +1);\n            }\n\n            this.tableRefresh();\n        })\n\n        this.container.querySelector(`[${this.prevBtn}]`).addEventListener('click', (e) => {\n            e.preventDefault();\n            this.paginateSetCurrent(this.paginationCurrent() -1);\n            this.tableRefresh();\n        })\n    }\n\n    paginateSetCurrent(current = 1) {\n        current = parseInt(current)\n        this.container.setAttribute('js-table-pagination--current', current);\n        this.container.querySelector(`[${this.nextBtn}]`).removeAttribute('disabled');\n        this.container.querySelector(`[${this.prevBtn}]`).removeAttribute('disabled');\n\n        if (current === this.paginatePages()) {\n            this.container.querySelector(`[${this.nextBtn}]`).setAttribute('disabled', true);\n\n        } else if (current === 1) {\n            this.container.querySelector(`[${this.prevBtn}]`).setAttribute('disabled', true);\n\n        }\n    }\n\n    paginationCurrent() {\n        return parseInt(this.container.getAttribute('js-table-pagination--current'), 10)\n    }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/pagination.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/resizeByChildren.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/resizeByChildren.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ResizeByChildren; });\nclass ResizeByChildren {\n  constructor() {\n    this.RESIZE = 'js-resize-by-children';\n    // Get containers\n    const resizeContainer = document.querySelectorAll(`[${this.RESIZE}]`);\n    \n    if(resizeContainer) {\n\n      resizeContainer.forEach(item => {\n\n        // Enable calculations\n        item.classList.add('u-display--block'); \n        // Declare\n        const currentChilds = item.querySelectorAll('li > a'); \n        const widthStack = []; \n        \n        // Get all widts as array\n        currentChilds.forEach(child => {\n          widthStack.push(child.getBoundingClientRect().width);\n        }); \n        \n\n        // Get largest\n        const maxSize = Math.round(Math.max.apply(null, widthStack)); \n\n        if(item.getBoundingClientRect().width > maxSize) {\n          item.setAttribute('style', 'width:' + maxSize + 'px !important;');\n          item.dispatchEvent(new Event('resizeByChildren'));\n        }\n\n        // Disable calculations\n        item.classList.remove('u-display--block'); \n      \n        // Add class as calc\n        item.classList.add(item.classList[0] + '--calculated'); \n\n      });\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvcmVzaXplQnlDaGlsZHJlbi5qcz81M2NiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxZQUFZOztBQUV0RTs7QUFFQTs7QUFFQTtBQUNBLCtDO0FBQ0E7QUFDQSw4RDtBQUNBLDhCOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsRTs7O0FBR1Q7QUFDQSxxRTs7QUFFQTtBQUNBLHlFQUF5RTtBQUN6RTtBQUNBOztBQUVBO0FBQ0Esa0Q7O0FBRUE7QUFDQSwrRDs7QUFFQSxPQUFPO0FBQ1A7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BoZWxzaW5nYm9yZy1zdGFkL3N0eWxlZ3VpZGUvc291cmNlL2pzL3Jlc2l6ZUJ5Q2hpbGRyZW4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBSZXNpemVCeUNoaWxkcmVuIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5SRVNJWkUgPSAnanMtcmVzaXplLWJ5LWNoaWxkcmVuJztcbiAgICAvLyBHZXQgY29udGFpbmVyc1xuICAgIGNvbnN0IHJlc2l6ZUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYFske3RoaXMuUkVTSVpFfV1gKTtcbiAgICBcbiAgICBpZihyZXNpemVDb250YWluZXIpIHtcblxuICAgICAgcmVzaXplQ29udGFpbmVyLmZvckVhY2goaXRlbSA9PiB7XG5cbiAgICAgICAgLy8gRW5hYmxlIGNhbGN1bGF0aW9uc1xuICAgICAgICBpdGVtLmNsYXNzTGlzdC5hZGQoJ3UtZGlzcGxheS0tYmxvY2snKTsgXG4gICAgICAgIC8vIERlY2xhcmVcbiAgICAgICAgY29uc3QgY3VycmVudENoaWxkcyA9IGl0ZW0ucXVlcnlTZWxlY3RvckFsbCgnbGkgPiBhJyk7IFxuICAgICAgICBjb25zdCB3aWR0aFN0YWNrID0gW107IFxuICAgICAgICBcbiAgICAgICAgLy8gR2V0IGFsbCB3aWR0cyBhcyBhcnJheVxuICAgICAgICBjdXJyZW50Q2hpbGRzLmZvckVhY2goY2hpbGQgPT4ge1xuICAgICAgICAgIHdpZHRoU3RhY2sucHVzaChjaGlsZC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCk7XG4gICAgICAgIH0pOyBcbiAgICAgICAgXG5cbiAgICAgICAgLy8gR2V0IGxhcmdlc3RcbiAgICAgICAgY29uc3QgbWF4U2l6ZSA9IE1hdGgucm91bmQoTWF0aC5tYXguYXBwbHkobnVsbCwgd2lkdGhTdGFjaykpOyBcblxuICAgICAgICBpZihpdGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoID4gbWF4U2l6ZSkge1xuICAgICAgICAgIGl0ZW0uc2V0QXR0cmlidXRlKCdzdHlsZScsICd3aWR0aDonICsgbWF4U2l6ZSArICdweCAhaW1wb3J0YW50OycpO1xuICAgICAgICAgIGl0ZW0uZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ3Jlc2l6ZUJ5Q2hpbGRyZW4nKSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBEaXNhYmxlIGNhbGN1bGF0aW9uc1xuICAgICAgICBpdGVtLmNsYXNzTGlzdC5yZW1vdmUoJ3UtZGlzcGxheS0tYmxvY2snKTsgXG4gICAgICBcbiAgICAgICAgLy8gQWRkIGNsYXNzIGFzIGNhbGNcbiAgICAgICAgaXRlbS5jbGFzc0xpc3QuYWRkKGl0ZW0uY2xhc3NMaXN0WzBdICsgJy0tY2FsY3VsYXRlZCcpOyBcblxuICAgICAgfSk7XG4gICAgfVxuICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/resizeByChildren.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/segment.js":
/*!************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/segment.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var chalk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! chalk */ \"./node_modules/chalk/index.js\");\n/* harmony import */ var chalk__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(chalk__WEBPACK_IMPORTED_MODULE_0__);\n\n\nclass Segment {\n    constructor(segment) {\n        this.SEGMENT = segment;\n\n        this.videoInteractions();\n    }\n\n    videoInteractions() {\n        const btn = this.SEGMENT.querySelector('[js-segment__video--plaus]');\n        if(btn) {\n            btn.addEventListener('click', () => {\n                if (this.getVideoState() === 'playing' || !this.getVideoState()) {\n                    this.pauseVideo();\n                } else {\n                    this.playVideo();\n                }\n            })\n        }\n    }\n\n    getVideoState() {\n        return this.SEGMENT.getAttribute('js-segment__video--plaus');\n    }\n\n    pauseVideo() {\n        this.SEGMENT.setAttribute('js-segment__video--plaus', 'paused');\n        this.SEGMENT.querySelector('video').pause();\n    }\n\n    playVideo() {\n        this.SEGMENT.setAttribute('js-segment__video--plaus', 'playing');\n        this.SEGMENT.querySelector('video').play();\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Segment);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvc2VnbWVudC5qcz9lNTM5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUF3Qzs7QUFFeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFZSxzRSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AaGVsc2luZ2Jvcmctc3RhZC9zdHlsZWd1aWRlL3NvdXJjZS9qcy9zZWdtZW50LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmdNYWdlbnRhQnJpZ2h0IH0gZnJvbSBcImNoYWxrXCI7XG5cbmNsYXNzIFNlZ21lbnQge1xuICAgIGNvbnN0cnVjdG9yKHNlZ21lbnQpIHtcbiAgICAgICAgdGhpcy5TRUdNRU5UID0gc2VnbWVudDtcblxuICAgICAgICB0aGlzLnZpZGVvSW50ZXJhY3Rpb25zKCk7XG4gICAgfVxuXG4gICAgdmlkZW9JbnRlcmFjdGlvbnMoKSB7XG4gICAgICAgIGNvbnN0IGJ0biA9IHRoaXMuU0VHTUVOVC5xdWVyeVNlbGVjdG9yKCdbanMtc2VnbWVudF9fdmlkZW8tLXBsYXVzXScpO1xuICAgICAgICBpZihidG4pIHtcbiAgICAgICAgICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nZXRWaWRlb1N0YXRlKCkgPT09ICdwbGF5aW5nJyB8fCAhdGhpcy5nZXRWaWRlb1N0YXRlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXVzZVZpZGVvKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wbGF5VmlkZW8oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0VmlkZW9TdGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuU0VHTUVOVC5nZXRBdHRyaWJ1dGUoJ2pzLXNlZ21lbnRfX3ZpZGVvLS1wbGF1cycpO1xuICAgIH1cblxuICAgIHBhdXNlVmlkZW8oKSB7XG4gICAgICAgIHRoaXMuU0VHTUVOVC5zZXRBdHRyaWJ1dGUoJ2pzLXNlZ21lbnRfX3ZpZGVvLS1wbGF1cycsICdwYXVzZWQnKTtcbiAgICAgICAgdGhpcy5TRUdNRU5ULnF1ZXJ5U2VsZWN0b3IoJ3ZpZGVvJykucGF1c2UoKTtcbiAgICB9XG5cbiAgICBwbGF5VmlkZW8oKSB7XG4gICAgICAgIHRoaXMuU0VHTUVOVC5zZXRBdHRyaWJ1dGUoJ2pzLXNlZ21lbnRfX3ZpZGVvLS1wbGF1cycsICdwbGF5aW5nJyk7XG4gICAgICAgIHRoaXMuU0VHTUVOVC5xdWVyeVNlbGVjdG9yKCd2aWRlbycpLnBsYXkoKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNlZ21lbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/segment.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/sidebar.js":
/*!************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/sidebar.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Sidebar; });\n__webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n\nclass Sidebar {\n    constructor() {\n        this.ATTR = \"js-sidebar\";\n        this.EXPAND = \"c-sidebar__item--is-expanded\";\n        this.EXPANDABLE = \"c-sidebar__subcontainer\";\n        this.ACTIVE = \"item-active\";\n        this.TRIGGER = \"js-sidebar-trigger\";\n        this.SUBCONTAINER = \"c-sidebar__subcontainer\";\n        this.TOGGLE = \"c-sidebar__toggle\";\n        this.TOGGLE_TRIGGER = \"js-toggle-trigger\";\n        this.TOGGLE_ITEM = \"js-toggle-item\";\n        this.ITEM = \"c-sidebar__item\";\n        this.COLLAPSED = \"c-sidebar--collapsed\"\n    }\n\n    /**\n     * Finds all sidebars and applies appropriate classes and attributes on load\n     * @return {void}\n     */\n    applySidebar() {\n        const sb = document.querySelector(`[${this.ATTR}]`);\n\n        if (sb) {\n            const activeItems = sb.querySelectorAll(`[${this.ACTIVE}=\"true\"]`);\n\n            if (activeItems.length > 0) {\n                activeItems.forEach(item => {\n                    this.expandItem(item, sb);\n                });\n            }\n\n            this.addTriggers(sb);\n        }\n    }\n\n    /**\n     * Adds listeners to buttons\n     * @param {Object} sb The sidebar\n    */\n   addTriggers(sb) {\n        const sbTriggers = document.querySelectorAll(`[${this.TRIGGER}]`);\n\n        sbTriggers.forEach(btn => {\n            btn.addEventListener('click', e => {\n                sb.classList.toggle(`${this.COLLAPSED}`);\n            });\n        });\n    }\n\n    /**\n     * Expand current item\n     * @param {Object} item The current item to expand\n     */\n    expandItem(item, sb) {\n        if (item.closest(`.${this.SUBCONTAINER}`)) {\n            const id = this.getToggleId(item)\n                \n            const toggle = sb.querySelector(`[${this.TOGGLE_TRIGGER}=\"${id}\"]`)\n\n            toggle.setAttribute('aria-pressed', true);\n\n            this.addExpandClass(item);\n            this.expandItem(toggle, sb)\n        }\n    }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvc2lkZWJhci5qcz9hNzM1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQSxtQkFBTyxDQUFDLDBFQUFxQjs7QUFFZDtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBLDhDQUE4QyxVQUFVOztBQUV4RDtBQUNBLHdEQUF3RCxZQUFZOztBQUVwRTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBLHlEQUF5RCxhQUFhOztBQUV0RTtBQUNBO0FBQ0EsdUNBQXVDLGVBQWU7QUFDdEQsYUFBYTtBQUNiLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCO0FBQ0E7QUFDQSw2QkFBNkIsa0JBQWtCO0FBQy9DOztBQUVBLGdEQUFnRCxvQkFBb0IsSUFBSSxHQUFHOztBQUUzRTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BoZWxzaW5nYm9yZy1zdGFkL3N0eWxlZ3VpZGUvc291cmNlL2pzL3NpZGViYXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKFwicmVnZW5lcmF0b3ItcnVudGltZVwiKTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2lkZWJhciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuQVRUUiA9IFwianMtc2lkZWJhclwiO1xuICAgICAgICB0aGlzLkVYUEFORCA9IFwiYy1zaWRlYmFyX19pdGVtLS1pcy1leHBhbmRlZFwiO1xuICAgICAgICB0aGlzLkVYUEFOREFCTEUgPSBcImMtc2lkZWJhcl9fc3ViY29udGFpbmVyXCI7XG4gICAgICAgIHRoaXMuQUNUSVZFID0gXCJpdGVtLWFjdGl2ZVwiO1xuICAgICAgICB0aGlzLlRSSUdHRVIgPSBcImpzLXNpZGViYXItdHJpZ2dlclwiO1xuICAgICAgICB0aGlzLlNVQkNPTlRBSU5FUiA9IFwiYy1zaWRlYmFyX19zdWJjb250YWluZXJcIjtcbiAgICAgICAgdGhpcy5UT0dHTEUgPSBcImMtc2lkZWJhcl9fdG9nZ2xlXCI7XG4gICAgICAgIHRoaXMuVE9HR0xFX1RSSUdHRVIgPSBcImpzLXRvZ2dsZS10cmlnZ2VyXCI7XG4gICAgICAgIHRoaXMuVE9HR0xFX0lURU0gPSBcImpzLXRvZ2dsZS1pdGVtXCI7XG4gICAgICAgIHRoaXMuSVRFTSA9IFwiYy1zaWRlYmFyX19pdGVtXCI7XG4gICAgICAgIHRoaXMuQ09MTEFQU0VEID0gXCJjLXNpZGViYXItLWNvbGxhcHNlZFwiXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRmluZHMgYWxsIHNpZGViYXJzIGFuZCBhcHBsaWVzIGFwcHJvcHJpYXRlIGNsYXNzZXMgYW5kIGF0dHJpYnV0ZXMgb24gbG9hZFxuICAgICAqIEByZXR1cm4ge3ZvaWR9XG4gICAgICovXG4gICAgYXBwbHlTaWRlYmFyKCkge1xuICAgICAgICBjb25zdCBzYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYFske3RoaXMuQVRUUn1dYCk7XG5cbiAgICAgICAgaWYgKHNiKSB7XG4gICAgICAgICAgICBjb25zdCBhY3RpdmVJdGVtcyA9IHNiLnF1ZXJ5U2VsZWN0b3JBbGwoYFske3RoaXMuQUNUSVZFfT1cInRydWVcIl1gKTtcblxuICAgICAgICAgICAgaWYgKGFjdGl2ZUl0ZW1zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBhY3RpdmVJdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmV4cGFuZEl0ZW0oaXRlbSwgc2IpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmFkZFRyaWdnZXJzKHNiKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZHMgbGlzdGVuZXJzIHRvIGJ1dHRvbnNcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gc2IgVGhlIHNpZGViYXJcbiAgICAqL1xuICAgYWRkVHJpZ2dlcnMoc2IpIHtcbiAgICAgICAgY29uc3Qgc2JUcmlnZ2VycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYFske3RoaXMuVFJJR0dFUn1dYCk7XG5cbiAgICAgICAgc2JUcmlnZ2Vycy5mb3JFYWNoKGJ0biA9PiB7XG4gICAgICAgICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHtcbiAgICAgICAgICAgICAgICBzYi5jbGFzc0xpc3QudG9nZ2xlKGAke3RoaXMuQ09MTEFQU0VEfWApO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEV4cGFuZCBjdXJyZW50IGl0ZW1cbiAgICAgKiBAcGFyYW0ge09iamVjdH0gaXRlbSBUaGUgY3VycmVudCBpdGVtIHRvIGV4cGFuZFxuICAgICAqL1xuICAgIGV4cGFuZEl0ZW0oaXRlbSwgc2IpIHtcbiAgICAgICAgaWYgKGl0ZW0uY2xvc2VzdChgLiR7dGhpcy5TVUJDT05UQUlORVJ9YCkpIHtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gdGhpcy5nZXRUb2dnbGVJZChpdGVtKVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgY29uc3QgdG9nZ2xlID0gc2IucXVlcnlTZWxlY3RvcihgWyR7dGhpcy5UT0dHTEVfVFJJR0dFUn09XCIke2lkfVwiXWApXG5cbiAgICAgICAgICAgIHRvZ2dsZS5zZXRBdHRyaWJ1dGUoJ2FyaWEtcHJlc3NlZCcsIHRydWUpO1xuXG4gICAgICAgICAgICB0aGlzLmFkZEV4cGFuZENsYXNzKGl0ZW0pO1xuICAgICAgICAgICAgdGhpcy5leHBhbmRJdGVtKHRvZ2dsZSwgc2IpXG4gICAgICAgIH1cbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/sidebar.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/slider.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/slider.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Slider; });\n/* harmony import */ var _steppers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./steppers */ \"./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js\");\n/* harmony import */ var _helpers_video__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/video */ \"./node_modules/@helsingborg-stad/styleguide/source/js/helpers/video.js\");\n/* eslint-disable no-unused-expressions */\n\n\n\n\nclass Slider {\n    constructor(slider) {\n        this.SLIDER     = slider;\n        this.SLIDE      = \"js-slider-slide\";\n        this.ATTR       = \"js-slider\";\n        this.BTN        = \"js-slider-btn\";\n        this.INDEX      = \"js-slider-index\";\n        this.INNER      = \"js-slider-inner\";\n        this.AUTOSLIDE  = \"js-slider__autoslide\";\n        this.REPEAT     = \"js-slider-repeat\";\n        this.STEP       = \"data-step\";\n        this.PAUSEHOVER = false;\n\n        this.StepperInstance = new _steppers__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n\n        if (this.getItemsLength() > 1) {\n            this.applySliders();\n            this.enableStepper();\n            this.handleSwipes();\n            this.fixTabbing();\n            \n            if(!(this.SLIDER.getAttribute(this.REPEAT))) {\n                this.noRepeat();\n            }\n\n            if(this.SLIDER.hasAttribute(this.AUTOSLIDE)) {\n                this.autoSlider();\n                this.autoSliderHoverHandler();\n            };\n        } else {\n            this.hideControls();\n        }\n\n        this.addVideoControls()\n    }\n\n    /**\n     * Finds all slides and attaches event listeners.\n     * @return {void}\n     */\n    applySliders() {\n        this.SLIDER.querySelectorAll(`[${this.BTN}]`).forEach((button) => {\n            button.addEventListener('click', (e) => {\n                this.clickedBtn(e);\n            });\n        })\n    }\n\n    /**\n     * Handles click on either next och previous button\n     * @param {Object} e The click event\n     */\n    clickedBtn(e) {  \n        let newIndex;\n\n        if (e.target.closest(\"button\").getAttribute(this.BTN) === 'prev') {\n            newIndex = this.prevIndex(this.getCurrentIndex(this.SLIDER))\n\n        } else if (e.target.closest(\"button\").getAttribute(this.BTN) === 'next') {\n            newIndex = this.nextIndex(this.getCurrentIndex(this.SLIDER))\n        }\n\n        this.updateSlider(newIndex);\n    }\n\n    /**\n     * Handles swipeEvents\n     */\n    handleSwipes() {\n        this.SLIDER.addEventListener('swipeLeft', (e) => {\n            let newIndex;\n            newIndex = this.nextIndex(this.getCurrentIndex(this.SLIDER));\n            this.updateSlider(newIndex);\n        })\n\n        this.SLIDER.addEventListener('swipeRight', (e) => {\n            let newIndex;\n            newIndex = this.prevIndex(this.getCurrentIndex(this.SLIDER));\n            this.updateSlider(newIndex);\n        })\n    }\n\n    updateSlider(newIndex) {\n        this.SLIDER.setAttribute(this.INDEX, newIndex);\n        this.SLIDER.setAttribute(this.STEP, newIndex);\n        this.updateStepper();\n        this.moveToIndex();\n        this.fixTabbing();\n\n        if(!(this.SLIDER.getAttribute(this.REPEAT))) {\n            this.noRepeat();\n        }\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    autoSlider() {\n        setTimeout(\n            () => {\n                if(!this.PAUSEHOVER) {\n                    this.updateSlider(this.nextIndex(this.getCurrentIndex(this.SLIDER)));\n                    \n                }\n                this.autoSlider();\n            }\n        , this.getAutoSliderDelay());\n    }\n\n    getAutoSliderDelay() {\n        return this.SLIDER.getAttribute(this.AUTOSLIDE) * 1000;\n    }\n\n    autoSliderHoverHandler () {\n        this.SLIDER.addEventListener('mouseenter', () => {\n            this.PAUSEHOVER = true\n        })\n\n        this.SLIDER.addEventListener('mouseleave', (e) => {\n            if (e.target === this.SLIDER) {\n                this.PAUSEHOVER = false\n            }\n        })\n    }\n\n    prevIndex(current) {\n        return current === 0 ? this.getItemsLength(this.SLIDER) -1 : current -1;\n    }\n\n    nextIndex(current) {\n        return current <= (this.getItemsLength(this.SLIDER) - 2) ? current +1 : 0;\n    }\n\n    /**\n     * Sets the appropriate styling to slide to the requested slide\n     */\n    moveToIndex() {\n        /* eslint-disable-next-line */\n        this.SLIDER.querySelector(`[${this.INNER}]`).style.transform =\n            `translateX(-${this.SLIDER.getAttribute(this.INDEX)}00%)`;\n    }\n\n    /**\n     * Returns the current index of the slider component\n     * @return {Int} The current index\n     */\n    getCurrentIndex() {\n        return parseInt(this.SLIDER.getAttribute(this.INDEX), 10)\n    }\n\n    /**\n     * Returns how many slides are present inside the the slider.\n     * Starts at 1.\n     * @return {Int} The amount of slides\n     */\n    getItemsLength() {\n        return this.SLIDER.querySelectorAll(`[${this.SLIDE}]`).length\n    }\n\n    updateStepper() {\n        const stepper = this.SLIDER.querySelector('[js-slider__stepper]');\n        const currentActive = stepper.querySelector(`.c-slider__dot--active`)\n        \n        if(currentActive) {\n            currentActive.classList.remove('c-slider__dot--active');\n        }\n\n        const dot = stepper.querySelector(`[js-slider__stepper__dot=\"${this.getCurrentIndex() ? this.getCurrentIndex() : 0}\"]`);\n        dot.classList.add('c-slider__dot--active')\n\n    }\n\n    enableStepper() {\n        const stepper = this.SLIDER.querySelector('[js-slider__stepper]');\n        const dot = stepper.querySelector('.c-slider__dot');\n\n        stepper.setAttribute('js-slider__stepper__current', 1)\n        stepper.innerHTML = \"\"\n\n        for (let index = 0; index < this.getItemsLength(); index++) {\n            const clone = dot.cloneNode();\n            clone.setAttribute('js-slider__stepper__dot', index)\n            stepper.appendChild(clone)\n        }\n\n        this.addStepperEvent()\n\n        this.updateStepper();\n    }\n\n    addStepperEvent() {\n        const stepper = this.SLIDER.querySelector('[js-slider__stepper]');\n\n        stepper.querySelectorAll(`[js-slider__stepper__dot]`).forEach((dot) => {\n            dot.addEventListener('click', (e) => {\n                this.updateSlider(e.target.getAttribute('js-slider__stepper__dot'))\n            });\n        })\n    }\n\n    /**\n     * Removes controls\n     * @return {Void}\n     */\n    hideControls() {\n        const controls = this.SLIDER.querySelectorAll('.c-slider__button');\n\n        this.SLIDER.querySelector('[js-slider__stepper]').remove();\n\n        controls.forEach(control => {\n            control.remove();\n        });\n    }\n\n    /**\n     * Adds the appropriate tabindex's to not breaking slider when tabbing through site\n     * @return {Void}\n     */\n    fixTabbing() {\n        const slideElements = [...this.SLIDER.querySelector(`[${this.INNER}]`).children];\n        const tabTargets = [\n            'button',\n            'video',\n            'input',\n            'textarea'\n        ];\n\n        slideElements.forEach((elm) => {\n            tabTargets.forEach((item) => {\n                elm.querySelectorAll(item).forEach((tabElm) => {\n                    tabElm.setAttribute('tabindex', '-1');\n                })\n            })\n        })\n\n        slideElements[this.getCurrentIndex()].querySelectorAll('[tabindex]').forEach(elm => {\n            elm.removeAttribute(\"tabindex\");\n        })\n    }\n\n    noRepeat() {\n        let next = this.SLIDER.querySelector(`[${this.BTN}=\"next\"]`);\n        let prev = this.SLIDER.querySelector(`[${this.BTN}=\"prev\"]`);\n        \n        next.classList.remove('u-display--none');\n        prev.classList.remove('u-display--none');\n\n        if (this.getCurrentIndex() == (this.getItemsLength() -1)) {\n            next.classList.add('u-display--none');\n            return;\n        }\n        \n        if (this.getCurrentIndex() == 0) {\n            prev.classList.add('u-display--none');\n            return;\n        }\n    }\n\n    addVideoControls() {\n        this.SLIDER.querySelectorAll('[js-slider-slide]').forEach((slide) => {\n            if(slide.querySelectorAll('video').length > 0) {\n                const player = new _helpers_video__WEBPACK_IMPORTED_MODULE_1__[\"default\"](slide);\n            }\n        })\n    }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvc2xpZGVyLmpzP2FmM2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFFa0M7QUFDVTs7QUFFN0I7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1DQUFtQyxpREFBUTs7QUFFM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBLHlDQUF5QyxTQUFTO0FBQ2xEO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQSxtQjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLFdBQVc7QUFDakQsMkJBQTJCLHFDQUFxQztBQUNoRTs7QUFFQTtBQUNBO0FBQ0EsZ0JBQWdCLElBQUk7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLElBQUk7QUFDcEI7QUFDQTtBQUNBLGdEQUFnRCxXQUFXO0FBQzNEOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsdUVBQXVFLG9EQUFvRDtBQUMzSDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSwyQkFBMkIsK0JBQStCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0EsZ0VBQWdFLFdBQVc7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYixTQUFTOztBQUVUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQSxpREFBaUQsU0FBUztBQUMxRCxpREFBaUQsU0FBUzs7QUFFMUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxzREFBYTtBQUNoRDtBQUNBLFNBQVM7QUFDVDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BoZWxzaW5nYm9yZy1zdGFkL3N0eWxlZ3VpZGUvc291cmNlL2pzL3NsaWRlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC1leHByZXNzaW9ucyAqL1xuXG5pbXBvcnQgU3RlcHBlcnMgZnJvbSBcIi4vc3RlcHBlcnNcIjtcbmltcG9ydCBWaWRlb0NvbnRyb2xzIGZyb20gXCIuL2hlbHBlcnMvdmlkZW9cIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2xpZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihzbGlkZXIpIHtcbiAgICAgICAgdGhpcy5TTElERVIgICAgID0gc2xpZGVyO1xuICAgICAgICB0aGlzLlNMSURFICAgICAgPSBcImpzLXNsaWRlci1zbGlkZVwiO1xuICAgICAgICB0aGlzLkFUVFIgICAgICAgPSBcImpzLXNsaWRlclwiO1xuICAgICAgICB0aGlzLkJUTiAgICAgICAgPSBcImpzLXNsaWRlci1idG5cIjtcbiAgICAgICAgdGhpcy5JTkRFWCAgICAgID0gXCJqcy1zbGlkZXItaW5kZXhcIjtcbiAgICAgICAgdGhpcy5JTk5FUiAgICAgID0gXCJqcy1zbGlkZXItaW5uZXJcIjtcbiAgICAgICAgdGhpcy5BVVRPU0xJREUgID0gXCJqcy1zbGlkZXJfX2F1dG9zbGlkZVwiO1xuICAgICAgICB0aGlzLlJFUEVBVCAgICAgPSBcImpzLXNsaWRlci1yZXBlYXRcIjtcbiAgICAgICAgdGhpcy5TVEVQICAgICAgID0gXCJkYXRhLXN0ZXBcIjtcbiAgICAgICAgdGhpcy5QQVVTRUhPVkVSID0gZmFsc2U7XG5cbiAgICAgICAgdGhpcy5TdGVwcGVySW5zdGFuY2UgPSBuZXcgU3RlcHBlcnM7XG5cbiAgICAgICAgaWYgKHRoaXMuZ2V0SXRlbXNMZW5ndGgoKSA+IDEpIHtcbiAgICAgICAgICAgIHRoaXMuYXBwbHlTbGlkZXJzKCk7XG4gICAgICAgICAgICB0aGlzLmVuYWJsZVN0ZXBwZXIoKTtcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlU3dpcGVzKCk7XG4gICAgICAgICAgICB0aGlzLmZpeFRhYmJpbmcoKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYoISh0aGlzLlNMSURFUi5nZXRBdHRyaWJ1dGUodGhpcy5SRVBFQVQpKSkge1xuICAgICAgICAgICAgICAgIHRoaXMubm9SZXBlYXQoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYodGhpcy5TTElERVIuaGFzQXR0cmlidXRlKHRoaXMuQVVUT1NMSURFKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuYXV0b1NsaWRlcigpO1xuICAgICAgICAgICAgICAgIHRoaXMuYXV0b1NsaWRlckhvdmVySGFuZGxlcigpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaGlkZUNvbnRyb2xzKCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmFkZFZpZGVvQ29udHJvbHMoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEZpbmRzIGFsbCBzbGlkZXMgYW5kIGF0dGFjaGVzIGV2ZW50IGxpc3RlbmVycy5cbiAgICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgICAqL1xuICAgIGFwcGx5U2xpZGVycygpIHtcbiAgICAgICAgdGhpcy5TTElERVIucXVlcnlTZWxlY3RvckFsbChgWyR7dGhpcy5CVE59XWApLmZvckVhY2goKGJ1dHRvbikgPT4ge1xuICAgICAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsaWNrZWRCdG4oZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBIYW5kbGVzIGNsaWNrIG9uIGVpdGhlciBuZXh0IG9jaCBwcmV2aW91cyBidXR0b25cbiAgICAgKiBAcGFyYW0ge09iamVjdH0gZSBUaGUgY2xpY2sgZXZlbnRcbiAgICAgKi9cbiAgICBjbGlja2VkQnRuKGUpIHsgIFxuICAgICAgICBsZXQgbmV3SW5kZXg7XG5cbiAgICAgICAgaWYgKGUudGFyZ2V0LmNsb3Nlc3QoXCJidXR0b25cIikuZ2V0QXR0cmlidXRlKHRoaXMuQlROKSA9PT0gJ3ByZXYnKSB7XG4gICAgICAgICAgICBuZXdJbmRleCA9IHRoaXMucHJldkluZGV4KHRoaXMuZ2V0Q3VycmVudEluZGV4KHRoaXMuU0xJREVSKSlcblxuICAgICAgICB9IGVsc2UgaWYgKGUudGFyZ2V0LmNsb3Nlc3QoXCJidXR0b25cIikuZ2V0QXR0cmlidXRlKHRoaXMuQlROKSA9PT0gJ25leHQnKSB7XG4gICAgICAgICAgICBuZXdJbmRleCA9IHRoaXMubmV4dEluZGV4KHRoaXMuZ2V0Q3VycmVudEluZGV4KHRoaXMuU0xJREVSKSlcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudXBkYXRlU2xpZGVyKG5ld0luZGV4KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBIYW5kbGVzIHN3aXBlRXZlbnRzXG4gICAgICovXG4gICAgaGFuZGxlU3dpcGVzKCkge1xuICAgICAgICB0aGlzLlNMSURFUi5hZGRFdmVudExpc3RlbmVyKCdzd2lwZUxlZnQnLCAoZSkgPT4ge1xuICAgICAgICAgICAgbGV0IG5ld0luZGV4O1xuICAgICAgICAgICAgbmV3SW5kZXggPSB0aGlzLm5leHRJbmRleCh0aGlzLmdldEN1cnJlbnRJbmRleCh0aGlzLlNMSURFUikpO1xuICAgICAgICAgICAgdGhpcy51cGRhdGVTbGlkZXIobmV3SW5kZXgpO1xuICAgICAgICB9KVxuXG4gICAgICAgIHRoaXMuU0xJREVSLmFkZEV2ZW50TGlzdGVuZXIoJ3N3aXBlUmlnaHQnLCAoZSkgPT4ge1xuICAgICAgICAgICAgbGV0IG5ld0luZGV4O1xuICAgICAgICAgICAgbmV3SW5kZXggPSB0aGlzLnByZXZJbmRleCh0aGlzLmdldEN1cnJlbnRJbmRleCh0aGlzLlNMSURFUikpO1xuICAgICAgICAgICAgdGhpcy51cGRhdGVTbGlkZXIobmV3SW5kZXgpO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIHVwZGF0ZVNsaWRlcihuZXdJbmRleCkge1xuICAgICAgICB0aGlzLlNMSURFUi5zZXRBdHRyaWJ1dGUodGhpcy5JTkRFWCwgbmV3SW5kZXgpO1xuICAgICAgICB0aGlzLlNMSURFUi5zZXRBdHRyaWJ1dGUodGhpcy5TVEVQLCBuZXdJbmRleCk7XG4gICAgICAgIHRoaXMudXBkYXRlU3RlcHBlcigpO1xuICAgICAgICB0aGlzLm1vdmVUb0luZGV4KCk7XG4gICAgICAgIHRoaXMuZml4VGFiYmluZygpO1xuXG4gICAgICAgIGlmKCEodGhpcy5TTElERVIuZ2V0QXR0cmlidXRlKHRoaXMuUkVQRUFUKSkpIHtcbiAgICAgICAgICAgIHRoaXMubm9SZXBlYXQoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gICAgYXV0b1NsaWRlcigpIHtcbiAgICAgICAgc2V0VGltZW91dChcbiAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZighdGhpcy5QQVVTRUhPVkVSKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU2xpZGVyKHRoaXMubmV4dEluZGV4KHRoaXMuZ2V0Q3VycmVudEluZGV4KHRoaXMuU0xJREVSKSkpO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5hdXRvU2xpZGVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICwgdGhpcy5nZXRBdXRvU2xpZGVyRGVsYXkoKSk7XG4gICAgfVxuXG4gICAgZ2V0QXV0b1NsaWRlckRlbGF5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5TTElERVIuZ2V0QXR0cmlidXRlKHRoaXMuQVVUT1NMSURFKSAqIDEwMDA7XG4gICAgfVxuXG4gICAgYXV0b1NsaWRlckhvdmVySGFuZGxlciAoKSB7XG4gICAgICAgIHRoaXMuU0xJREVSLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLlBBVVNFSE9WRVIgPSB0cnVlXG4gICAgICAgIH0pXG5cbiAgICAgICAgdGhpcy5TTElERVIuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VsZWF2ZScsIChlKSA9PiB7XG4gICAgICAgICAgICBpZiAoZS50YXJnZXQgPT09IHRoaXMuU0xJREVSKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5QQVVTRUhPVkVSID0gZmFsc2VcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwcmV2SW5kZXgoY3VycmVudCkge1xuICAgICAgICByZXR1cm4gY3VycmVudCA9PT0gMCA/IHRoaXMuZ2V0SXRlbXNMZW5ndGgodGhpcy5TTElERVIpIC0xIDogY3VycmVudCAtMTtcbiAgICB9XG5cbiAgICBuZXh0SW5kZXgoY3VycmVudCkge1xuICAgICAgICByZXR1cm4gY3VycmVudCA8PSAodGhpcy5nZXRJdGVtc0xlbmd0aCh0aGlzLlNMSURFUikgLSAyKSA/IGN1cnJlbnQgKzEgOiAwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIGFwcHJvcHJpYXRlIHN0eWxpbmcgdG8gc2xpZGUgdG8gdGhlIHJlcXVlc3RlZCBzbGlkZVxuICAgICAqL1xuICAgIG1vdmVUb0luZGV4KCkge1xuICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgKi9cbiAgICAgICAgdGhpcy5TTElERVIucXVlcnlTZWxlY3RvcihgWyR7dGhpcy5JTk5FUn1dYCkuc3R5bGUudHJhbnNmb3JtID1cbiAgICAgICAgICAgIGB0cmFuc2xhdGVYKC0ke3RoaXMuU0xJREVSLmdldEF0dHJpYnV0ZSh0aGlzLklOREVYKX0wMCUpYDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBjdXJyZW50IGluZGV4IG9mIHRoZSBzbGlkZXIgY29tcG9uZW50XG4gICAgICogQHJldHVybiB7SW50fSBUaGUgY3VycmVudCBpbmRleFxuICAgICAqL1xuICAgIGdldEN1cnJlbnRJbmRleCgpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KHRoaXMuU0xJREVSLmdldEF0dHJpYnV0ZSh0aGlzLklOREVYKSwgMTApXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBob3cgbWFueSBzbGlkZXMgYXJlIHByZXNlbnQgaW5zaWRlIHRoZSB0aGUgc2xpZGVyLlxuICAgICAqIFN0YXJ0cyBhdCAxLlxuICAgICAqIEByZXR1cm4ge0ludH0gVGhlIGFtb3VudCBvZiBzbGlkZXNcbiAgICAgKi9cbiAgICBnZXRJdGVtc0xlbmd0aCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuU0xJREVSLnF1ZXJ5U2VsZWN0b3JBbGwoYFske3RoaXMuU0xJREV9XWApLmxlbmd0aFxuICAgIH1cblxuICAgIHVwZGF0ZVN0ZXBwZXIoKSB7XG4gICAgICAgIGNvbnN0IHN0ZXBwZXIgPSB0aGlzLlNMSURFUi5xdWVyeVNlbGVjdG9yKCdbanMtc2xpZGVyX19zdGVwcGVyXScpO1xuICAgICAgICBjb25zdCBjdXJyZW50QWN0aXZlID0gc3RlcHBlci5xdWVyeVNlbGVjdG9yKGAuYy1zbGlkZXJfX2RvdC0tYWN0aXZlYClcbiAgICAgICAgXG4gICAgICAgIGlmKGN1cnJlbnRBY3RpdmUpIHtcbiAgICAgICAgICAgIGN1cnJlbnRBY3RpdmUuY2xhc3NMaXN0LnJlbW92ZSgnYy1zbGlkZXJfX2RvdC0tYWN0aXZlJyk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBkb3QgPSBzdGVwcGVyLnF1ZXJ5U2VsZWN0b3IoYFtqcy1zbGlkZXJfX3N0ZXBwZXJfX2RvdD1cIiR7dGhpcy5nZXRDdXJyZW50SW5kZXgoKSA/IHRoaXMuZ2V0Q3VycmVudEluZGV4KCkgOiAwfVwiXWApO1xuICAgICAgICBkb3QuY2xhc3NMaXN0LmFkZCgnYy1zbGlkZXJfX2RvdC0tYWN0aXZlJylcblxuICAgIH1cblxuICAgIGVuYWJsZVN0ZXBwZXIoKSB7XG4gICAgICAgIGNvbnN0IHN0ZXBwZXIgPSB0aGlzLlNMSURFUi5xdWVyeVNlbGVjdG9yKCdbanMtc2xpZGVyX19zdGVwcGVyXScpO1xuICAgICAgICBjb25zdCBkb3QgPSBzdGVwcGVyLnF1ZXJ5U2VsZWN0b3IoJy5jLXNsaWRlcl9fZG90Jyk7XG5cbiAgICAgICAgc3RlcHBlci5zZXRBdHRyaWJ1dGUoJ2pzLXNsaWRlcl9fc3RlcHBlcl9fY3VycmVudCcsIDEpXG4gICAgICAgIHN0ZXBwZXIuaW5uZXJIVE1MID0gXCJcIlxuXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLmdldEl0ZW1zTGVuZ3RoKCk7IGluZGV4KyspIHtcbiAgICAgICAgICAgIGNvbnN0IGNsb25lID0gZG90LmNsb25lTm9kZSgpO1xuICAgICAgICAgICAgY2xvbmUuc2V0QXR0cmlidXRlKCdqcy1zbGlkZXJfX3N0ZXBwZXJfX2RvdCcsIGluZGV4KVxuICAgICAgICAgICAgc3RlcHBlci5hcHBlbmRDaGlsZChjbG9uZSlcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuYWRkU3RlcHBlckV2ZW50KClcblxuICAgICAgICB0aGlzLnVwZGF0ZVN0ZXBwZXIoKTtcbiAgICB9XG5cbiAgICBhZGRTdGVwcGVyRXZlbnQoKSB7XG4gICAgICAgIGNvbnN0IHN0ZXBwZXIgPSB0aGlzLlNMSURFUi5xdWVyeVNlbGVjdG9yKCdbanMtc2xpZGVyX19zdGVwcGVyXScpO1xuXG4gICAgICAgIHN0ZXBwZXIucXVlcnlTZWxlY3RvckFsbChgW2pzLXNsaWRlcl9fc3RlcHBlcl9fZG90XWApLmZvckVhY2goKGRvdCkgPT4ge1xuICAgICAgICAgICAgZG90LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVNsaWRlcihlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ2pzLXNsaWRlcl9fc3RlcHBlcl9fZG90JykpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGNvbnRyb2xzXG4gICAgICogQHJldHVybiB7Vm9pZH1cbiAgICAgKi9cbiAgICBoaWRlQ29udHJvbHMoKSB7XG4gICAgICAgIGNvbnN0IGNvbnRyb2xzID0gdGhpcy5TTElERVIucXVlcnlTZWxlY3RvckFsbCgnLmMtc2xpZGVyX19idXR0b24nKTtcblxuICAgICAgICB0aGlzLlNMSURFUi5xdWVyeVNlbGVjdG9yKCdbanMtc2xpZGVyX19zdGVwcGVyXScpLnJlbW92ZSgpO1xuXG4gICAgICAgIGNvbnRyb2xzLmZvckVhY2goY29udHJvbCA9PiB7XG4gICAgICAgICAgICBjb250cm9sLnJlbW92ZSgpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGRzIHRoZSBhcHByb3ByaWF0ZSB0YWJpbmRleCdzIHRvIG5vdCBicmVha2luZyBzbGlkZXIgd2hlbiB0YWJiaW5nIHRocm91Z2ggc2l0ZVxuICAgICAqIEByZXR1cm4ge1ZvaWR9XG4gICAgICovXG4gICAgZml4VGFiYmluZygpIHtcbiAgICAgICAgY29uc3Qgc2xpZGVFbGVtZW50cyA9IFsuLi50aGlzLlNMSURFUi5xdWVyeVNlbGVjdG9yKGBbJHt0aGlzLklOTkVSfV1gKS5jaGlsZHJlbl07XG4gICAgICAgIGNvbnN0IHRhYlRhcmdldHMgPSBbXG4gICAgICAgICAgICAnYnV0dG9uJyxcbiAgICAgICAgICAgICd2aWRlbycsXG4gICAgICAgICAgICAnaW5wdXQnLFxuICAgICAgICAgICAgJ3RleHRhcmVhJ1xuICAgICAgICBdO1xuXG4gICAgICAgIHNsaWRlRWxlbWVudHMuZm9yRWFjaCgoZWxtKSA9PiB7XG4gICAgICAgICAgICB0YWJUYXJnZXRzLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICBlbG0ucXVlcnlTZWxlY3RvckFsbChpdGVtKS5mb3JFYWNoKCh0YWJFbG0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGFiRWxtLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAnLTEnKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcblxuICAgICAgICBzbGlkZUVsZW1lbnRzW3RoaXMuZ2V0Q3VycmVudEluZGV4KCldLnF1ZXJ5U2VsZWN0b3JBbGwoJ1t0YWJpbmRleF0nKS5mb3JFYWNoKGVsbSA9PiB7XG4gICAgICAgICAgICBlbG0ucmVtb3ZlQXR0cmlidXRlKFwidGFiaW5kZXhcIik7XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgbm9SZXBlYXQoKSB7XG4gICAgICAgIGxldCBuZXh0ID0gdGhpcy5TTElERVIucXVlcnlTZWxlY3RvcihgWyR7dGhpcy5CVE59PVwibmV4dFwiXWApO1xuICAgICAgICBsZXQgcHJldiA9IHRoaXMuU0xJREVSLnF1ZXJ5U2VsZWN0b3IoYFske3RoaXMuQlROfT1cInByZXZcIl1gKTtcbiAgICAgICAgXG4gICAgICAgIG5leHQuY2xhc3NMaXN0LnJlbW92ZSgndS1kaXNwbGF5LS1ub25lJyk7XG4gICAgICAgIHByZXYuY2xhc3NMaXN0LnJlbW92ZSgndS1kaXNwbGF5LS1ub25lJyk7XG5cbiAgICAgICAgaWYgKHRoaXMuZ2V0Q3VycmVudEluZGV4KCkgPT0gKHRoaXMuZ2V0SXRlbXNMZW5ndGgoKSAtMSkpIHtcbiAgICAgICAgICAgIG5leHQuY2xhc3NMaXN0LmFkZCgndS1kaXNwbGF5LS1ub25lJyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGlmICh0aGlzLmdldEN1cnJlbnRJbmRleCgpID09IDApIHtcbiAgICAgICAgICAgIHByZXYuY2xhc3NMaXN0LmFkZCgndS1kaXNwbGF5LS1ub25lJyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhZGRWaWRlb0NvbnRyb2xzKCkge1xuICAgICAgICB0aGlzLlNMSURFUi5xdWVyeVNlbGVjdG9yQWxsKCdbanMtc2xpZGVyLXNsaWRlXScpLmZvckVhY2goKHNsaWRlKSA9PiB7XG4gICAgICAgICAgICBpZihzbGlkZS5xdWVyeVNlbGVjdG9yQWxsKCd2aWRlbycpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBjb25zdCBwbGF5ZXIgPSBuZXcgVmlkZW9Db250cm9scyhzbGlkZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/slider.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/sort.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/sort.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\nclass Sort {\n\n    constructor() {\n        this.CONTAINER = 'js-sort-container';\n        this.BUTTON = 'js-sort-button';\n        this.SORTABLE = 'js-sort-sortable';\n        this.ORDER = 'js-sort-order';\n        this.DATA = 'js-sort-data';\n        this.DATACONTAINER = 'js-sort-data-container';\n        this.INITIAL = 'js-sort-initial';\n    }\n\n    compare(a, b) {\n        return a.data.toLowerCase().localeCompare(b.data.toLowerCase());\n    }\n\n    appendSortable(container, dataId, initialSort = false) {\n        let sorted = [];\n        let sortOrder = container.getAttribute(this.ORDER);\n        let sortData = container.querySelectorAll(`[${this.DATA}=\"${dataId}\"]`);\n        let comparableData = [...sortData].map((data) => {\n            return { data: data.innerText, index: data.closest(`[${this.SORTABLE}]`) }\n        });\n        \n        if (sortOrder === 'asc' || (initialSort && initialSort === 'asc')) {\n            sorted = comparableData.sort(this.compare);\n            container.setAttribute(this.ORDER, \"desc\");\n        } else if(initialSort && initialSort === 'desc') {\n            comparableData.sort(this.compare);\n            sorted = comparableData.reverse(this.compare);\n            container.setAttribute(this.ORDER, 'asc');\n        } else {\n            sorted = comparableData.reverse(this.compare);\n            container.setAttribute(this.ORDER, \"asc\");\n        }\n\n        sorted.forEach(sort => {\n            sort.index.closest(`[${this.DATACONTAINER}]`).appendChild(sort.index);\n        });\n    }\n\n    applySort() {\n        const sortContainers = document.querySelectorAll(`[${this.CONTAINER}]`);\n\n        sortContainers.forEach(container => {\n            const sortButtons = container.querySelectorAll(`[${this.BUTTON}]`);\n            sortButtons.forEach((button) => {\n\n                let dataId = button.getAttribute(this.BUTTON);\n                let initialSort = container.getAttribute(this.INITIAL)\n\n                if(initialSort){\n                    container.setAttribute(this.ORDER, initialSort)\n                    this.appendSortable(container, dataId, initialSort);\n                }\n                button.addEventListener('click', (event) => {\n                    this.appendSortable(container, dataId);\n                });\n            });\n        });\n    }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sort);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvc29ydC5qcz85MWNjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsVUFBVSxJQUFJLE9BQU87QUFDM0U7QUFDQSxvQkFBb0IsK0NBQStDLGNBQWM7QUFDakYsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1DQUFtQyxtQkFBbUI7QUFDdEQsU0FBUztBQUNUOztBQUVBO0FBQ0EsNkRBQTZELGVBQWU7O0FBRTVFO0FBQ0EsK0RBQStELFlBQVk7QUFDM0U7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiLFNBQVM7QUFDVDs7QUFFQTs7QUFFZSxtRUFBSSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AaGVsc2luZ2Jvcmctc3RhZC9zdHlsZWd1aWRlL3NvdXJjZS9qcy9zb3J0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5jbGFzcyBTb3J0IHtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLkNPTlRBSU5FUiA9ICdqcy1zb3J0LWNvbnRhaW5lcic7XG4gICAgICAgIHRoaXMuQlVUVE9OID0gJ2pzLXNvcnQtYnV0dG9uJztcbiAgICAgICAgdGhpcy5TT1JUQUJMRSA9ICdqcy1zb3J0LXNvcnRhYmxlJztcbiAgICAgICAgdGhpcy5PUkRFUiA9ICdqcy1zb3J0LW9yZGVyJztcbiAgICAgICAgdGhpcy5EQVRBID0gJ2pzLXNvcnQtZGF0YSc7XG4gICAgICAgIHRoaXMuREFUQUNPTlRBSU5FUiA9ICdqcy1zb3J0LWRhdGEtY29udGFpbmVyJztcbiAgICAgICAgdGhpcy5JTklUSUFMID0gJ2pzLXNvcnQtaW5pdGlhbCc7XG4gICAgfVxuXG4gICAgY29tcGFyZShhLCBiKSB7XG4gICAgICAgIHJldHVybiBhLmRhdGEudG9Mb3dlckNhc2UoKS5sb2NhbGVDb21wYXJlKGIuZGF0YS50b0xvd2VyQ2FzZSgpKTtcbiAgICB9XG5cbiAgICBhcHBlbmRTb3J0YWJsZShjb250YWluZXIsIGRhdGFJZCwgaW5pdGlhbFNvcnQgPSBmYWxzZSkge1xuICAgICAgICBsZXQgc29ydGVkID0gW107XG4gICAgICAgIGxldCBzb3J0T3JkZXIgPSBjb250YWluZXIuZ2V0QXR0cmlidXRlKHRoaXMuT1JERVIpO1xuICAgICAgICBsZXQgc29ydERhdGEgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbChgWyR7dGhpcy5EQVRBfT1cIiR7ZGF0YUlkfVwiXWApO1xuICAgICAgICBsZXQgY29tcGFyYWJsZURhdGEgPSBbLi4uc29ydERhdGFdLm1hcCgoZGF0YSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHsgZGF0YTogZGF0YS5pbm5lclRleHQsIGluZGV4OiBkYXRhLmNsb3Nlc3QoYFske3RoaXMuU09SVEFCTEV9XWApIH1cbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICBpZiAoc29ydE9yZGVyID09PSAnYXNjJyB8fCAoaW5pdGlhbFNvcnQgJiYgaW5pdGlhbFNvcnQgPT09ICdhc2MnKSkge1xuICAgICAgICAgICAgc29ydGVkID0gY29tcGFyYWJsZURhdGEuc29ydCh0aGlzLmNvbXBhcmUpO1xuICAgICAgICAgICAgY29udGFpbmVyLnNldEF0dHJpYnV0ZSh0aGlzLk9SREVSLCBcImRlc2NcIik7XG4gICAgICAgIH0gZWxzZSBpZihpbml0aWFsU29ydCAmJiBpbml0aWFsU29ydCA9PT0gJ2Rlc2MnKSB7XG4gICAgICAgICAgICBjb21wYXJhYmxlRGF0YS5zb3J0KHRoaXMuY29tcGFyZSk7XG4gICAgICAgICAgICBzb3J0ZWQgPSBjb21wYXJhYmxlRGF0YS5yZXZlcnNlKHRoaXMuY29tcGFyZSk7XG4gICAgICAgICAgICBjb250YWluZXIuc2V0QXR0cmlidXRlKHRoaXMuT1JERVIsICdhc2MnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNvcnRlZCA9IGNvbXBhcmFibGVEYXRhLnJldmVyc2UodGhpcy5jb21wYXJlKTtcbiAgICAgICAgICAgIGNvbnRhaW5lci5zZXRBdHRyaWJ1dGUodGhpcy5PUkRFUiwgXCJhc2NcIik7XG4gICAgICAgIH1cblxuICAgICAgICBzb3J0ZWQuZm9yRWFjaChzb3J0ID0+IHtcbiAgICAgICAgICAgIHNvcnQuaW5kZXguY2xvc2VzdChgWyR7dGhpcy5EQVRBQ09OVEFJTkVSfV1gKS5hcHBlbmRDaGlsZChzb3J0LmluZGV4KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgYXBwbHlTb3J0KCkge1xuICAgICAgICBjb25zdCBzb3J0Q29udGFpbmVycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYFske3RoaXMuQ09OVEFJTkVSfV1gKTtcblxuICAgICAgICBzb3J0Q29udGFpbmVycy5mb3JFYWNoKGNvbnRhaW5lciA9PiB7XG4gICAgICAgICAgICBjb25zdCBzb3J0QnV0dG9ucyA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKGBbJHt0aGlzLkJVVFRPTn1dYCk7XG4gICAgICAgICAgICBzb3J0QnV0dG9ucy5mb3JFYWNoKChidXR0b24pID0+IHtcblxuICAgICAgICAgICAgICAgIGxldCBkYXRhSWQgPSBidXR0b24uZ2V0QXR0cmlidXRlKHRoaXMuQlVUVE9OKTtcbiAgICAgICAgICAgICAgICBsZXQgaW5pdGlhbFNvcnQgPSBjb250YWluZXIuZ2V0QXR0cmlidXRlKHRoaXMuSU5JVElBTClcblxuICAgICAgICAgICAgICAgIGlmKGluaXRpYWxTb3J0KXtcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLnNldEF0dHJpYnV0ZSh0aGlzLk9SREVSLCBpbml0aWFsU29ydClcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hcHBlbmRTb3J0YWJsZShjb250YWluZXIsIGRhdGFJZCwgaW5pdGlhbFNvcnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hcHBlbmRTb3J0YWJsZShjb250YWluZXIsIGRhdGFJZCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IFNvcnQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/sort.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/splitButton.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/splitButton.js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass SplitButton{\n    constructor(){\n        this.SPLIT = 'js-split';\n        this.DROPDOWNLISTVISIBLE = 'c-dropdown__list--visible';\n    }\n\n    syncSplitButton(){\n        const splitButtons = document.querySelectorAll(`[${this.SPLIT}]`);\n\n\n        splitButtons.forEach((splitButton)=> {\n            let buttons = splitButton.getElementsByClassName('c-button');\n            let actionButton = buttons[0];\n            let dropDownList = splitButton.getElementsByClassName('c-dropdown__list')[0];\n            let listItems = dropDownList.getElementsByTagName('li');\n\n            for(let item of listItems){\n                item.addEventListener('click', () => {\n                    actionButton.innerText = item.innerText;\n                }) \n            }   \n        });\n        \n        \n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SplitButton);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvc3BsaXRCdXR0b24uanM/MDc4MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyREFBMkQsV0FBVzs7O0FBR3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGE7QUFDQSxTQUFTOzs7QUFHVDtBQUNBOztBQUVlLDBFQUFXIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BoZWxzaW5nYm9yZy1zdGFkL3N0eWxlZ3VpZGUvc291cmNlL2pzL3NwbGl0QnV0dG9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgU3BsaXRCdXR0b257XG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgdGhpcy5TUExJVCA9ICdqcy1zcGxpdCc7XG4gICAgICAgIHRoaXMuRFJPUERPV05MSVNUVklTSUJMRSA9ICdjLWRyb3Bkb3duX19saXN0LS12aXNpYmxlJztcbiAgICB9XG5cbiAgICBzeW5jU3BsaXRCdXR0b24oKXtcbiAgICAgICAgY29uc3Qgc3BsaXRCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgWyR7dGhpcy5TUExJVH1dYCk7XG5cblxuICAgICAgICBzcGxpdEJ1dHRvbnMuZm9yRWFjaCgoc3BsaXRCdXR0b24pPT4ge1xuICAgICAgICAgICAgbGV0IGJ1dHRvbnMgPSBzcGxpdEJ1dHRvbi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdjLWJ1dHRvbicpO1xuICAgICAgICAgICAgbGV0IGFjdGlvbkJ1dHRvbiA9IGJ1dHRvbnNbMF07XG4gICAgICAgICAgICBsZXQgZHJvcERvd25MaXN0ID0gc3BsaXRCdXR0b24uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnYy1kcm9wZG93bl9fbGlzdCcpWzBdO1xuICAgICAgICAgICAgbGV0IGxpc3RJdGVtcyA9IGRyb3BEb3duTGlzdC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnbGknKTtcblxuICAgICAgICAgICAgZm9yKGxldCBpdGVtIG9mIGxpc3RJdGVtcyl7XG4gICAgICAgICAgICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uQnV0dG9uLmlubmVyVGV4dCA9IGl0ZW0uaW5uZXJUZXh0O1xuICAgICAgICAgICAgICAgIH0pIFxuICAgICAgICAgICAgfSAgIFxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIFxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU3BsaXRCdXR0b247Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/splitButton.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * Component Steppers\n */\n\nclass Steppers {\n\n    constructor() {\n        this.dataSteps = null;\n        this.stepperLength = null;\n        this.modalId = null;\n        this.container = null;\n    }\n\n    /**\n     * Enable and init Steppers\n     */\n    enableStepper(stepperType, container, stepperLength, generate) {\n        const self = this;\n        this.container = container;\n        this.stepperLength = stepperLength;\n\n        switch (stepperType) {\n            case 'dots':\n                setTimeout(function () {\n                    self.dots(generate);\n                }, 500);\n                break;\n        }\n    }\n\n\n    /**\n     * Steppers - Dots\n     * @param generate\n     */\n    dots(generate) {\n\n        if (generate) {\n\n            if (this.container.querySelector('.c-steppers--type-dots').childElementCount !== 0) {\n                this.container.querySelector('.c-steppers__dot').innerHTML = \"\";\n            } else {\n                for (let int = 0; int < this.stepperLength; int++) {\n                    this.container.querySelector('.c-steppers--type-dots').insertAdjacentHTML(\"beforeend\",\n                        '<i class=\"c-steppers__dot c-steppers__dot-' + int + '\"></i>');\n                }\n            }\n        }\n\n        for (let removeDot of this.container.querySelectorAll('.c-steppers__dot')) {\n            if (removeDot.classList.contains('c-steppers__dot-active')) {\n                removeDot.classList.remove('c-steppers__dot-active');\n            }\n        }\n\n        let activeStep = this.container.querySelector('[data-step]').getAttribute('data-step');\n        this.container.querySelector('.c-steppers__dot-' + activeStep + '').classList.add('c-steppers__dot-active');\n    }\n\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Steppers);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvc3RlcHBlcnMuanM/MTQ4MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsaUNBQWlDLDBCQUEwQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTs7QUFFZSx1RUFBUSxFQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BoZWxzaW5nYm9yZy1zdGFkL3N0eWxlZ3VpZGUvc291cmNlL2pzL3N0ZXBwZXJzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb21wb25lbnQgU3RlcHBlcnNcbiAqL1xuXG5jbGFzcyBTdGVwcGVycyB7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5kYXRhU3RlcHMgPSBudWxsO1xuICAgICAgICB0aGlzLnN0ZXBwZXJMZW5ndGggPSBudWxsO1xuICAgICAgICB0aGlzLm1vZGFsSWQgPSBudWxsO1xuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IG51bGw7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRW5hYmxlIGFuZCBpbml0IFN0ZXBwZXJzXG4gICAgICovXG4gICAgZW5hYmxlU3RlcHBlcihzdGVwcGVyVHlwZSwgY29udGFpbmVyLCBzdGVwcGVyTGVuZ3RoLCBnZW5lcmF0ZSkge1xuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XG4gICAgICAgIHRoaXMuc3RlcHBlckxlbmd0aCA9IHN0ZXBwZXJMZW5ndGg7XG5cbiAgICAgICAgc3dpdGNoIChzdGVwcGVyVHlwZSkge1xuICAgICAgICAgICAgY2FzZSAnZG90cyc6XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuZG90cyhnZW5lcmF0ZSk7XG4gICAgICAgICAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cblxuXG4gICAgLyoqXG4gICAgICogU3RlcHBlcnMgLSBEb3RzXG4gICAgICogQHBhcmFtIGdlbmVyYXRlXG4gICAgICovXG4gICAgZG90cyhnZW5lcmF0ZSkge1xuXG4gICAgICAgIGlmIChnZW5lcmF0ZSkge1xuXG4gICAgICAgICAgICBpZiAodGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvcignLmMtc3RlcHBlcnMtLXR5cGUtZG90cycpLmNoaWxkRWxlbWVudENvdW50ICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvcignLmMtc3RlcHBlcnNfX2RvdCcpLmlubmVySFRNTCA9IFwiXCI7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGZvciAobGV0IGludCA9IDA7IGludCA8IHRoaXMuc3RlcHBlckxlbmd0aDsgaW50KyspIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvcignLmMtc3RlcHBlcnMtLXR5cGUtZG90cycpLmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWVuZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgJzxpIGNsYXNzPVwiYy1zdGVwcGVyc19fZG90IGMtc3RlcHBlcnNfX2RvdC0nICsgaW50ICsgJ1wiPjwvaT4nKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGxldCByZW1vdmVEb3Qgb2YgdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLmMtc3RlcHBlcnNfX2RvdCcpKSB7XG4gICAgICAgICAgICBpZiAocmVtb3ZlRG90LmNsYXNzTGlzdC5jb250YWlucygnYy1zdGVwcGVyc19fZG90LWFjdGl2ZScpKSB7XG4gICAgICAgICAgICAgICAgcmVtb3ZlRG90LmNsYXNzTGlzdC5yZW1vdmUoJ2Mtc3RlcHBlcnNfX2RvdC1hY3RpdmUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBhY3RpdmVTdGVwID0gdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvcignW2RhdGEtc3RlcF0nKS5nZXRBdHRyaWJ1dGUoJ2RhdGEtc3RlcCcpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuYy1zdGVwcGVyc19fZG90LScgKyBhY3RpdmVTdGVwICsgJycpLmNsYXNzTGlzdC5hZGQoJ2Mtc3RlcHBlcnNfX2RvdC1hY3RpdmUnKTtcbiAgICB9XG5cblxufVxuXG5leHBvcnQgZGVmYXVsdCBTdGVwcGVycztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/steppers.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/table.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/table.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Table; });\nclass Table{\n    constructor(table){\n        this.table = table\n        this.list = table.querySelectorAll('[js-table-filter-item]');\n        this.isPagination = table.hasAttribute('js-table-pagination')\n        this.isFilterable = table.hasAttribute('js-table-filter')\n        this.isSortable = table.hasAttribute('js-table-sort')\n        this.link = null\n        this.rowHref = 'js-row-href';\n\n        this.tableRefresh();\n\n        if (this.isPagination) this.paginationButtons()\n\n        if (this.isFilterable) this.filterInput();\n\n        if (this.isSortable) this.sortAddButtons();\n    }\n\n    tableRefresh() {\n        // eslint-disable-next-line prefer-destructuring\n        let list = this.list;\n\n        if (this.isFilterable) {\n            list = this.filterList(list, this.filterValue());\n        }\n\n        if (this.isSortable) {\n            list = this.sortList(list)\n        }\n\n        if (this.isPagination) {\n            list = this.paginateList(list)\n        }\n\n        this.renderTable(list);\n        \n        if (this.isPagination) {\n            this.paginatePages();\n            this.paginationLinks();\n            this.paginateLinkListeners();\n        }\n    }\n\n    renderTable(list = null) {\n        const body = this.table.querySelector('tbody');\n        body.innerHTML = \"\";\n\n        list.forEach(element => {\n            if(element.index) {\n                body.appendChild(element.index)\n            } else {\n                body.appendChild(element)\n            }\n        });\n    }\n\n    paginatePages() {\n        const items = this.isFilterable ? \n            this.filterList(this.list, this.filterValue()).length :\n            this.list.length;\n\n        return Math.ceil(items / this.paginationRows());\n    }\n\n    paginationLinks() {\n        if(!this.link) {\n            this.link = this.table.querySelector('[js-table-pagination--link]');\n        }\n        \n        const body = this.table.querySelector('[js-table-pagination--links]');\n        body.closest('[js-table-pagination]').classList.remove('u-display--none')\n        body.innerHTML = \"\";\n\n        if(this.paginatePages() > 1) {\n            // eslint-disable-next-line no-plusplus\n            for (let index = 0; index < this.paginatePages(); index++) {\n                const elm = this.link.cloneNode(true);\n                elm.innerHTML = index +1;\n                elm.classList.remove('c-button__outlined--primary');\n                elm.setAttribute('js-table-pagination--link', index +1);\n\n                if((index +1) === this.paginationCurrent() ){\n                    elm.classList.add('c-button__outlined--primary');\n                }\n\n                body.appendChild(elm);\n            }\n        } else {\n            body.closest('[js-table-pagination]').classList.add('u-display--none')\n        }\n    }\n\n    paginateLinkListeners() {\n        const btns = this.table.querySelectorAll('[js-table-pagination--link]')\n\n        btns.forEach(btn => {\n            btn.addEventListener('click', () => {\n                this.paginateSetCurrent(btn.getAttribute('js-table-pagination--link'));\n                this.tableRefresh();\n            })\n        });\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    paginateList(list) {\n        const first = (this.paginationCurrent() - 1) * this.paginationRows();\n        const last = this.paginationCurrent() * this.paginationRows();\n\n        return Array.from(list).slice(first, last);\n    }\n\n    // Add event listener filter\n    filterInput() {\n        const input = this.table.querySelector('[js-table-filter-input]');\n        \n        input.addEventListener('input', (e) => {\n            if (this.isPagination) this.paginateSetCurrent();\n            this.tableRefresh();\n        })\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    filterList(list, query) {\n        const newList = [];\n\n        list.forEach(element => {\n            let data = \"\";\n\n            element.querySelectorAll('[js-table-filter-data]').forEach(item => {\n                data += item.innerHTML.toLowerCase();\n            })\n\n            if (data.includes(query.toLowerCase())) {\n                newList.push(element);\n            }\n        });\n\n        return newList;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    compare(a, b) {\n        return a.data.toLowerCase().localeCompare(b.data.toLowerCase(), 'en', {numeric: true});\n    }\n\n    sortList(list) {\n        const sortOrder = this.table.getAttribute('js-table-sort--order');\n\n        if (!sortOrder) {\n            return list;\n        }\n\n        const sortData = []\n        const sortDictator = this.table.getAttribute('js-table-sort--dictator');\n\n        list.forEach(element => {\n            sortData.push(element.querySelector(`[js-table-sort-data=\"${sortDictator}\"]`))\n        });\n\n        const comparableData = [...sortData].map((data) => {\n            return { data: data.innerText.trim(), index: data.closest(`[js-table-sort--sortable]`) }\n        });\n\n        comparableData.sort(this.compare);\n        \n        if (sortOrder === 'desc') {\n            return comparableData.reverse(this.compare);\n        }\n\n        \n        return comparableData;\n    }\n\n    paginationButtons() {\n        const buttons = this.table.querySelectorAll('[js-table-pagination-btn]');\n        this.paginateSetCurrent();\n\n        buttons.forEach(btn => {\n            btn.addEventListener('click', () => {\n                const type = btn.getAttribute('js-table-pagination-btn');\n\n                this.paginateSetCurrent(type === 'next' ?\n                    this.paginationCurrent() +1 :\n                    this.paginationCurrent() -1\n                );\n                \n                this.tableRefresh();\n            })\n        });\n    }\n\n    paginateSetCurrent(current = 1) {\n        this.table.setAttribute('js-table-pagination--current', current);\n\n        current = parseInt(current, 10);\n        \n        if (current === this.paginatePages()) {\n            this.table.querySelector('[js-table-pagination-btn=\"next\"]').setAttribute('disabled', true);\n            this.table.querySelector('[js-table-pagination-btn=\"prev\"]').removeAttribute('disabled');\n        } else if (current === 1) {\n            this.table.querySelector('[js-table-pagination-btn=\"prev\"]').setAttribute('disabled', true);\n            this.table.querySelector('[js-table-pagination-btn=\"next\"]').removeAttribute('disabled');\n        } else {\n            this.table.querySelector('[js-table-pagination-btn=\"next\"]').removeAttribute('disabled');\n            this.table.querySelector('[js-table-pagination-btn=\"prev\"]').removeAttribute('disabled');\n        }\n    }\n\n    sortAddButtons() {\n        const sortButtons = this.table.querySelectorAll(`[js-table-sort--btn]`);\n        sortButtons.forEach((button) => {\n\n            if (!button.hasAttribute('js-table-sort--order')){\n                button.setAttribute('js-table-sort--order', 'asc')\n            }\n\n            button.addEventListener('click', (e) => {\n                if (this.isPagination) this.paginateSetCurrent();\n\n                const sortOrder = this.table.getAttribute('js-table-sort--order');\n                const newOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n                this.table.setAttribute('js-table-sort--order', newOrder);\n\n                const buttonId = e.target.closest('[js-table-sort--btn]')\n                const dataId = buttonId.getAttribute('js-table-sort--btn');\n                this.table.setAttribute('js-table-sort--dictator', dataId)\n                this.tableRefresh();\n            });\n        });\n    }\n\n    filterValue() {\n        return this.table.querySelector('[js-table-filter-input]').value;\n    }\n\n    paginationCurrent() {\n        return parseInt(this.table.getAttribute('js-table-pagination--current'), 10)\n    }\n\n    paginationRows() {\n        return this.table.getAttribute('js-table-pagination')\n    }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/table.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/the-datepicker.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/the-datepicker.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar TheDatepicker;\n(function(TheDatepicker) {\n    var Translator = (function() {\n        function Translator() {\n            this.dayOfWeekTranslations = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n            this.monthTranslations = [\n                'January',\n                'February',\n                'March',\n                'April',\n                'May',\n                'June',\n                'July',\n                'August',\n                'September',\n                'October',\n                'November',\n                'December',\n            ];\n        }\n        Translator.prototype.setDayOfWeekTranslation = function(dayOfWeek, translation) {\n            this.dayOfWeekTranslations[\n                TheDatepicker.Helper.checkNumber('First day of week', dayOfWeek, 0, 6)\n            ] = TheDatepicker.Helper.checkString('Translation', translation);\n        };\n        Translator.prototype.setMonthTranslation = function(month, translation) {\n            this.monthTranslations[\n                TheDatepicker.Helper.checkNumber('Month', month, 0, 11)\n            ] = TheDatepicker.Helper.checkString('Translation', translation);\n        };\n        Translator.prototype.translateDayOfWeek = function(dayOfWeek) {\n            return this.dayOfWeekTranslations[dayOfWeek];\n        };\n        Translator.prototype.translateMonth = function(month) {\n            return this.monthTranslations[month];\n        };\n        return Translator;\n    })();\n    TheDatepicker.Translator = Translator;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function(TheDatepicker) {\n    var CannotParseDateException = (function() {\n        function CannotParseDateException() {}\n        return CannotParseDateException;\n    })();\n    TheDatepicker.CannotParseDateException = CannotParseDateException;\n    var ParsedDateData = (function() {\n        function ParsedDateData() {\n            this.day = null;\n            this.month = null;\n            this.year = null;\n        }\n        ParsedDateData.prototype.createDate = function() {\n            if (this.day === null || this.month === null || this.year === null) {\n                throw new CannotParseDateException();\n            }\n            var date = new Date(this.year, this.month - 1, this.day);\n            if (isNaN(date.getTime())) {\n                throw new CannotParseDateException();\n            }\n            while (\n                date.getDate() !== this.day ||\n                date.getMonth() !== this.month - 1 ||\n                date.getFullYear() !== this.year\n            ) {\n                if (this.day > 28) {\n                    this.day--;\n                    date = new Date(this.year, this.month - 1, this.day);\n                } else {\n                    throw new CannotParseDateException();\n                }\n            }\n            return date;\n        };\n        return ParsedDateData;\n    })();\n    var DateConverter = (function() {\n        function DateConverter(options) {\n            this.options = options;\n            this.escapeChar = '\\\\';\n        }\n        DateConverter.prototype.formatDate = function(format, date) {\n            var escapeNext = false;\n            var result = '';\n            for (var position = 0; position < format.length; position++) {\n                var char = format.substring(position, position + 1);\n                if (escapeNext) {\n                    result += char;\n                    escapeNext = false;\n                    continue;\n                }\n                if (char === this.escapeChar) {\n                    escapeNext = true;\n                    continue;\n                }\n                var formatter = this.getFormatter(char);\n                if (formatter !== null) {\n                    result += formatter.call(this, date);\n                    continue;\n                }\n                result += char;\n            }\n            return result;\n        };\n        DateConverter.prototype.parseDate = function(format, text) {\n            if (text === '') {\n                return null;\n            }\n            var dateData = new ParsedDateData();\n            var escapeNext = false;\n            var textPosition = 0;\n            for (var position = 0; position < format.length; position++) {\n                var char = format.substring(position, position + 1);\n                if (escapeNext) {\n                    escapeNext = false;\n                } else if (char === this.escapeChar) {\n                    escapeNext = true;\n                    continue;\n                } else {\n                    var parser = this.getParser(char);\n                    if (parser !== null) {\n                        try {\n                            textPosition += parser.call(\n                                this,\n                                text.substring(textPosition),\n                                dateData\n                            );\n                        } catch (error) {\n                            if (!(error instanceof CannotParseDateException)) {\n                                throw error;\n                            }\n                            var textChar_1 = text.substring(textPosition, textPosition + 1);\n                            if (textChar_1 === ' ') {\n                                textPosition++;\n                                position--;\n                                continue;\n                            } else {\n                                throw error;\n                            }\n                        }\n                        continue;\n                    }\n                }\n                var textChar = text.substring(textPosition, textPosition + 1);\n                if (textChar !== char) {\n                    if (char === ' ') {\n                        continue;\n                    }\n                    if (textChar === ' ') {\n                        textPosition++;\n                        position--;\n                        continue;\n                    }\n                    throw new CannotParseDateException();\n                }\n                textPosition++;\n            }\n            return dateData.createDate();\n        };\n        DateConverter.prototype.getFormatter = function(type) {\n            switch (type) {\n                case 'j':\n                    return this.formatDay;\n                case 'd':\n                    return this.formatDayWithLeadingZero;\n                case 'D':\n                    return this.formatDayOfWeekTextual;\n                case 'n':\n                    return this.formatMonth;\n                case 'm':\n                    return this.formatMonthWithLeadingZero;\n                case 'F':\n                    return this.formatMonthTextual;\n                case 'Y':\n                    return this.formatYear;\n                case 'y':\n                    return this.formatYearTwoDigits;\n                default:\n                    return null;\n            }\n        };\n        DateConverter.prototype.formatDay = function(date) {\n            return date.getDate() + '';\n        };\n        DateConverter.prototype.formatDayWithLeadingZero = function(date) {\n            return ('0' + date.getDate()).slice(-2);\n        };\n        DateConverter.prototype.formatDayOfWeekTextual = function(date) {\n            return this.options.translator.translateDayOfWeek(date.getDay());\n        };\n        DateConverter.prototype.formatMonth = function(date) {\n            return date.getMonth() + 1 + '';\n        };\n        DateConverter.prototype.formatMonthWithLeadingZero = function(date) {\n            return ('0' + (date.getMonth() + 1)).slice(-2);\n        };\n        DateConverter.prototype.formatMonthTextual = function(date) {\n            return this.options.translator.translateMonth(date.getMonth());\n        };\n        DateConverter.prototype.formatYear = function(date) {\n            return date.getFullYear() + '';\n        };\n        DateConverter.prototype.formatYearTwoDigits = function(date) {\n            var year = date.getFullYear() + '';\n            return year.substring(year.length - 2);\n        };\n        DateConverter.prototype.getParser = function(type) {\n            switch (type) {\n                case 'j':\n                case 'd':\n                    return this.parseDay;\n                case 'D':\n                    return this.parseDayOfWeekTextual;\n                case 'n':\n                case 'm':\n                    return this.parseMonth;\n                case 'F':\n                    return this.parseMonthTextual;\n                case 'Y':\n                    return this.parseYear;\n                case 'y':\n                    return this.parseYearTwoDigits;\n                default:\n                    return null;\n            }\n        };\n        DateConverter.prototype.parseDay = function(text, dateData) {\n            var took = 0;\n            while (text.substring(0, 1) === '0') {\n                text = text.substring(1);\n                took++;\n            }\n            var day = text.substring(0, 2);\n            if (!/[12][0-9]|3[01]/.test(day)) {\n                day = day.substring(0, 1);\n                if (!/[1-9]/.test(day)) {\n                    throw new CannotParseDateException();\n                }\n            }\n            dateData.day = parseInt(day, 10);\n            return took + day.length;\n        };\n        DateConverter.prototype.parseDayOfWeekTextual = function(text) {\n            var maxLength = 0;\n            for (var dayOfWeek = 0; dayOfWeek < 7; dayOfWeek++) {\n                var translation = this.options.translator.translateDayOfWeek(dayOfWeek);\n                maxLength = Math.max(maxLength, translation.length);\n                if (\n                    text.substring(0, translation.length).toLowerCase() ===\n                    translation.toLowerCase()\n                ) {\n                    return translation.length;\n                }\n            }\n            var took = 0;\n            while (/[a-zA-Z]/.test(text.substring(0, 1))) {\n                text = text.substring(1);\n                took++;\n                if (took === maxLength) {\n                    break;\n                }\n            }\n            return took;\n        };\n        DateConverter.prototype.parseMonth = function(text, dateData) {\n            var took = 0;\n            while (text.substring(0, 1) === '0') {\n                text = text.substring(1);\n                took++;\n            }\n            var month = text.substring(0, 2);\n            if (month !== '10' && month !== '11' && month !== '12') {\n                month = month.substring(0, 1);\n                if (!/[1-9]/.test(month)) {\n                    throw new CannotParseDateException();\n                }\n            }\n            dateData.month = parseInt(month, 10);\n            return took + month.length;\n        };\n        DateConverter.prototype.parseMonthTextual = function(text, dateData) {\n            for (var month = 1; month <= 12; month++) {\n                var translation = this.options.translator.translateMonth(month - 1);\n                if (\n                    text.substring(0, translation.length).toLowerCase() ===\n                    translation.toLowerCase()\n                ) {\n                    dateData.month = month;\n                    return translation.length;\n                }\n            }\n            throw new CannotParseDateException();\n        };\n        DateConverter.prototype.parseYear = function(text, dateData) {\n            var isNegative = false;\n            if (text.substring(0, 1) === '-') {\n                isNegative = true;\n                text = text.substring(1);\n            }\n            var yearLength = 0;\n            while (/[0-9]/.test(text.substring(yearLength, yearLength + 1))) {\n                yearLength++;\n            }\n            if (yearLength === 0) {\n                throw new CannotParseDateException();\n            }\n            var year = parseInt(text.substring(0, yearLength), 10);\n            if (isNegative) {\n                year = -year;\n            }\n            dateData.year = year;\n            return yearLength + (isNegative ? 1 : 0);\n        };\n        DateConverter.prototype.parseYearTwoDigits = function(text, dateData) {\n            var yearEnd = text.substring(0, 2);\n            if (!/[0-9]{2}/.test(yearEnd)) {\n                throw new CannotParseDateException();\n            }\n            var currentYear = this.options.getToday().getFullYear() + '';\n            var yearBeginning = currentYear.substring(0, currentYear.length - 2);\n            dateData.year = parseInt(yearBeginning + yearEnd, 10);\n            return 2;\n        };\n        return DateConverter;\n    })();\n    TheDatepicker.DateConverter = DateConverter;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function(TheDatepicker) {\n    var InitializationPhase;\n    (function(InitializationPhase) {\n        InitializationPhase[(InitializationPhase['Untouched'] = 0)] = 'Untouched';\n        InitializationPhase[(InitializationPhase['Waiting'] = 1)] = 'Waiting';\n        InitializationPhase[(InitializationPhase['Ready'] = 2)] = 'Ready';\n        InitializationPhase[(InitializationPhase['Initialized'] = 3)] = 'Initialized';\n        InitializationPhase[(InitializationPhase['Destroyed'] = 4)] = 'Destroyed';\n    })(InitializationPhase || (InitializationPhase = {}));\n    var Datepicker = (function() {\n        function Datepicker(input, container, options) {\n            if (container === void 0) {\n                container = null;\n            }\n            if (options === void 0) {\n                options = null;\n            }\n            this.initializationPhase = InitializationPhase.Untouched;\n            this.inputListenerRemover = null;\n            this.listenerRemovers = [];\n            this.deselectElement = null;\n            if (input !== null && !TheDatepicker.Helper.isElement(input)) {\n                throw new Error('Input was expected to be null or an HTMLElement.');\n            }\n            if (container !== null && !TheDatepicker.Helper.isElement(container)) {\n                throw new Error('Container was expected to be null or an HTMLElement.');\n            }\n            if (input === null && container === null) {\n                throw new Error('At least one of input or container is mandatory.');\n            }\n            if (options !== null && !(options instanceof TheDatepicker.Options)) {\n                throw new Error('Options was expected to be an instance of Options');\n            }\n            this.document = document;\n            this.options = options !== null ? options.clone() : new TheDatepicker.Options();\n            var duplicateError = 'There is already a datepicker present on ';\n            this.isContainerExternal = container !== null;\n            if (container === null) {\n                container = this.createContainer();\n                if (input !== null) {\n                    input.parentNode.appendChild(container);\n                }\n            } else {\n                if (typeof container.datepicker !== 'undefined') {\n                    throw new Error(duplicateError + 'container.');\n                }\n            }\n            if (input !== null) {\n                if (typeof input.datepicker !== 'undefined') {\n                    throw new Error(duplicateError + 'input.');\n                }\n                input.datepicker = this;\n                input.autocomplete = 'off';\n            }\n            container.datepicker = this;\n            this.input = input;\n            this.container = container;\n            this.dateConverter = new TheDatepicker.DateConverter(this.options);\n            this.viewModel = new TheDatepicker.ViewModel(this.options, this);\n            this.triggerReady(input);\n            this.triggerReady(container);\n        }\n        Datepicker.prototype.render = function() {\n            var _this = this;\n            switch (this.initializationPhase) {\n                case InitializationPhase.Destroyed:\n                    return;\n                case InitializationPhase.Initialized:\n                    this.viewModel.render();\n                    return;\n                case InitializationPhase.Ready:\n                    this.initListeners();\n                    this.initializationPhase = InitializationPhase.Initialized;\n                    this.render();\n                    return;\n                case InitializationPhase.Waiting:\n                    if (!this.options.isHiddenOnBlur()) {\n                        this.open();\n                        return;\n                    }\n                    this.viewModel.selectPossibleDate();\n                    this.updateDeselectButton();\n                    return;\n                case InitializationPhase.Untouched:\n                    this.preselectFromInput();\n                    this.createDeselectElement();\n                    this.viewModel.selectInitialDate(null);\n                    this.updateInput();\n                    if (this.input !== null && this.options.isHiddenOnBlur()) {\n                        if (this.input === this.document.activeElement) {\n                            this.initializationPhase = InitializationPhase.Ready;\n                            this.render();\n                            this.open();\n                            return;\n                        }\n                        this.inputListenerRemover = TheDatepicker.Helper.addEventListener(\n                            this.input,\n                            TheDatepicker.ListenerType.Focus,\n                            function(event) {\n                                _this.open(event);\n                            }\n                        );\n                        this.initializationPhase = InitializationPhase.Waiting;\n                        return;\n                    }\n                    this.initializationPhase = InitializationPhase.Ready;\n                    this.render();\n            }\n        };\n        Datepicker.prototype.open = function(event) {\n            if (event === void 0) {\n                event = null;\n            }\n            if (this.initializationPhase === InitializationPhase.Untouched) {\n                this.render();\n            }\n            if (this.initializationPhase === InitializationPhase.Waiting) {\n                this.initializationPhase = InitializationPhase.Ready;\n                this.render();\n                Datepicker.hasClickedViewModel = true;\n            }\n            if (!Datepicker.activateViewModel(event, this)) {\n                return false;\n            }\n            if (this.input !== null) {\n                this.input.focus();\n            }\n            return true;\n        };\n        Datepicker.prototype.close = function(event) {\n            if (event === void 0) {\n                event = null;\n            }\n            if (!this.viewModel.isActive()) {\n                return true;\n            }\n            if (!Datepicker.activateViewModel(event, null)) {\n                return false;\n            }\n            if (this.input !== null) {\n                this.input.blur();\n            }\n            return true;\n        };\n        Datepicker.prototype.reset = function(event) {\n            if (event === void 0) {\n                event = null;\n            }\n            return this.viewModel.reset(event);\n        };\n        Datepicker.prototype.destroy = function() {\n            if (this.initializationPhase === InitializationPhase.Destroyed) {\n                return;\n            }\n            for (var index = 0; index < this.listenerRemovers.length; index++) {\n                this.listenerRemovers[index]();\n            }\n            this.listenerRemovers = [];\n            if (this.isContainerExternal) {\n                this.container.innerHTML = '';\n            } else {\n                this.container.parentNode.removeChild(this.container);\n            }\n            this.container.datepicker = null;\n            if (this.input !== null) {\n                this.input.datepicker = null;\n                this.removeInitialInputListener();\n                this.input = null;\n            }\n            if (this.deselectElement !== null) {\n                this.deselectElement.parentNode.removeChild(this.deselectElement);\n                this.deselectElement = null;\n            }\n            this.initializationPhase = InitializationPhase.Destroyed;\n        };\n        Datepicker.prototype.selectDate = function(date, doUpdateMonth, event) {\n            if (doUpdateMonth === void 0) {\n                doUpdateMonth = true;\n            }\n            if (event === void 0) {\n                event = null;\n            }\n            return this.viewModel.selectDay(\n                event,\n                TheDatepicker.Helper.normalizeDate('Date', date, this.options),\n                doUpdateMonth\n            );\n        };\n        Datepicker.prototype.getSelectedDate = function() {\n            return this.viewModel.selectedDate !== null\n                ? new Date(this.viewModel.selectedDate.getTime())\n                : null;\n        };\n        Datepicker.prototype.getCurrentMonth = function() {\n            return this.viewModel.getCurrentMonth();\n        };\n        Datepicker.prototype.goToMonth = function(month, event) {\n            if (event === void 0) {\n                event = null;\n            }\n            return this.viewModel.goToMonth(\n                event,\n                TheDatepicker.Helper.normalizeDate('Month', month, this.options)\n            );\n        };\n        Datepicker.prototype.parseRawInput = function() {\n            return this.dateConverter.parseDate(this.options.getInputFormat(), this.input.value);\n        };\n        Datepicker.prototype.readInput = function(event) {\n            if (event === void 0) {\n                event = null;\n            }\n            if (this.input === null) {\n                return false;\n            }\n            try {\n                var date = this.parseRawInput();\n                if (date !== null) {\n                    return this.viewModel.selectNearestDate(event, date);\n                }\n                return this.viewModel.cancelSelection(event);\n            } catch (error) {\n                if (!(error instanceof TheDatepicker.CannotParseDateException)) {\n                    throw error;\n                }\n                return false;\n            }\n        };\n        Datepicker.prototype.updateInput = function() {\n            if (this.input === null || this.input === this.document.activeElement) {\n                return;\n            }\n            this.input.value =\n                this.viewModel.selectedDate !== null\n                    ? this.dateConverter.formatDate(\n                          this.options.getInputFormat(),\n                          this.viewModel.selectedDate\n                      )\n                    : '';\n            this.updateDeselectButton();\n        };\n        Datepicker.onDatepickerReady = function(element, callback) {\n            if (callback === void 0) {\n                callback = null;\n            }\n            var promise = null;\n            var promiseResolve = null;\n            if (typeof Promise !== 'undefined') {\n                promise = new Promise(function(resolve) {\n                    promiseResolve = resolve;\n                });\n            }\n            if (\n                typeof element.datepicker !== 'undefined' &&\n                element.datepicker instanceof Datepicker\n            ) {\n                element.datepicker.triggerReadyListener(callback, element);\n                if (promiseResolve !== null) {\n                    promiseResolve(element.datepicker);\n                }\n            } else {\n                Datepicker.readyListeners.push({\n                    promiseResolve: promiseResolve,\n                    element: element,\n                    callback: callback,\n                });\n            }\n            return promise;\n        };\n        Datepicker.prototype.createContainer = function() {\n            var container = this.document.createElement('div');\n            container.className = this.options.getClassesPrefix() + 'container';\n            return container;\n        };\n        Datepicker.prototype.createDeselectElement = function() {\n            var _this = this;\n            if (this.input === null || !this.options.isDeselectButtonShown()) {\n                return null;\n            }\n            var deselectElement = this.document.createElement('span');\n            deselectElement.style.position = 'absolute';\n            var deselectButton = this.document.createElement('a');\n            deselectButton.innerHTML = this.options.getDeselectHtml();\n            deselectButton.style.position = 'relative';\n            deselectButton.href = '#';\n            deselectButton.onclick = function(event) {\n                event = event || window.event;\n                TheDatepicker.Helper.preventDefault(event);\n                _this.viewModel.cancelSelection(event);\n            };\n            deselectElement.className = this.options.getClassesPrefix() + 'deselect';\n            deselectButton.className = this.options.getClassesPrefix() + 'deselect-button';\n            deselectElement.appendChild(deselectButton);\n            this.input.parentNode.appendChild(deselectElement);\n            this.deselectElement = deselectElement;\n        };\n        Datepicker.prototype.updateDeselectButton = function() {\n            if (this.input !== null && this.deselectElement !== null) {\n                var isVisible = this.options.isDeselectButtonShown() && this.input.value !== '';\n                this.deselectElement.style.visibility = isVisible ? 'visible' : 'hidden';\n            }\n        };\n        Datepicker.prototype.preselectFromInput = function() {\n            if (this.input !== null) {\n                try {\n                    var date = this.parseRawInput();\n                    if (date !== null) {\n                        this.options.setInitialDate(date);\n                    }\n                } catch (error) {\n                    if (!(error instanceof TheDatepicker.CannotParseDateException)) {\n                        throw error;\n                    }\n                }\n            }\n        };\n        Datepicker.prototype.initListeners = function() {\n            var _this = this;\n            if (!Datepicker.areGlobalListenersInitialized) {\n                var activeViewModel = null;\n                var checkMiss = function(event) {\n                    if (Datepicker.hasClickedViewModel) {\n                        Datepicker.hasClickedViewModel = false;\n                    } else {\n                        Datepicker.activateViewModel(event, null);\n                    }\n                };\n                TheDatepicker.Helper.addEventListener(\n                    this.document,\n                    TheDatepicker.ListenerType.MouseDown,\n                    checkMiss\n                );\n                TheDatepicker.Helper.addEventListener(\n                    this.document,\n                    TheDatepicker.ListenerType.FocusIn,\n                    checkMiss\n                );\n                TheDatepicker.Helper.addEventListener(\n                    this.document,\n                    TheDatepicker.ListenerType.KeyDown,\n                    function(event) {\n                        if (Datepicker.activeViewModel !== null) {\n                            Datepicker.activeViewModel.triggerKeyPress(event);\n                        }\n                    }\n                );\n                Datepicker.areGlobalListenersInitialized = true;\n            }\n            this.removeInitialInputListener();\n            var hit = function(event) {\n                Datepicker.activateViewModel(event, _this);\n                Datepicker.hasClickedViewModel = true;\n            };\n            this.listenerRemovers.push(\n                TheDatepicker.Helper.addEventListener(\n                    this.container,\n                    TheDatepicker.ListenerType.MouseDown,\n                    hit\n                )\n            );\n            this.listenerRemovers.push(\n                TheDatepicker.Helper.addEventListener(\n                    this.container,\n                    TheDatepicker.ListenerType.FocusIn,\n                    hit\n                )\n            );\n            if (this.deselectElement !== null) {\n                this.listenerRemovers.push(\n                    TheDatepicker.Helper.addEventListener(\n                        this.deselectElement,\n                        TheDatepicker.ListenerType.MouseDown,\n                        hit\n                    )\n                );\n                this.listenerRemovers.push(\n                    TheDatepicker.Helper.addEventListener(\n                        this.deselectElement,\n                        TheDatepicker.ListenerType.FocusIn,\n                        hit\n                    )\n                );\n            }\n            if (this.input !== null) {\n                this.listenerRemovers.push(\n                    TheDatepicker.Helper.addEventListener(\n                        this.input,\n                        TheDatepicker.ListenerType.MouseDown,\n                        hit\n                    )\n                );\n                this.listenerRemovers.push(\n                    TheDatepicker.Helper.addEventListener(\n                        this.input,\n                        TheDatepicker.ListenerType.Focus,\n                        hit\n                    )\n                );\n                this.listenerRemovers.push(\n                    TheDatepicker.Helper.addEventListener(\n                        this.input,\n                        TheDatepicker.ListenerType.Blur,\n                        function() {\n                            _this.updateInput();\n                        }\n                    )\n                );\n                this.listenerRemovers.push(\n                    TheDatepicker.Helper.addEventListener(\n                        this.input,\n                        TheDatepicker.ListenerType.KeyDown,\n                        function(event) {\n                            TheDatepicker.Helper.stopPropagation(event);\n                        }\n                    )\n                );\n                this.listenerRemovers.push(\n                    TheDatepicker.Helper.addEventListener(\n                        this.input,\n                        TheDatepicker.ListenerType.KeyUp,\n                        function(event) {\n                            _this.readInput(event);\n                        }\n                    )\n                );\n            }\n        };\n        Datepicker.prototype.removeInitialInputListener = function() {\n            if (this.inputListenerRemover !== null) {\n                this.inputListenerRemover();\n                this.inputListenerRemover = null;\n            }\n        };\n        Datepicker.prototype.triggerReady = function(element) {\n            for (var index = Datepicker.readyListeners.length - 1; index >= 0; index--) {\n                var listener = Datepicker.readyListeners[index];\n                if (listener.element === element) {\n                    this.triggerReadyListener(listener.callback, element);\n                    if (listener.promiseResolve !== null) {\n                        listener.promiseResolve(this);\n                    }\n                    Datepicker.readyListeners.splice(index, 1);\n                }\n            }\n        };\n        Datepicker.prototype.triggerReadyListener = function(callback, element) {\n            if (callback !== null) {\n                callback.call(element, this, element);\n            }\n        };\n        Datepicker.prototype.fixPosition = function() {\n            if (this.isContainerExternal || !this.options.isPositionFixingEnabled()) {\n                return;\n            }\n            var windowTop = window.pageYOffset || this.document.documentElement.scrollTop;\n            var windowHeight =\n                window.innerHeight ||\n                Math.max(\n                    this.document.documentElement.clientHeight,\n                    this.document.body.clientHeight\n                );\n            var windowBottom = windowTop + windowHeight;\n            var inputTop = 0;\n            var parentElement = this.input;\n            while (\n                parentElement !== null &&\n                !isNaN(parentElement.offsetLeft) &&\n                !isNaN(parentElement.offsetTop)\n            ) {\n                inputTop += parentElement.offsetTop - parentElement.scrollTop;\n                parentElement = parentElement.offsetParent;\n            }\n            var inputBottom = inputTop + this.input.offsetHeight;\n            var containerHeight = this.container.offsetHeight;\n            var locationClass = '';\n            var locateOver =\n                inputTop - windowTop > containerHeight &&\n                windowBottom - inputBottom < containerHeight;\n            if (locateOver) {\n                locationClass = ' ' + this.options.getClassesPrefix() + 'container--over';\n            }\n            this.container.className =\n                this.options.getClassesPrefix() + 'container' + locationClass;\n            var childNodes = this.container.childNodes;\n            if (childNodes.length > 0) {\n                var child = childNodes[0];\n                if (locateOver) {\n                    var move = this.input.offsetHeight + this.container.offsetHeight;\n                    child.style.position = 'relative';\n                    child.style.top = '-' + move + 'px';\n                } else {\n                    child.style.position = '';\n                    child.style.top = '';\n                }\n            }\n        };\n        Datepicker.activateViewModel = function(event, datepicker) {\n            var viewModel = datepicker !== null ? datepicker.viewModel : null;\n            var activeViewModel = Datepicker.activeViewModel;\n            if (activeViewModel === viewModel) {\n                return true;\n            }\n            if (activeViewModel !== null && !activeViewModel.setActive(event, false)) {\n                return false;\n            }\n            if (Datepicker.activeViewModel !== activeViewModel) {\n                return true;\n            }\n            if (viewModel === null) {\n                Datepicker.activeViewModel = null;\n                return true;\n            }\n            if (!viewModel.setActive(event, true)) {\n                return false;\n            }\n            if (Datepicker.activeViewModel !== activeViewModel) {\n                return true;\n            }\n            datepicker.fixPosition();\n            Datepicker.activeViewModel = viewModel;\n            return true;\n        };\n        Datepicker.readyListeners = [];\n        Datepicker.areGlobalListenersInitialized = false;\n        Datepicker.activeViewModel = null;\n        Datepicker.hasClickedViewModel = false;\n        return Datepicker;\n    })();\n    TheDatepicker.Datepicker = Datepicker;\n    TheDatepicker.onDatepickerReady = Datepicker.onDatepickerReady;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function(TheDatepicker) {\n    var Day = (function() {\n        function Day(date) {\n            this.isToday = false;\n            this.isPast = false;\n            this.isAvailable = true;\n            this.isInValidity = true;\n            this.isVisible = true;\n            this.isInCurrentMonth = true;\n            this.isSelected = false;\n            this.isHighlighted = false;\n            this.isFocused = false;\n            this.dayNumber = date.getDate();\n            this.month = date.getMonth() + 1;\n            this.year = date.getFullYear();\n            this.dayOfWeek = date.getDay();\n            this.isWeekend =\n                this.dayOfWeek === TheDatepicker.DayOfWeek.Saturday ||\n                this.dayOfWeek === TheDatepicker.DayOfWeek.Sunday;\n        }\n        Day.prototype.getDate = function() {\n            return new Date(this.year, this.month - 1, this.dayNumber, 0, 0, 0, 0);\n        };\n        Day.prototype.getFormatted = function() {\n            return (\n                this.year +\n                '-' +\n                ('0' + this.month).slice(-2) +\n                '-' +\n                ('0' + this.dayNumber).slice(-2)\n            );\n        };\n        Day.prototype.isEqualToDate = function(date) {\n            return (\n                date !== null &&\n                this.dayNumber === date.getDate() &&\n                this.month === date.getMonth() + 1 &&\n                this.year === date.getFullYear()\n            );\n        };\n        Day.prototype.isEqualToDay = function(day) {\n            return (\n                day !== null &&\n                this.dayNumber === day.dayNumber &&\n                this.month === day.month &&\n                this.year === day.year\n            );\n        };\n        return Day;\n    })();\n    TheDatepicker.Day = Day;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function(TheDatepicker) {\n    var DayOfWeek;\n    (function(DayOfWeek) {\n        DayOfWeek[(DayOfWeek['Monday'] = 1)] = 'Monday';\n        DayOfWeek[(DayOfWeek['Tuesday'] = 2)] = 'Tuesday';\n        DayOfWeek[(DayOfWeek['Wednesday'] = 3)] = 'Wednesday';\n        DayOfWeek[(DayOfWeek['Thursday'] = 4)] = 'Thursday';\n        DayOfWeek[(DayOfWeek['Friday'] = 5)] = 'Friday';\n        DayOfWeek[(DayOfWeek['Saturday'] = 6)] = 'Saturday';\n        DayOfWeek[(DayOfWeek['Sunday'] = 0)] = 'Sunday';\n    })((DayOfWeek = TheDatepicker.DayOfWeek || (TheDatepicker.DayOfWeek = {})));\n    var Month;\n    (function(Month) {\n        Month[(Month['January'] = 0)] = 'January';\n        Month[(Month['February'] = 1)] = 'February';\n        Month[(Month['March'] = 2)] = 'March';\n        Month[(Month['April'] = 3)] = 'April';\n        Month[(Month['May'] = 4)] = 'May';\n        Month[(Month['June'] = 5)] = 'June';\n        Month[(Month['July'] = 6)] = 'July';\n        Month[(Month['August'] = 7)] = 'August';\n        Month[(Month['September'] = 8)] = 'September';\n        Month[(Month['October'] = 9)] = 'October';\n        Month[(Month['November'] = 10)] = 'November';\n        Month[(Month['December'] = 11)] = 'December';\n    })((Month = TheDatepicker.Month || (TheDatepicker.Month = {})));\n    var KeyCode;\n    (function(KeyCode) {\n        KeyCode[(KeyCode['Enter'] = 13)] = 'Enter';\n        KeyCode[(KeyCode['Space'] = 32)] = 'Space';\n        KeyCode[(KeyCode['Left'] = 37)] = 'Left';\n        KeyCode[(KeyCode['Up'] = 38)] = 'Up';\n        KeyCode[(KeyCode['Right'] = 39)] = 'Right';\n        KeyCode[(KeyCode['Down'] = 40)] = 'Down';\n    })((KeyCode = TheDatepicker.KeyCode || (TheDatepicker.KeyCode = {})));\n    var ListenerType;\n    (function(ListenerType) {\n        ListenerType['MouseDown'] = 'mousedown';\n        ListenerType['Focus'] = 'focus';\n        ListenerType['FocusIn'] = 'focusin';\n        ListenerType['Blur'] = 'blur';\n        ListenerType['KeyDown'] = 'keydown';\n        ListenerType['KeyUp'] = 'keyup';\n    })((ListenerType = TheDatepicker.ListenerType || (TheDatepicker.ListenerType = {})));\n    var Helper = (function() {\n        function Helper() {}\n        Helper.resetTime = function(date) {\n            if (date === null) {\n                return null;\n            }\n            date.setHours(0);\n            date.setMinutes(0);\n            date.setSeconds(0);\n            date.setMilliseconds(0);\n            return date;\n        };\n        Helper.normalizeDate = function(parameterName, value, options) {\n            if (!value) {\n                return null;\n            }\n            if (value instanceof TheDatepicker.Day) {\n                return value.getDate();\n            }\n            if (typeof value === 'string') {\n                if (value === 'today' || value === 'now') {\n                    return options.getToday();\n                }\n                if (value === 'tomorrow') {\n                    var date_1 = options.getToday();\n                    date_1.setDate(date_1.getDate() + 1);\n                    return date_1;\n                }\n                if (value === 'yesterday') {\n                    var date_2 = options.getToday();\n                    date_2.setDate(date_2.getDate() - 1);\n                    return date_2;\n                }\n                var matches = value.match(/^\\s*([+-]?)\\s*([0-9]+)\\s*(day|month|year)s?\\s*$/i);\n                if (matches !== null) {\n                    var date_3 = options.getToday();\n                    var amount = parseInt(matches[2], 10) * (matches[1] === '-' ? -1 : 1);\n                    switch (matches[3].toLowerCase()) {\n                        case 'day':\n                        case 'days':\n                            date_3.setDate(date_3.getDate() + amount);\n                            break;\n                        case 'month':\n                        case 'months':\n                            date_3.setMonth(date_3.getMonth() + amount);\n                            break;\n                        case 'year':\n                        case 'years':\n                            date_3.setFullYear(date_3.getFullYear() + amount);\n                            break;\n                    }\n                    return date_3;\n                }\n                var date = new Date(value);\n                if (!isNaN(date.getTime())) {\n                    return Helper.resetTime(date);\n                }\n            } else if (Helper.isValidDate(value)) {\n                return Helper.resetTime(new Date(value.getTime()));\n            }\n            throw new Error(\n                parameterName +\n                    ' was expected to be a valid Date string or valid Date or Day or null.'\n            );\n        };\n        Helper.normalizeMonth = function(date) {\n            if (date === null) {\n                return null;\n            }\n            var month = new Date(date.getTime());\n            month.setDate(1);\n            return month;\n        };\n        Helper.isElement = function(element) {\n            return (\n                typeof element === 'object' &&\n                element.nodeType === 1 &&\n                typeof element.style === 'object' &&\n                typeof element.ownerDocument === 'object'\n            );\n        };\n        Helper.isValidDate = function(value) {\n            return (\n                typeof value === 'object' &&\n                Object.prototype.toString.call(value) === '[object Date]' &&\n                !isNaN(value.getTime())\n            );\n        };\n        Helper.inArray = function(list, item) {\n            for (var index = 0; index < list.length; index++) {\n                if (list[index] === item) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        Helper.addEventListener = function(element, listenerType, listener) {\n            if (element.addEventListener) {\n                element.addEventListener(listenerType, listener);\n                return function() {\n                    element.removeEventListener(listenerType, listener);\n                };\n            }\n            var listenerProperty = 'on' + listenerType;\n            var originalListener = element[listenerProperty] || null;\n            element[listenerProperty] = function(event) {\n                event = event || window.event;\n                if (originalListener !== null) {\n                    originalListener.call(element, event);\n                }\n                listener(event);\n            };\n            return function() {\n                element[listenerProperty] = originalListener;\n            };\n        };\n        Helper.preventDefault = function(event) {\n            if (event.preventDefault) {\n                event.preventDefault();\n            } else {\n                event.returnValue = false;\n            }\n        };\n        Helper.stopPropagation = function(event) {\n            if (event.stopPropagation) {\n                event.stopPropagation();\n            } else {\n                event.cancelBubble = true;\n            }\n        };\n        Helper.checkString = function(parameterName, value, checkNonEmpty) {\n            if (checkNonEmpty === void 0) {\n                checkNonEmpty = false;\n            }\n            if (!checkNonEmpty && !value) {\n                return '';\n            }\n            if (typeof value !== 'string' || (checkNonEmpty && value === '')) {\n                throw new Error(\n                    parameterName +\n                        ' was expected to be a' +\n                        (checkNonEmpty ? ' non empty' : '') +\n                        ' string.'\n                );\n            }\n            return value;\n        };\n        Helper.checkNumber = function(parameterName, value, min, max) {\n            if (min === void 0) {\n                min = null;\n            }\n            if (max === void 0) {\n                max = null;\n            }\n            value = typeof value === 'string' ? parseInt(value) : value;\n            if (\n                typeof value !== 'number' ||\n                isNaN(value) ||\n                (min !== null && value < min) ||\n                (max !== null && value > max)\n            ) {\n                throw new Error(\n                    parameterName +\n                        ' was expected to be a valid number' +\n                        (min !== null ? ' from ' + min : '') +\n                        (max !== null ? ' to ' + max : '') +\n                        '.'\n                );\n            }\n            return value;\n        };\n        Helper.checkFunction = function(parameterName, value, isNullable) {\n            if (isNullable === void 0) {\n                isNullable = true;\n            }\n            if (isNullable && !value) {\n                return null;\n            }\n            if (typeof value !== 'function') {\n                throw new Error(\n                    parameterName +\n                        ' was expected to be a function' +\n                        (isNullable ? ' or null' : '') +\n                        '.'\n                );\n            }\n            return value;\n        };\n        return Helper;\n    })();\n    TheDatepicker.Helper = Helper;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function(TheDatepicker) {\n    var HtmlHelper = (function() {\n        function HtmlHelper(options) {\n            this.options = options;\n            this.document = document;\n        }\n        HtmlHelper.prototype.createDiv = function(className) {\n            var div = this.document.createElement('div');\n            this.addClass(div, className);\n            return div;\n        };\n        HtmlHelper.prototype.createAnchor = function(onClick) {\n            var anchor = this.document.createElement('a');\n            this.addClass(anchor, 'button');\n            anchor.href = '#';\n            anchor.onclick = function(event) {\n                event = event || window.event;\n                TheDatepicker.Helper.preventDefault(event);\n                onClick(event);\n            };\n            anchor.onkeydown = function(event) {\n                event = event || window.event;\n                if (\n                    TheDatepicker.Helper.inArray(\n                        [TheDatepicker.KeyCode.Enter, TheDatepicker.KeyCode.Space],\n                        event.keyCode\n                    )\n                ) {\n                    TheDatepicker.Helper.preventDefault(event);\n                    onClick(event);\n                }\n            };\n            return anchor;\n        };\n        HtmlHelper.prototype.createSpan = function() {\n            return this.document.createElement('span');\n        };\n        HtmlHelper.prototype.createTable = function(className, header, body) {\n            var table = this.document.createElement('table');\n            this.addClass(table, className);\n            table.appendChild(header);\n            table.appendChild(body);\n            return table;\n        };\n        HtmlHelper.prototype.createTableHeader = function(className, cells) {\n            var tableHeader = this.document.createElement('thead');\n            this.addClass(tableHeader, className);\n            var row = this.document.createElement('tr');\n            for (var index = 0; index < cells.length; index++) {\n                row.appendChild(cells[index]);\n            }\n            tableHeader.appendChild(row);\n            return tableHeader;\n        };\n        HtmlHelper.prototype.createTableHeaderCell = function(className) {\n            var cell = this.document.createElement('th');\n            cell.scope = 'col';\n            this.addClass(cell, className);\n            return cell;\n        };\n        HtmlHelper.prototype.createTableBody = function(className, rows) {\n            var tableBody = this.document.createElement('tbody');\n            this.addClass(tableBody, className);\n            for (var index = 0; index < rows.length; index++) {\n                tableBody.appendChild(rows[index]);\n            }\n            return tableBody;\n        };\n        HtmlHelper.prototype.createTableRow = function(className, cells) {\n            var row = this.document.createElement('tr');\n            for (var index = 0; index < cells.length; index++) {\n                row.appendChild(cells[index]);\n            }\n            return row;\n        };\n        HtmlHelper.prototype.createTableCell = function() {\n            return this.document.createElement('td');\n        };\n        HtmlHelper.prototype.createSelectInput = function(options, onChange) {\n            var input = this.document.createElement('select');\n            this.addClass(input, 'select');\n            for (var index = 0; index < options.length; index++) {\n                input.appendChild(\n                    this.createSelectOption(options[index].value, options[index].label)\n                );\n            }\n            input.onchange = function(event) {\n                onChange(event || window.event, input.value);\n            };\n            input.onkeydown = function(event) {\n                event = event || window.event;\n                TheDatepicker.Helper.stopPropagation(event);\n            };\n            return input;\n        };\n        HtmlHelper.prototype.createSelectOption = function(value, label) {\n            var option = this.document.createElement('option');\n            option.value = value;\n            option.innerText = label;\n            return option;\n        };\n        HtmlHelper.prototype.addClass = function(element, className) {\n            className = this.options.getClassesPrefix() + className;\n            if (element.className !== '') {\n                className = ' ' + className;\n            }\n            element.className += className;\n        };\n        return HtmlHelper;\n    })();\n    TheDatepicker.HtmlHelper = HtmlHelper;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function(TheDatepicker) {\n    var EventType;\n    (function(EventType) {\n        EventType['BeforeSelect'] = 'beforeSelect';\n        EventType['Select'] = 'select';\n        EventType['BeforeOpenAndClose'] = 'beforeOpenAndClose';\n        EventType['OpenAndClose'] = 'openAndClose';\n        EventType['MonthChange'] = 'monthChange';\n        EventType['BeforeMonthChange'] = 'beforeMonthChange';\n    })((EventType = TheDatepicker.EventType || (TheDatepicker.EventType = {})));\n    var AvailableDateNotFoundException = (function() {\n        function AvailableDateNotFoundException() {}\n        return AvailableDateNotFoundException;\n    })();\n    TheDatepicker.AvailableDateNotFoundException = AvailableDateNotFoundException;\n    var Options = (function() {\n        function Options(translator) {\n            if (translator === void 0) {\n                translator = null;\n            }\n            this.hideOnBlur = true;\n            this.hideOnSelect = true;\n            this.minDate = null;\n            this.maxDate = null;\n            this.minMonth = null;\n            this.maxMonth = null;\n            this.initialDate = null;\n            this.initialMonth = null;\n            this.initialDatePriority = true;\n            this.firstDayOfWeek = TheDatepicker.DayOfWeek.Monday;\n            this.dateAvailabilityResolver = null;\n            this.cellContentResolver = null;\n            this.cellContentStructureResolver = null;\n            this.cellClassesResolver = null;\n            this.inputFormat = 'j. n. Y';\n            this.daysOutOfMonthVisible = false;\n            this.fixedRowsCount = false;\n            this.toggleSelection = false;\n            this.allowEmpty = true;\n            this.showDeselectButton = true;\n            this.showResetButton = false;\n            this.monthAsDropdown = true;\n            this.yearAsDropdown = true;\n            this.monthAndYearSeparated = true;\n            this.classesPrefix = 'c-datepicker__';\n            this.showCloseButton = true;\n            this.title = '';\n            this.dropdownItemsLimit = 200;\n            this.goBackHtml = '&lt;';\n            this.goForwardHtml = '&gt;';\n            this.closeHtml = '&times;';\n            this.resetHtml = '&olarr;';\n            this.deselectHtml = '&times;';\n            this.positionFixing = true;\n            this.today = null;\n            this.listeners = {\n                beforeSelect: [],\n                select: [],\n                beforeOpenAndClose: [],\n                openAndClose: [],\n                monthChange: [],\n                beforeMonthChange: [],\n            };\n            this.translator = translator !== null ? translator : new TheDatepicker.Translator();\n            this.document = document;\n        }\n        Options.prototype.clone = function() {\n            var options = new Options(this.translator);\n            options.hideOnBlur = this.hideOnBlur;\n            options.hideOnSelect = this.hideOnSelect;\n            options.minDate = this.minDate;\n            options.maxDate = this.maxDate;\n            options.minMonth = this.minMonth;\n            options.maxMonth = this.maxMonth;\n            options.initialDate = this.initialDate;\n            options.initialMonth = this.initialMonth;\n            options.initialDatePriority = this.initialDatePriority;\n            options.firstDayOfWeek = this.firstDayOfWeek;\n            options.dateAvailabilityResolver = this.dateAvailabilityResolver;\n            options.cellContentResolver = this.cellContentResolver;\n            options.cellContentStructureResolver = this.cellContentStructureResolver;\n            options.cellClassesResolver = this.cellClassesResolver;\n            options.inputFormat = this.inputFormat;\n            options.daysOutOfMonthVisible = this.daysOutOfMonthVisible;\n            options.fixedRowsCount = this.fixedRowsCount;\n            options.toggleSelection = this.toggleSelection;\n            options.allowEmpty = this.allowEmpty;\n            options.showDeselectButton = this.showDeselectButton;\n            options.showResetButton = this.showResetButton;\n            options.monthAsDropdown = this.monthAsDropdown;\n            options.yearAsDropdown = this.yearAsDropdown;\n            options.monthAndYearSeparated = this.monthAndYearSeparated;\n            options.classesPrefix = this.classesPrefix;\n            options.showCloseButton = this.showCloseButton;\n            options.title = this.title;\n            options.dropdownItemsLimit = this.dropdownItemsLimit;\n            options.goBackHtml = this.goBackHtml;\n            options.goForwardHtml = this.goForwardHtml;\n            options.closeHtml = this.closeHtml;\n            options.resetHtml = this.resetHtml;\n            options.deselectHtml = this.deselectHtml;\n            options.positionFixing = this.positionFixing;\n            options.listeners.beforeSelect = this.listeners.beforeSelect.slice(0);\n            options.listeners.select = this.listeners.select.slice(0);\n            options.listeners.beforeOpenAndClose = this.listeners.beforeOpenAndClose.slice(0);\n            options.listeners.openAndClose = this.listeners.openAndClose.slice(0);\n            options.listeners.monthChange = this.listeners.monthChange.slice(0);\n            options.listeners.beforeMonthChange = this.listeners.beforeMonthChange.slice(0);\n            return options;\n        };\n        Options.prototype.setHideOnBlur = function(value) {\n            this.hideOnBlur = !!value;\n        };\n        Options.prototype.setHideOnSelect = function(value) {\n            this.hideOnSelect = !!value;\n        };\n        Options.prototype.setMinDate = function(date) {\n            var normalizedDate = TheDatepicker.Helper.normalizeDate('Min date', date, this);\n            this.checkConstraints(normalizedDate, this.maxDate);\n            this.minDate = normalizedDate;\n            this.minMonth = TheDatepicker.Helper.normalizeMonth(normalizedDate);\n        };\n        Options.prototype.setMaxDate = function(date) {\n            var normalizedDate = TheDatepicker.Helper.normalizeDate('Max date', date, this);\n            this.checkConstraints(this.minDate, normalizedDate);\n            this.maxDate = normalizedDate;\n            this.maxMonth = TheDatepicker.Helper.normalizeMonth(normalizedDate);\n        };\n        Options.prototype.setInitialMonth = function(month) {\n            this.initialMonth = TheDatepicker.Helper.normalizeDate('Initial month', month, this);\n        };\n        Options.prototype.setInitialDate = function(value) {\n            this.initialDate = TheDatepicker.Helper.normalizeDate('Initial date', value, this);\n        };\n        Options.prototype.setInitialDatePriority = function(value) {\n            this.initialDatePriority = !!value;\n        };\n        Options.prototype.setFirstDayOfWeek = function(dayOfWeek) {\n            this.firstDayOfWeek = TheDatepicker.Helper.checkNumber(\n                'First day of week',\n                dayOfWeek,\n                0,\n                6\n            );\n        };\n        Options.prototype.setDateAvailabilityResolver = function(resolver) {\n            this.dateAvailabilityResolver = TheDatepicker.Helper.checkFunction(\n                'Resolver',\n                resolver\n            );\n        };\n        Options.prototype.setCellContentResolver = function(resolver) {\n            this.cellContentResolver = TheDatepicker.Helper.checkFunction('Resolver', resolver);\n        };\n        Options.prototype.setCellContentStructureResolver = function(init, update) {\n            if (update === void 0) {\n                update = null;\n            }\n            init = TheDatepicker.Helper.checkFunction('Resolver (init)', init);\n            update = TheDatepicker.Helper.checkFunction('Resolver (update)', update);\n            this.cellContentStructureResolver =\n                init === null\n                    ? null\n                    : {\n                          init: init,\n                          update: update,\n                      };\n        };\n        Options.prototype.setCellClassesResolver = function(resolver) {\n            this.cellClassesResolver = TheDatepicker.Helper.checkFunction('Resolver', resolver);\n        };\n        Options.prototype.setInputFormat = function(format) {\n            this.inputFormat = TheDatepicker.Helper.checkString('Input format', format, true);\n        };\n        Options.prototype.setDaysOutOfMonthVisible = function(value) {\n            this.daysOutOfMonthVisible = !!value;\n        };\n        Options.prototype.setFixedRowsCount = function(value) {\n            this.fixedRowsCount = !!value;\n        };\n        Options.prototype.setToggleSelection = function(value) {\n            this.toggleSelection = !!value;\n        };\n        Options.prototype.setShowDeselectButton = function(value) {\n            this.showDeselectButton = !!value;\n        };\n        Options.prototype.setAllowEmpty = function(value) {\n            this.allowEmpty = !!value;\n        };\n        Options.prototype.setShowResetButton = function(value) {\n            this.showResetButton = !!value;\n        };\n        Options.prototype.setMonthAsDropdown = function(value) {\n            this.monthAsDropdown = !!value;\n        };\n        Options.prototype.setYearAsDropdown = function(value) {\n            this.yearAsDropdown = !!value;\n        };\n        Options.prototype.setMonthAndYearSeparated = function(value) {\n            this.monthAndYearSeparated = !!value;\n        };\n        Options.prototype.setClassesPrefix = function(prefix) {\n            this.classesPrefix = TheDatepicker.Helper.checkString('Prefix', prefix);\n        };\n        Options.prototype.setShowCloseButton = function(value) {\n            this.showCloseButton = !!value;\n        };\n        Options.prototype.setTitle = function(title) {\n            this.title = TheDatepicker.Helper.checkString('Title', title);\n        };\n        Options.prototype.setDropdownItemsLimit = function(limit) {\n            this.dropdownItemsLimit = TheDatepicker.Helper.checkNumber('Items limit', limit, 1);\n        };\n        Options.prototype.setGoBackHtml = function(html) {\n            this.goBackHtml = TheDatepicker.Helper.checkString('Html', html);\n        };\n        Options.prototype.setGoForwardHtml = function(html) {\n            this.goForwardHtml = TheDatepicker.Helper.checkString('Html', html);\n        };\n        Options.prototype.setCloseHtml = function(html) {\n            this.closeHtml = TheDatepicker.Helper.checkString('Html', html);\n        };\n        Options.prototype.setResetHtml = function(html) {\n            this.resetHtml = TheDatepicker.Helper.checkString('Html', html);\n        };\n        Options.prototype.setDeselectHtml = function(html) {\n            this.deselectHtml = TheDatepicker.Helper.checkString('Html', html);\n        };\n        Options.prototype.setPositionFixing = function(value) {\n            this.positionFixing = !!value;\n        };\n        Options.prototype.setToday = function(date) {\n            this.today = TheDatepicker.Helper.normalizeDate('Today', date, this);\n        };\n        Options.prototype.onBeforeSelect = function(listener) {\n            this.onEventListener(EventType.BeforeSelect, listener);\n        };\n        Options.prototype.offBeforeSelect = function(listener) {\n            if (listener === void 0) {\n                listener = null;\n            }\n            this.offEventListener(EventType.BeforeSelect, listener);\n        };\n        Options.prototype.onSelect = function(listener) {\n            this.onEventListener(EventType.Select, listener);\n        };\n        Options.prototype.offSelect = function(listener) {\n            if (listener === void 0) {\n                listener = null;\n            }\n            this.offEventListener(EventType.Select, listener);\n        };\n        Options.prototype.onBeforeOpenAndClose = function(listener) {\n            this.onEventListener(EventType.BeforeOpenAndClose, listener);\n        };\n        Options.prototype.offBeforeOpenAndClose = function(listener) {\n            if (listener === void 0) {\n                listener = null;\n            }\n            this.offEventListener(EventType.BeforeOpenAndClose, listener);\n        };\n        Options.prototype.onOpenAndClose = function(listener) {\n            this.onEventListener(EventType.OpenAndClose, listener);\n        };\n        Options.prototype.offOpenAndClose = function(listener) {\n            if (listener === void 0) {\n                listener = null;\n            }\n            this.offEventListener(EventType.OpenAndClose, listener);\n        };\n        Options.prototype.onBeforeMonthChange = function(listener) {\n            this.onEventListener(EventType.BeforeMonthChange, listener);\n        };\n        Options.prototype.offBeforeMonthChange = function(listener) {\n            if (listener === void 0) {\n                listener = null;\n            }\n            this.offEventListener(EventType.BeforeMonthChange, listener);\n        };\n        Options.prototype.onMonthChange = function(listener) {\n            this.onEventListener(EventType.MonthChange, listener);\n        };\n        Options.prototype.offMonthChange = function(listener) {\n            if (listener === void 0) {\n                listener = null;\n            }\n            this.offEventListener(EventType.MonthChange, listener);\n        };\n        Options.prototype.getInitialMonth = function() {\n            var primarySource = this.initialDatePriority ? this.initialDate : this.initialMonth;\n            var secondarySource = this.initialDatePriority ? this.initialMonth : this.initialDate;\n            var initialMonth =\n                primarySource !== null\n                    ? new Date(primarySource.getTime())\n                    : secondarySource !== null\n                    ? new Date(secondarySource.getTime())\n                    : this.getToday();\n            initialMonth.setDate(1);\n            return this.correctMonth(initialMonth);\n        };\n        Options.prototype.isMonthInValidity = function(month) {\n            return this.calculateMonthCorrection(month) === null;\n        };\n        Options.prototype.correctMonth = function(month) {\n            var correctMonth = this.calculateMonthCorrection(month);\n            return correctMonth !== null ? correctMonth : month;\n        };\n        Options.prototype.getInitialDate = function() {\n            return this.findPossibleAvailableDate(this.initialDate);\n        };\n        Options.prototype.findPossibleAvailableDate = function(date) {\n            if (this.isAllowedEmpty()) {\n                return date !== null && this.isDateInValidity(date) && this.isDateAvailable(date)\n                    ? new Date(date.getTime())\n                    : null;\n            }\n            date = date !== null ? new Date(date.getTime()) : this.getToday();\n            date = this.findNearestAvailableDate(date);\n            if (date !== null) {\n                return date;\n            }\n            throw new AvailableDateNotFoundException();\n        };\n        Options.prototype.findNearestAvailableDate = function(date) {\n            date = this.correctDate(date);\n            if (this.isDateAvailable(date)) {\n                return date;\n            }\n            var maxLoops = 1000;\n            var increasedDate = date;\n            var decreasedDate = new Date(date.getTime());\n            do {\n                if (increasedDate !== null) {\n                    increasedDate.setDate(increasedDate.getDate() + 1);\n                    if (this.maxDate !== null && increasedDate.getTime() > this.maxDate.getTime()) {\n                        increasedDate = null;\n                    } else if (this.isDateAvailable(increasedDate)) {\n                        return increasedDate;\n                    }\n                }\n                if (decreasedDate !== null) {\n                    decreasedDate.setDate(decreasedDate.getDate() - 1);\n                    if (this.minDate !== null && decreasedDate.getTime() < this.minDate.getTime()) {\n                        decreasedDate = null;\n                    } else if (this.isDateAvailable(decreasedDate)) {\n                        return decreasedDate;\n                    }\n                }\n                maxLoops--;\n            } while ((increasedDate !== null || decreasedDate !== null) && maxLoops > 0);\n            return null;\n        };\n        Options.prototype.isDateInValidity = function(date) {\n            return this.calculateDateCorrection(date) === null;\n        };\n        Options.prototype.correctDate = function(date) {\n            var correctDate = this.calculateDateCorrection(date);\n            return correctDate !== null ? correctDate : date;\n        };\n        Options.prototype.getFirstDayOfWeek = function() {\n            return this.firstDayOfWeek;\n        };\n        Options.prototype.areDaysOutOfMonthVisible = function() {\n            return this.daysOutOfMonthVisible;\n        };\n        Options.prototype.hasFixedRowsCount = function() {\n            return this.fixedRowsCount;\n        };\n        Options.prototype.hasToggleSelection = function() {\n            return this.allowEmpty && this.toggleSelection;\n        };\n        Options.prototype.isAllowedEmpty = function() {\n            return this.allowEmpty;\n        };\n        Options.prototype.isDeselectButtonShown = function() {\n            return this.allowEmpty && this.showDeselectButton;\n        };\n        Options.prototype.isResetButtonShown = function() {\n            return this.showResetButton;\n        };\n        Options.prototype.isMonthAsDropdown = function() {\n            return this.monthAsDropdown;\n        };\n        Options.prototype.isYearAsDropdown = function() {\n            return this.yearAsDropdown;\n        };\n        Options.prototype.isMonthAndYearSeparated = function() {\n            return this.monthAndYearSeparated;\n        };\n        Options.prototype.getClassesPrefix = function() {\n            return this.classesPrefix;\n        };\n        Options.prototype.isCloseButtonShown = function() {\n            return this.hideOnBlur && this.showCloseButton;\n        };\n        Options.prototype.getTitle = function() {\n            return this.title;\n        };\n        Options.prototype.getMinDate = function() {\n            return this.minDate;\n        };\n        Options.prototype.getMaxDate = function() {\n            return this.maxDate;\n        };\n        Options.prototype.getMinMonth = function() {\n            return this.minMonth;\n        };\n        Options.prototype.getMaxMonth = function() {\n            return this.maxMonth;\n        };\n        Options.prototype.getDropdownItemsLimit = function() {\n            return this.dropdownItemsLimit;\n        };\n        Options.prototype.isDateAvailable = function(date) {\n            if (this.dateAvailabilityResolver !== null) {\n                return !!this.dateAvailabilityResolver(new Date(date.getTime()));\n            }\n            return true;\n        };\n        Options.prototype.getCellContent = function(day) {\n            if (this.cellContentResolver !== null) {\n                return this.cellContentResolver(day);\n            }\n            return day.dayNumber + '';\n        };\n        Options.prototype.getCellStructure = function() {\n            if (this.cellContentStructureResolver !== null) {\n                return this.cellContentStructureResolver.init();\n            }\n            return this.document.createElement('span');\n        };\n        Options.prototype.updateCellStructure = function(element, day) {\n            if (this.cellContentStructureResolver !== null) {\n                this.cellContentStructureResolver.update(element, day);\n            } else {\n                element.innerText = this.getCellContent(day);\n            }\n        };\n        Options.prototype.getCellClasses = function(day) {\n            if (this.cellClassesResolver !== null) {\n                var classes = this.cellClassesResolver(day);\n                if (typeof classes === 'object' && classes.constructor === Array) {\n                    return classes;\n                }\n            }\n            return [];\n        };\n        Options.prototype.getGoBackHtml = function() {\n            return this.goBackHtml;\n        };\n        Options.prototype.getGoForwardHtml = function() {\n            return this.goForwardHtml;\n        };\n        Options.prototype.getCloseHtml = function() {\n            return this.closeHtml;\n        };\n        Options.prototype.getResetHtml = function() {\n            return this.resetHtml;\n        };\n        Options.prototype.getDeselectHtml = function() {\n            return this.deselectHtml;\n        };\n        Options.prototype.isHiddenOnBlur = function() {\n            return this.hideOnBlur;\n        };\n        Options.prototype.isHiddenOnSelect = function() {\n            return this.hideOnBlur && this.hideOnSelect;\n        };\n        Options.prototype.getInputFormat = function() {\n            return this.inputFormat;\n        };\n        Options.prototype.isPositionFixingEnabled = function() {\n            return this.hideOnBlur && this.positionFixing;\n        };\n        Options.prototype.getToday = function() {\n            return this.today !== null\n                ? new Date(this.today.getTime())\n                : TheDatepicker.Helper.resetTime(new Date());\n        };\n        Options.prototype.checkConstraints = function(minDate, maxDate) {\n            if (minDate !== null && maxDate !== null && minDate.getTime() > maxDate.getTime()) {\n                throw new Error('Min date cannot be higher then max date.');\n            }\n        };\n        Options.prototype.calculateMonthCorrection = function(month) {\n            var minMonth = this.getMinMonth();\n            if (minMonth !== null && month.getTime() < minMonth.getTime()) {\n                return minMonth;\n            }\n            var maxMonth = this.getMaxMonth();\n            if (maxMonth !== null && month.getTime() > maxMonth.getTime()) {\n                return maxMonth;\n            }\n            return null;\n        };\n        Options.prototype.calculateDateCorrection = function(date) {\n            if (this.minDate !== null && date.getTime() < this.minDate.getTime()) {\n                return new Date(this.minDate.getTime());\n            }\n            if (this.maxDate !== null && date.getTime() > this.maxDate.getTime()) {\n                return new Date(this.maxDate.getTime());\n            }\n            return null;\n        };\n        Options.prototype.onEventListener = function(eventType, listener) {\n            this.listeners[eventType].push(\n                TheDatepicker.Helper.checkFunction('Event listener', listener, false)\n            );\n        };\n        Options.prototype.offEventListener = function(eventType, listener) {\n            listener = TheDatepicker.Helper.checkFunction('Event listener', listener);\n            if (listener === null) {\n                this.listeners[eventType] = [];\n            } else {\n                var newListeners = [];\n                for (var index = 0; index < this.listeners[eventType].length; index++) {\n                    if (this.listeners[eventType][index] !== listener) {\n                        newListeners.push(this.listeners[eventType][index]);\n                    }\n                }\n                this.listeners[eventType] = newListeners;\n            }\n        };\n        Options.prototype.triggerEvent = function(eventType, caller) {\n            for (var index = 0; index < this.listeners[eventType].length; index++) {\n                if (caller(this.listeners[eventType][index]) === false) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return Options;\n    })();\n    TheDatepicker.Options = Options;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function(TheDatepicker) {\n    var MoveDirection;\n    (function(MoveDirection) {\n        MoveDirection[(MoveDirection['Left'] = -1)] = 'Left';\n        MoveDirection[(MoveDirection['Up'] = -7)] = 'Up';\n        MoveDirection[(MoveDirection['Right'] = 1)] = 'Right';\n        MoveDirection[(MoveDirection['Down'] = 7)] = 'Down';\n    })((MoveDirection = TheDatepicker.MoveDirection || (TheDatepicker.MoveDirection = {})));\n    var ViewModel = (function() {\n        function ViewModel(options, datepicker) {\n            this.options = options;\n            this.datepicker = datepicker;\n            this.selectedDate = null;\n            this.currentMonth = null;\n            this.highlightedDay = null;\n            this.isHighlightedDayFocused = false;\n            this.active = false;\n            this.template = new TheDatepicker.Template(\n                this.options,\n                new TheDatepicker.HtmlHelper(this.options),\n                datepicker.container,\n                datepicker.input !== null\n            );\n        }\n        ViewModel.prototype.render = function() {\n            if (this.selectPossibleDate()) {\n                return;\n            }\n            var correctMonth = this.options.correctMonth(this.getCurrentMonth());\n            if (this.goToMonth(null, correctMonth)) {\n                return;\n            }\n            this.template.render(this);\n            this.datepicker.updateInput();\n        };\n        ViewModel.prototype.setActive = function(event, value) {\n            if (this.active === value) {\n                return true;\n            }\n            if (!this.triggerOnBeforeOpenAndClose(event, value)) {\n                return false;\n            }\n            this.active = value;\n            if (this.options.isHiddenOnBlur()) {\n                this.render();\n            }\n            this.triggerOnOpenAndClose(event, value);\n            return true;\n        };\n        ViewModel.prototype.isActive = function() {\n            return this.active;\n        };\n        ViewModel.prototype.close = function(event) {\n            return this.datepicker.close(event);\n        };\n        ViewModel.prototype.getCurrentMonth = function() {\n            if (this.currentMonth === null) {\n                this.currentMonth = this.options.getInitialMonth();\n            }\n            return this.currentMonth;\n        };\n        ViewModel.prototype.canGoBack = function() {\n            var newMonth = new Date(this.getCurrentMonth().getTime());\n            newMonth.setMonth(newMonth.getMonth() - 1);\n            return this.canGoToMonth(newMonth);\n        };\n        ViewModel.prototype.canGoForward = function() {\n            var newMonth = new Date(this.getCurrentMonth().getTime());\n            newMonth.setMonth(newMonth.getMonth() + 1);\n            return this.canGoToMonth(newMonth);\n        };\n        ViewModel.prototype.canGoToMonth = function(month) {\n            return this.options.isMonthInValidity(month);\n        };\n        ViewModel.prototype.goBack = function(event) {\n            var newMonth = new Date(this.getCurrentMonth().getTime());\n            newMonth.setMonth(newMonth.getMonth() - 1);\n            return this.goToMonth(event, newMonth);\n        };\n        ViewModel.prototype.goForward = function(event) {\n            var newMonth = new Date(this.getCurrentMonth().getTime());\n            newMonth.setMonth(newMonth.getMonth() + 1);\n            return this.goToMonth(event, newMonth);\n        };\n        ViewModel.prototype.goToMonth = function(event, month, doCancelHighlight) {\n            if (doCancelHighlight === void 0) {\n                doCancelHighlight = true;\n            }\n            month = TheDatepicker.Helper.resetTime(new Date(month.getTime()));\n            month.setDate(1);\n            if (month.getTime() === this.getCurrentMonth().getTime() || !this.canGoToMonth(month)) {\n                return false;\n            }\n            if (!this.triggerOnBeforeMonthChange(event, month, this.currentMonth)) {\n                return false;\n            }\n            this.currentMonth = month;\n            if (!doCancelHighlight || !this.cancelHighlight()) {\n                this.render();\n            }\n            this.triggerOnMonthChange(event, month, this.currentMonth);\n            return true;\n        };\n        ViewModel.prototype.reset = function(event) {\n            var isMonthChanged = this.goToMonth(event, this.options.getInitialMonth());\n            var isDaySelected = this.selectInitialDate(event);\n            return isMonthChanged || isDaySelected;\n        };\n        ViewModel.prototype.selectDay = function(\n            event,\n            date,\n            doUpdateMonth,\n            doHighlight,\n            canToggle\n        ) {\n            if (doUpdateMonth === void 0) {\n                doUpdateMonth = true;\n            }\n            if (doHighlight === void 0) {\n                doHighlight = false;\n            }\n            if (canToggle === void 0) {\n                canToggle = false;\n            }\n            if (date === null) {\n                return this.cancelSelection(event);\n            }\n            var day;\n            if (date instanceof TheDatepicker.Day) {\n                day = date;\n                date = day.getDate();\n            } else {\n                day = this.createDay(date);\n            }\n            if (!day.isAvailable) {\n                return false;\n            }\n            if (day.isEqualToDate(this.selectedDate)) {\n                if (canToggle && this.options.hasToggleSelection()) {\n                    return this.cancelSelection(event);\n                }\n                return false;\n            }\n            var previousDay = this.selectedDate !== null ? this.createDay(this.selectedDate) : null;\n            if (!this.triggerOnBeforeSelect(event, day, previousDay)) {\n                return false;\n            }\n            this.selectedDate = day.getDate();\n            if (doHighlight) {\n                this.highlightedDay = day;\n                this.isHighlightedDayFocused = true;\n            }\n            if (!doUpdateMonth || !this.goToMonth(event, date)) {\n                this.render();\n            }\n            this.triggerOnSelect(event, day, previousDay);\n            return true;\n        };\n        ViewModel.prototype.selectNearestDate = function(event, date) {\n            return this.selectDay(event, this.options.findNearestAvailableDate(date));\n        };\n        ViewModel.prototype.selectPossibleDate = function() {\n            try {\n                return this.selectDay(\n                    null,\n                    this.options.findPossibleAvailableDate(this.selectedDate),\n                    false\n                );\n            } catch (error) {\n                if (!(error instanceof TheDatepicker.AvailableDateNotFoundException)) {\n                    throw error;\n                }\n                return this.cancelSelection(null, true);\n            }\n        };\n        ViewModel.prototype.selectInitialDate = function(event) {\n            try {\n                return this.selectDay(event, this.options.getInitialDate(), false);\n            } catch (error) {\n                if (!(error instanceof TheDatepicker.AvailableDateNotFoundException)) {\n                    throw error;\n                }\n                return this.cancelSelection(null, true);\n            }\n        };\n        ViewModel.prototype.highlightDay = function(event, day, doUpdateMonth) {\n            if (doUpdateMonth === void 0) {\n                doUpdateMonth = false;\n            }\n            if (!day.isAvailable) {\n                return false;\n            }\n            if (day.isEqualToDay(this.highlightedDay)) {\n                return false;\n            }\n            this.highlightedDay = day;\n            this.isHighlightedDayFocused = true;\n            var date = day.getDate();\n            if (!doUpdateMonth || !this.goToMonth(event, date, false)) {\n                this.render();\n            }\n            return true;\n        };\n        ViewModel.prototype.highlightFirstAvailableDay = function(event) {\n            var date = new Date(this.getCurrentMonth().getTime());\n            var maxDate = this.options.getMaxDate();\n            var day = this.createDay(date);\n            while (!day.isAvailable) {\n                date.setDate(day.dayNumber + 1);\n                if (date.getDate() === 1) {\n                    break;\n                }\n                if (maxDate !== null && date.getTime() > maxDate.getTime()) {\n                    break;\n                }\n                day = this.createDay(date);\n            }\n            return this.highlightDay(event, day);\n        };\n        ViewModel.prototype.highlightSiblingDay = function(event, day, direction) {\n            var newDay = day;\n            var date = newDay.getDate();\n            var maxLoops = 1000;\n            do {\n                date.setDate(newDay.dayNumber + direction);\n                newDay = this.createDay(date);\n                if (!newDay.isInValidity) {\n                    break;\n                }\n                maxLoops--;\n            } while (!newDay.isAvailable && maxLoops > 0);\n            return this.highlightDay(event, newDay, true);\n        };\n        ViewModel.prototype.cancelSelection = function(event, force) {\n            if (force === void 0) {\n                force = false;\n            }\n            if (!this.options.isAllowedEmpty() && !force) {\n                return false;\n            }\n            if (this.selectedDate === null) {\n                return false;\n            }\n            var previousDay = this.createDay(this.selectedDate);\n            if (!this.triggerOnBeforeSelect(event, null, previousDay)) {\n                return false;\n            }\n            this.selectedDate = null;\n            this.render();\n            this.triggerOnSelect(event, null, previousDay);\n            return true;\n        };\n        ViewModel.prototype.cancelHighlight = function() {\n            if (this.highlightedDay === null) {\n                return false;\n            }\n            this.highlightedDay = null;\n            this.render();\n            return true;\n        };\n        ViewModel.prototype.getWeekDays = function() {\n            var weekDays = [];\n            for (var day = 0; day < 7; day++) {\n                weekDays.push((this.options.getFirstDayOfWeek() + day) % 7);\n            }\n            return weekDays;\n        };\n        ViewModel.prototype.getWeeks = function() {\n            var date;\n            var days = [];\n            var currentMonth = this.getCurrentMonth();\n            var firstDateOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), 1);\n            var lastMonthDaysCount = new Date(\n                currentMonth.getFullYear(),\n                currentMonth.getMonth(),\n                0\n            ).getDate();\n            var prependDaysCount =\n                (firstDateOfMonth.getDay() - this.options.getFirstDayOfWeek() + 7) % 7;\n            for (\n                date = lastMonthDaysCount - prependDaysCount + 1;\n                date <= lastMonthDaysCount;\n                date++\n            ) {\n                var day = this.createDay(\n                    new Date(currentMonth.getFullYear(), currentMonth.getMonth() - 1, date)\n                );\n                day.isVisible = this.options.areDaysOutOfMonthVisible();\n                day.isInCurrentMonth = false;\n                days.push(day);\n            }\n            var lastDateOfMonth = new Date(\n                currentMonth.getFullYear(),\n                currentMonth.getMonth() + 1,\n                0\n            );\n            var monthDaysCount = lastDateOfMonth.getDate();\n            for (date = 1; date <= monthDaysCount; date++) {\n                days.push(\n                    this.createDay(\n                        new Date(currentMonth.getFullYear(), currentMonth.getMonth(), date)\n                    )\n                );\n            }\n            var appendDaysCount =\n                6 - ((lastDateOfMonth.getDay() - this.options.getFirstDayOfWeek() + 7) % 7);\n            for (date = 1; date <= appendDaysCount; date++) {\n                var day = this.createDay(\n                    new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, date)\n                );\n                day.isVisible = this.options.areDaysOutOfMonthVisible();\n                day.isInCurrentMonth = false;\n                days.push(day);\n            }\n            if (this.options.hasFixedRowsCount()) {\n                for (var date_4 = appendDaysCount + 1; days.length < 6 * 7; date_4++) {\n                    var day = this.createDay(\n                        new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, date_4)\n                    );\n                    day.isVisible = this.options.areDaysOutOfMonthVisible();\n                    day.isInCurrentMonth = false;\n                    days.push(day);\n                }\n            }\n            var weeks = [];\n            for (var i = 0; i < days.length; i += 7) {\n                weeks.push(days.slice(i, i + 7));\n            }\n            return weeks;\n        };\n        ViewModel.prototype.triggerKeyPress = function(event) {\n            if (\n                TheDatepicker.Helper.inArray(\n                    [\n                        TheDatepicker.KeyCode.Left,\n                        TheDatepicker.KeyCode.Up,\n                        TheDatepicker.KeyCode.Right,\n                        TheDatepicker.KeyCode.Down,\n                    ],\n                    event.keyCode\n                )\n            ) {\n                TheDatepicker.Helper.preventDefault(event);\n                if (this.highlightedDay !== null) {\n                    this.highlightSiblingDay(\n                        event,\n                        this.highlightedDay,\n                        this.translateKeyCodeToMoveDirection(event.keyCode)\n                    );\n                } else if (\n                    this.selectedDate !== null &&\n                    this.selectedDate.getFullYear() === this.getCurrentMonth().getFullYear() &&\n                    this.selectedDate.getMonth() === this.getCurrentMonth().getMonth()\n                ) {\n                    this.highlightSiblingDay(\n                        event,\n                        this.createDay(this.selectedDate),\n                        this.translateKeyCodeToMoveDirection(event.keyCode)\n                    );\n                } else {\n                    this.highlightFirstAvailableDay(event);\n                }\n            }\n        };\n        ViewModel.prototype.triggerOnBeforeSelect = function(event, day, previousDay) {\n            var _this = this;\n            return this.options.triggerEvent(TheDatepicker.EventType.BeforeSelect, function(\n                listener\n            ) {\n                return listener.call(_this.datepicker, event, day, previousDay);\n            });\n        };\n        ViewModel.prototype.triggerOnSelect = function(event, day, previousDay) {\n            var _this = this;\n            this.options.triggerEvent(TheDatepicker.EventType.Select, function(listener) {\n                return listener.call(_this.datepicker, event, day, previousDay);\n            });\n        };\n        ViewModel.prototype.triggerOnBeforeOpenAndClose = function(event, isOpening) {\n            var _this = this;\n            return this.options.triggerEvent(TheDatepicker.EventType.BeforeOpenAndClose, function(\n                listener\n            ) {\n                return listener.call(_this.datepicker, event, isOpening);\n            });\n        };\n        ViewModel.prototype.triggerOnOpenAndClose = function(event, isOpening) {\n            var _this = this;\n            this.options.triggerEvent(TheDatepicker.EventType.OpenAndClose, function(listener) {\n                return listener.call(_this.datepicker, event, isOpening);\n            });\n        };\n        ViewModel.prototype.triggerOnBeforeMonthChange = function(event, month, previousMonth) {\n            var _this = this;\n            return this.options.triggerEvent(TheDatepicker.EventType.BeforeMonthChange, function(\n                listener\n            ) {\n                return listener.call(_this.datepicker, event, month, previousMonth);\n            });\n        };\n        ViewModel.prototype.triggerOnMonthChange = function(event, month, previousMonth) {\n            var _this = this;\n            this.options.triggerEvent(TheDatepicker.EventType.MonthChange, function(listener) {\n                return listener.call(_this.datepicker, event, month, previousMonth);\n            });\n        };\n        ViewModel.prototype.createDay = function(date) {\n            date = TheDatepicker.Helper.resetTime(new Date(date.getTime()));\n            var today = this.options.getToday();\n            var day = new TheDatepicker.Day(date);\n            day.isToday = date.getTime() === today.getTime();\n            day.isPast = date.getTime() < today.getTime();\n            day.isInValidity = this.options.isDateInValidity(date);\n            day.isAvailable = day.isInValidity && this.options.isDateAvailable(date);\n            if (day.isAvailable) {\n                if (day.isEqualToDate(this.selectedDate)) {\n                    day.isSelected = true;\n                }\n                if (day.isEqualToDay(this.highlightedDay)) {\n                    day.isHighlighted = true;\n                    if (this.isHighlightedDayFocused) {\n                        day.isFocused = true;\n                        this.isHighlightedDayFocused = false;\n                    }\n                }\n            }\n            return day;\n        };\n        ViewModel.prototype.translateKeyCodeToMoveDirection = function(key) {\n            switch (key) {\n                case TheDatepicker.KeyCode.Left:\n                    return MoveDirection.Left;\n                case TheDatepicker.KeyCode.Up:\n                    return MoveDirection.Up;\n                case TheDatepicker.KeyCode.Right:\n                    return MoveDirection.Right;\n                case TheDatepicker.KeyCode.Down:\n                    return MoveDirection.Down;\n                default:\n                    throw new Error('Invalid key code: ' + key);\n            }\n        };\n        return ViewModel;\n    })();\n    TheDatepicker.ViewModel = ViewModel;\n})(TheDatepicker || (TheDatepicker = {}));\nvar TheDatepicker;\n(function(TheDatepicker) {\n    var Template = (function() {\n        function Template(options, htmlHelper, container, hasInput) {\n            this.options = options;\n            this.htmlHelper = htmlHelper;\n            this.container = container;\n            this.hasInput = hasInput;\n            this.mainElement = null;\n            this.controlElement = null;\n            this.goBackElement = null;\n            this.goForwardElement = null;\n            this.titleElement = null;\n            this.titleContentElement = null;\n            this.resetElement = null;\n            this.closeElement = null;\n            this.monthSelect = null;\n            this.monthElement = null;\n            this.yearSelect = null;\n            this.yearElement = null;\n            this.monthAndYearSelect = null;\n            this.monthAndYearElement = null;\n            this.weeksElements = [];\n            this.daysElements = [];\n            this.daysButtonsElements = [];\n            this.daysContentsElements = [];\n        }\n        Template.prototype.render = function(viewModel) {\n            if (this.mainElement === null) {\n                if (this.hasInput && this.options.isHiddenOnBlur() && !viewModel.isActive()) {\n                    return;\n                }\n                this.container.innerHTML = '';\n                this.container.appendChild(this.createSkeleton(viewModel));\n            }\n            this.updateMainElement(viewModel);\n            this.updateTopElement(viewModel);\n            this.updateTitleElement(viewModel);\n            this.updateCloseElement(viewModel);\n            this.updateResetElement(viewModel);\n            this.updateGoBackElement(viewModel);\n            this.updateGoForwardElement(viewModel);\n            this.updateMonthElement(viewModel);\n            this.updateYearElement(viewModel);\n            this.updateMonthAndYearElement(viewModel);\n            this.updateWeeksElements(viewModel);\n        };\n        Template.prototype.createSkeleton = function(viewModel) {\n            var main = this.htmlHelper.createDiv('main');\n            main.appendChild(this.createHeaderElement(viewModel));\n            main.appendChild(this.createBodyElement(viewModel));\n            this.mainElement = main;\n            return main;\n        };\n        Template.prototype.updateMainElement = function(viewModel) {\n            this.mainElement.style.display =\n                !this.hasInput || viewModel.isActive() || !this.options.isHiddenOnBlur()\n                    ? ''\n                    : 'none';\n        };\n        Template.prototype.createBodyElement = function(viewModel) {\n            var body = this.htmlHelper.createDiv('body');\n            body.appendChild(this.createTableElement(viewModel));\n            return body;\n        };\n        Template.prototype.createHeaderElement = function(viewModel) {\n            var header = this.htmlHelper.createDiv('header');\n            var top = this.htmlHelper.createDiv('top');\n            header.appendChild(top);\n            top.appendChild(this.createTitleElement(viewModel));\n            var control = this.htmlHelper.createDiv('control');\n            top.appendChild(control);\n            control.appendChild(this.createResetElement(viewModel));\n            control.appendChild(this.createCloseElement(viewModel));\n            var navigation = this.htmlHelper.createDiv('navigation');\n            header.appendChild(navigation);\n            navigation.appendChild(this.createGoBackElement(viewModel));\n            var state = this.htmlHelper.createDiv('state');\n            navigation.appendChild(state);\n            if (this.options.isMonthAndYearSeparated()) {\n                state.appendChild(this.createMonthElement(viewModel));\n                state.appendChild(this.createYearElement(viewModel));\n            } else {\n                state.appendChild(this.createMonthAndYearElement(viewModel));\n            }\n            navigation.appendChild(this.createGoForwardElement(viewModel));\n            this.controlElement = control;\n            return header;\n        };\n        Template.prototype.updateTopElement = function(viewModel) {\n            var isVisible =\n                this.options.getTitle() !== '' ||\n                this.options.isResetButtonShown() ||\n                (this.hasInput && this.options.isCloseButtonShown());\n            this.controlElement.style.display = isVisible ? '' : 'none';\n            this.titleElement.style.display = isVisible ? '' : 'none';\n        };\n        Template.prototype.createTitleElement = function(viewModel) {\n            var titleElement = this.htmlHelper.createDiv('title');\n            var titleContent = this.htmlHelper.createSpan();\n            titleElement.appendChild(titleContent);\n            this.htmlHelper.addClass(titleContent, 'title-content');\n            this.titleElement = titleElement;\n            this.titleContentElement = titleContent;\n            return titleElement;\n        };\n        Template.prototype.updateTitleElement = function(viewModel) {\n            var title = this.options.getTitle();\n            this.titleContentElement.style.display = title !== '' ? '' : 'none';\n            this.titleContentElement.innerText = title;\n        };\n        Template.prototype.createResetElement = function(viewModel) {\n            var resetElement = this.htmlHelper.createDiv('reset');\n            var resetButton = this.htmlHelper.createAnchor(function(event) {\n                viewModel.reset(event);\n            });\n            resetButton.innerHTML = this.options.getResetHtml();\n            resetElement.appendChild(resetButton);\n            this.resetElement = resetElement;\n            return resetElement;\n        };\n        Template.prototype.updateResetElement = function(viewModel) {\n            this.resetElement.style.display = this.options.isResetButtonShown() ? '' : 'none';\n        };\n        Template.prototype.createCloseElement = function(viewModel) {\n            var closeElement = this.htmlHelper.createDiv('close');\n            var closeButton = this.htmlHelper.createAnchor(function(event) {\n                viewModel.close(event);\n            });\n            closeButton.innerHTML = this.options.getCloseHtml();\n            closeElement.appendChild(closeButton);\n            this.closeElement = closeElement;\n            return closeElement;\n        };\n        Template.prototype.updateCloseElement = function(viewModel) {\n            this.closeElement.style.display =\n                this.hasInput && this.options.isCloseButtonShown() ? '' : 'none';\n        };\n        Template.prototype.createGoBackElement = function(viewModel) {\n            return this.createGoElement(viewModel, false);\n        };\n        Template.prototype.createGoForwardElement = function(viewModel) {\n            return this.createGoElement(viewModel, true);\n        };\n        Template.prototype.createGoElement = function(viewModel, directionForward) {\n            var goElement = this.htmlHelper.createDiv('go');\n            this.htmlHelper.addClass(goElement, directionForward ? 'go-next' : 'go-previous');\n            var goButton = this.htmlHelper.createAnchor(function(event) {\n                if (directionForward) {\n                    viewModel.goForward(event);\n                } else {\n                    viewModel.goBack(event);\n                }\n            });\n            goButton.innerHTML = directionForward\n                ? this.options.getGoForwardHtml()\n                : this.options.getGoBackHtml();\n            goElement.appendChild(goButton);\n            if (directionForward) {\n                this.goForwardElement = goButton;\n            } else {\n                this.goBackElement = goButton;\n            }\n            return goElement;\n        };\n        Template.prototype.updateGoBackElement = function(viewModel) {\n            this.goBackElement.style.visibility = viewModel.canGoBack() ? 'visible' : 'hidden';\n        };\n        Template.prototype.updateGoForwardElement = function(viewModel) {\n            this.goForwardElement.style.visibility = viewModel.canGoForward()\n                ? 'visible'\n                : 'hidden';\n        };\n        Template.prototype.createMonthElement = function(viewModel) {\n            var _this = this;\n            var options = [];\n            for (var monthNumber = 0; monthNumber < 12; monthNumber++) {\n                options.push({\n                    value: monthNumber + '',\n                    label: this.options.translator.translateMonth(monthNumber),\n                });\n            }\n            var selectElement = this.htmlHelper.createSelectInput(options, function(\n                event,\n                monthNumber\n            ) {\n                var currentMonth = viewModel.getCurrentMonth();\n                var newMonth = new Date(currentMonth.getTime());\n                newMonth.setMonth(parseInt(monthNumber, 10));\n                if (!viewModel.goToMonth(event, newMonth)) {\n                    _this.monthSelect.value = currentMonth.getMonth() + '';\n                }\n            });\n            var monthElement = this.htmlHelper.createDiv('month');\n            var monthContent = this.htmlHelper.createSpan();\n            monthElement.appendChild(selectElement);\n            monthElement.appendChild(monthContent);\n            this.monthElement = monthContent;\n            this.monthSelect = selectElement;\n            return monthElement;\n        };\n        Template.prototype.updateMonthElement = function(viewModel) {\n            if (this.monthElement === null) {\n                return;\n            }\n            var currentMonth = viewModel.getCurrentMonth().getMonth();\n            this.monthElement.innerText = this.options.translator.translateMonth(currentMonth);\n            if (!this.options.isMonthAsDropdown()) {\n                this.monthSelect.style.display = 'none';\n                this.monthElement.style.display = '';\n                return;\n            }\n            var valuesCount = 0;\n            for (var monthNumber = 0; monthNumber < 12; monthNumber++) {\n                var newMonth = new Date(viewModel.getCurrentMonth().getTime());\n                newMonth.setMonth(monthNumber);\n                var option = this.monthSelect.getElementsByTagName('option')[monthNumber];\n                var canGoToMonth = viewModel.canGoToMonth(newMonth);\n                option.disabled = !canGoToMonth;\n                option.style.display = canGoToMonth ? '' : 'none';\n                valuesCount += canGoToMonth ? 1 : 0;\n            }\n            this.monthSelect.value = currentMonth + '';\n            this.monthSelect.style.display = valuesCount > 1 ? '' : 'none';\n            this.monthElement.style.display = valuesCount > 1 ? 'none' : '';\n        };\n        Template.prototype.createYearElement = function(viewModel) {\n            var _this = this;\n            var selectElement = this.htmlHelper.createSelectInput([], function(event, year) {\n                var currentMonth = viewModel.getCurrentMonth();\n                var newMonth = new Date(currentMonth.getTime());\n                newMonth.setFullYear(parseInt(year, 10));\n                var minMonth = _this.options.getMinMonth();\n                var maxMonth = _this.options.getMaxMonth();\n                if (minMonth !== null && newMonth.getTime() < minMonth.getTime()) {\n                    newMonth = minMonth;\n                }\n                if (maxMonth !== null && newMonth.getTime() > maxMonth.getTime()) {\n                    newMonth = maxMonth;\n                }\n                if (!viewModel.goToMonth(event, newMonth)) {\n                    _this.yearSelect.value = currentMonth.getFullYear() + '';\n                }\n            });\n            var yearElement = this.htmlHelper.createDiv('year');\n            var yearContent = this.htmlHelper.createSpan();\n            yearElement.appendChild(selectElement);\n            yearElement.appendChild(yearContent);\n            this.yearElement = yearContent;\n            this.yearSelect = selectElement;\n            return yearElement;\n        };\n        Template.prototype.updateYearElement = function(viewModel) {\n            if (this.yearElement === null) {\n                return;\n            }\n            var currentYear = viewModel.getCurrentMonth().getFullYear();\n            this.yearElement.innerText = currentYear + '';\n            if (!this.options.isYearAsDropdown()) {\n                this.yearSelect.style.display = 'none';\n                this.yearElement.style.display = '';\n                return;\n            }\n            var minDate = this.options.getMinDate();\n            var maxDate = this.options.getMaxDate();\n            var minYear = minDate !== null ? minDate.getFullYear() : null;\n            var maxYear = maxDate !== null ? maxDate.getFullYear() : null;\n            var range = this.calculateDropdownRange(currentYear, minYear, maxYear);\n            var options = this.yearSelect.getElementsByTagName('option');\n            var diff = this.calculateDropdownDiff(options, range, function(value) {\n                return parseInt(value, 10);\n            });\n            for (var index = 0; index < diff.remove.length; index++) {\n                this.yearSelect.removeChild(diff.remove[index]);\n            }\n            for (var index = diff.prepend.length - 1; index >= 0; index--) {\n                this.yearSelect.insertBefore(\n                    this.htmlHelper.createSelectOption(\n                        diff.prepend[index] + '',\n                        diff.prepend[index] + ''\n                    ),\n                    this.yearSelect.firstChild\n                );\n            }\n            for (var index = 0; index < diff.append.length; index++) {\n                this.yearSelect.appendChild(\n                    this.htmlHelper.createSelectOption(\n                        diff.append[index] + '',\n                        diff.append[index] + ''\n                    )\n                );\n            }\n            this.yearSelect.value = currentYear + '';\n            this.yearSelect.style.display = range.from < range.to ? '' : 'none';\n            this.yearElement.style.display = range.from < range.to ? 'none' : '';\n        };\n        Template.prototype.createMonthAndYearElement = function(viewModel) {\n            var _this = this;\n            var monthAndYear = this.htmlHelper.createDiv('month-year');\n            var selectElement = this.htmlHelper.createSelectInput([], function(event, value) {\n                var currentMonth = viewModel.getCurrentMonth();\n                var newMonth = new Date(currentMonth.getTime());\n                var data = _this.parseMonthAndYearOptionValue(value);\n                newMonth.setFullYear(data.year);\n                newMonth.setMonth(data.month);\n                if (!viewModel.goToMonth(event, newMonth)) {\n                    _this.monthAndYearSelect.value = _this.getMonthAndYearOptionValue({\n                        month: currentMonth.getMonth(),\n                        year: currentMonth.getFullYear(),\n                    });\n                }\n            });\n            var monthAndYearContent = this.htmlHelper.createSpan();\n            this.monthAndYearElement = monthAndYearContent;\n            this.monthAndYearSelect = selectElement;\n            monthAndYear.appendChild(monthAndYearContent);\n            monthAndYear.appendChild(selectElement);\n            return monthAndYear;\n        };\n        Template.prototype.updateMonthAndYearElement = function(viewModel) {\n            var _this = this;\n            if (this.monthAndYearElement === null) {\n                return;\n            }\n            var currentMonth = viewModel.getCurrentMonth();\n            var currentData = {\n                month: currentMonth.getMonth(),\n                year: currentMonth.getFullYear(),\n            };\n            var currentIndex = this.calculateMonthAndYearIndex(currentData);\n            this.monthAndYearElement.innerText = this.translateMonthAndYear(currentData);\n            if (!this.options.isYearAsDropdown() || !this.options.isMonthAsDropdown()) {\n                this.monthAndYearSelect.style.display = 'none';\n                this.monthAndYearElement.style.display = '';\n                return;\n            }\n            var minDate = this.options.getMinDate();\n            var maxDate = this.options.getMaxDate();\n            var minIndex =\n                minDate !== null ? minDate.getFullYear() * 12 + minDate.getMonth() : null;\n            var maxIndex =\n                maxDate !== null ? maxDate.getFullYear() * 12 + maxDate.getMonth() : null;\n            var range = this.calculateDropdownRange(currentIndex, minIndex, maxIndex);\n            var options = this.monthAndYearSelect.getElementsByTagName('option');\n            var diff = this.calculateDropdownDiff(options, range, function(value) {\n                return _this.calculateMonthAndYearIndex(_this.parseMonthAndYearOptionValue(value));\n            });\n            for (var index = 0; index < diff.remove.length; index++) {\n                this.monthAndYearSelect.removeChild(diff.remove[index]);\n            }\n            for (var index = diff.prepend.length - 1; index >= 0; index--) {\n                var data = this.getMonthAndYearByIndex(diff.prepend[index]);\n                this.monthAndYearSelect.insertBefore(\n                    this.htmlHelper.createSelectOption(\n                        this.getMonthAndYearOptionValue(data),\n                        this.translateMonthAndYear(data)\n                    ),\n                    this.monthAndYearSelect.firstChild\n                );\n            }\n            for (var index = 0; index < diff.append.length; index++) {\n                var data = this.getMonthAndYearByIndex(diff.append[index]);\n                this.monthAndYearSelect.appendChild(\n                    this.htmlHelper.createSelectOption(\n                        this.getMonthAndYearOptionValue(data),\n                        this.translateMonthAndYear(data)\n                    )\n                );\n            }\n            this.monthAndYearSelect.value = this.getMonthAndYearOptionValue(currentData);\n            this.monthAndYearSelect.style.display = range.from < range.to ? '' : 'none';\n            this.monthAndYearElement.style.display = range.from < range.to ? 'none' : '';\n        };\n        Template.prototype.translateMonthAndYear = function(data) {\n            return this.options.translator.translateMonth(data.month) + ' ' + data.year;\n        };\n        Template.prototype.calculateMonthAndYearIndex = function(data) {\n            return data.year * 12 + data.month;\n        };\n        Template.prototype.getMonthAndYearByIndex = function(index) {\n            return {\n                year: Math.floor(index / 12),\n                month: index % 12,\n            };\n        };\n        Template.prototype.getMonthAndYearOptionValue = function(data) {\n            return data.year + '-' + data.month;\n        };\n        Template.prototype.parseMonthAndYearOptionValue = function(value) {\n            var parts = value.split('-');\n            return {\n                month: parseInt(parts[1], 10),\n                year: parseInt(parts[0], 10),\n            };\n        };\n        Template.prototype.calculateDropdownRange = function(current, min, max) {\n            var limit = this.options.getDropdownItemsLimit() - 1;\n            var maxAppend = Math.ceil(limit / 2);\n            var from = current - (limit - maxAppend);\n            var to = current + maxAppend;\n            if (min !== null && from < min) {\n                to += min - from;\n                if (max !== null && to > max) {\n                    to = max;\n                }\n                from = min;\n            } else if (max !== null && to > max) {\n                from -= to - max;\n                if (min !== null && from < min) {\n                    from = min;\n                }\n                to = max;\n            }\n            return {\n                from: from,\n                to: to,\n            };\n        };\n        Template.prototype.calculateDropdownDiff = function(options, newRange, getNumerical) {\n            var firstOption = options.length > 0 ? getNumerical(options[0].value) : null;\n            var lastOption =\n                options.length > 0 ? getNumerical(options[options.length - 1].value) : null;\n            var prepend = [];\n            var append = [];\n            var remove = [];\n            for (var value = newRange.from; value <= newRange.to; value++) {\n                if (firstOption === null || value < firstOption) {\n                    prepend.push(value);\n                } else if (value > lastOption) {\n                    append.push(value);\n                }\n            }\n            for (var index = 0; index < options.length; index++) {\n                var value = getNumerical(options[index].value);\n                if (value < newRange.from || value > newRange.to) {\n                    remove.push(options[index]);\n                }\n            }\n            return {\n                prepend: prepend,\n                append: append,\n                remove: remove,\n            };\n        };\n        Template.prototype.createTableElement = function(viewModel) {\n            var tableHeader = this.createTableHeaderElement(viewModel);\n            var tableBody = this.createTableBodyElement(viewModel);\n            return this.htmlHelper.createTable('calendar', tableHeader, tableBody);\n        };\n        Template.prototype.createTableHeaderElement = function(viewModel) {\n            var weekDays = viewModel.getWeekDays();\n            var cells = [];\n            for (var index = 0; index < weekDays.length; index++) {\n                var dayOfWeek = weekDays[index];\n                cells.push(this.createTableHeaderCellElement(viewModel, dayOfWeek));\n            }\n            return this.htmlHelper.createTableHeader('calendar-header', cells);\n        };\n        Template.prototype.createTableHeaderCellElement = function(viewModel, dayOfWeek) {\n            var headerCell = this.htmlHelper.createTableHeaderCell('week-day');\n            if (\n                dayOfWeek === TheDatepicker.DayOfWeek.Saturday ||\n                dayOfWeek === TheDatepicker.DayOfWeek.Sunday\n            ) {\n                this.htmlHelper.addClass(headerCell, 'week-day--weekend');\n            }\n            headerCell.innerText = this.options.translator.translateDayOfWeek(dayOfWeek);\n            return headerCell;\n        };\n        Template.prototype.createTableBodyElement = function(viewModel) {\n            this.daysElements = [];\n            this.daysButtonsElements = [];\n            this.daysContentsElements = [];\n            var rows = [];\n            for (var index = 0; index < 6; index++) {\n                rows.push(this.createTableRowElement(viewModel));\n            }\n            this.weeksElements = rows;\n            return this.htmlHelper.createTableBody('calendar-body', rows);\n        };\n        Template.prototype.updateWeeksElements = function(viewModel) {\n            var weeks = viewModel.getWeeks();\n            for (var weekIndex = 0; weekIndex < this.weeksElements.length; weekIndex++) {\n                var weekElement = this.weeksElements[weekIndex];\n                var week = weeks.length > weekIndex ? weeks[weekIndex] : null;\n                weekElement.style.display = week !== null ? '' : 'none';\n                if (week !== null) {\n                    for (\n                        var dayIndex = 0;\n                        dayIndex < this.daysElements[weekIndex].length;\n                        dayIndex++\n                    ) {\n                        this.updateDayElement(\n                            viewModel,\n                            this.daysElements[weekIndex][dayIndex],\n                            this.daysButtonsElements[weekIndex][dayIndex],\n                            this.daysContentsElements[weekIndex][dayIndex],\n                            week[dayIndex]\n                        );\n                    }\n                }\n            }\n        };\n        Template.prototype.createTableRowElement = function(viewModel) {\n            var cells = [];\n            var cellsButtons = [];\n            var cellsContents = [];\n            for (var index = 0; index < 7; index++) {\n                var cell = this.htmlHelper.createTableCell();\n                var cellButton = this.createTableCellButtonElement(viewModel);\n                var cellContent = this.createTableCellContentElement(viewModel);\n                cells.push(cell);\n                cellsButtons.push(cellButton);\n                cellsContents.push(cellContent);\n                cell.appendChild(cellButton);\n                cellButton.appendChild(cellContent);\n            }\n            this.daysElements.push(cells);\n            this.daysButtonsElements.push(cellsButtons);\n            this.daysContentsElements.push(cellsContents);\n            return this.htmlHelper.createTableRow('week', cells);\n        };\n        Template.prototype.updateDayElement = function(\n            viewModel,\n            dayElement,\n            dayButtonElement,\n            dayContentElement,\n            day\n        ) {\n            dayButtonElement.day = day;\n            dayElement.setAttribute('data-date', day.getFormatted());\n            dayElement.className = '';\n            this.htmlHelper.addClass(dayElement, 'cell');\n            this.options.updateCellStructure(dayContentElement, day);\n            if (!day.isVisible) {\n                dayButtonElement.removeAttribute('href');\n                dayButtonElement.style.visibility = 'hidden';\n                return;\n            }\n            this.htmlHelper.addClass(dayElement, 'day');\n            if (day.isToday) {\n                this.htmlHelper.addClass(dayElement, 'day--today');\n            }\n            if (day.isPast) {\n                this.htmlHelper.addClass(dayElement, 'day--past');\n            }\n            if (day.isWeekend) {\n                this.htmlHelper.addClass(dayElement, 'day--weekend');\n            }\n            if (!day.isAvailable) {\n                this.htmlHelper.addClass(dayElement, 'day--unavailable');\n            }\n            if (!day.isInCurrentMonth) {\n                this.htmlHelper.addClass(dayElement, 'day--outside');\n            }\n            if (day.isHighlighted) {\n                this.htmlHelper.addClass(dayElement, 'day--highlighted');\n            }\n            if (day.isSelected) {\n                this.htmlHelper.addClass(dayElement, 'day--selected');\n            }\n            var customClasses = this.options.getCellClasses(day);\n            for (var index = 0; index < customClasses.length; index++) {\n                dayElement.className += ' ' + customClasses[index];\n            }\n            dayButtonElement.style.visibility = 'visible';\n            if (day.isAvailable) {\n                dayButtonElement.href = '#';\n            } else {\n                dayButtonElement.removeAttribute('href');\n            }\n            if (day.isFocused) {\n                dayButtonElement.focus();\n            }\n        };\n        Template.prototype.createTableCellButtonElement = function(viewModel) {\n            var _this = this;\n            var cellButton = this.htmlHelper.createAnchor(function(event) {\n                var previous = viewModel.selectedDate;\n                var isSelected = viewModel.selectDay(event, cellButton.day, false, true, true);\n                if (\n                    _this.options.isHiddenOnSelect() &&\n                    (isSelected || (previous !== null && cellButton.day.isEqualToDate(previous)))\n                ) {\n                    viewModel.close(event);\n                }\n            });\n            cellButton.onfocus = function(event) {\n                viewModel.highlightDay(event || window.event, cellButton.day);\n            };\n            cellButton.onmouseenter = function() {\n                viewModel.cancelHighlight();\n            };\n            cellButton.onmouseleave = function() {\n                viewModel.cancelHighlight();\n            };\n            return cellButton;\n        };\n        Template.prototype.createTableCellContentElement = function(viewModel) {\n            var cellContent = this.options.getCellStructure();\n            this.htmlHelper.addClass(cellContent, 'day-content');\n            return cellContent;\n        };\n        return Template;\n    })();\n    TheDatepicker.Template = Template;\n})(TheDatepicker || (TheDatepicker = {}));\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (TheDatepicker);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/the-datepicker.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/tile.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/tile.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Tiles; });\n/* harmony import */ var masonry_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! masonry-layout */ \"./node_modules/masonry-layout/masonry.js\");\n/* harmony import */ var masonry_layout__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(masonry_layout__WEBPACK_IMPORTED_MODULE_0__);\n\n\nclass Tiles {\n    constructor() {\n        this.itemSelector = '.c-tile__item';\n        this.tileSizer = '.c-tile__sizer';\n        this.containerSelector = '.c-tile__container';\n    }\n\n    initTiles () {\n        if (document.querySelectorAll('.c-tile__container').length > 0) {\n            const msnry = new masonry_layout__WEBPACK_IMPORTED_MODULE_0___default.a( this.containerSelector, {\n                columnWidth: this.tileSizer,\n                itemSelector: this.itemSelector\n            });\n        }\n    }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvdGlsZS5qcz8zZDE1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXFDOztBQUV0QjtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDhCQUE4QixxREFBTztBQUNyQztBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AaGVsc2luZ2Jvcmctc3RhZC9zdHlsZWd1aWRlL3NvdXJjZS9qcy90aWxlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1hc29ucnkgZnJvbSAnbWFzb25yeS1sYXlvdXQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUaWxlcyB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuaXRlbVNlbGVjdG9yID0gJy5jLXRpbGVfX2l0ZW0nO1xuICAgICAgICB0aGlzLnRpbGVTaXplciA9ICcuYy10aWxlX19zaXplcic7XG4gICAgICAgIHRoaXMuY29udGFpbmVyU2VsZWN0b3IgPSAnLmMtdGlsZV9fY29udGFpbmVyJztcbiAgICB9XG5cbiAgICBpbml0VGlsZXMgKCkge1xuICAgICAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmMtdGlsZV9fY29udGFpbmVyJykubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgY29uc3QgbXNucnkgPSBuZXcgTWFzb25yeSggdGhpcy5jb250YWluZXJTZWxlY3Rvciwge1xuICAgICAgICAgICAgICAgIGNvbHVtbldpZHRoOiB0aGlzLnRpbGVTaXplcixcbiAgICAgICAgICAgICAgICBpdGVtU2VsZWN0b3I6IHRoaXMuaXRlbVNlbGVjdG9yXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/tile.js\n");

/***/ }),

/***/ "./node_modules/@helsingborg-stad/styleguide/source/js/toggle.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@helsingborg-stad/styleguide/source/js/toggle.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ToggleClasses; });\nclass ToggleClasses {\n    constructor() {\n        this.TRIGGER = 'js-toggle-trigger';\n        this.ITEM = 'js-toggle-item';\n        this.CLASS = 'js-toggle-class';\n        this.GROUP = 'js-toggle-group';\n        this.PRESSED = 'aria-pressed';\n        this.observeTriggers();\n    }\n\n    togglePressedTrigger (pressedTriggerId, groupId, pressedTrigger) {\n        let query = `[${this.ITEM}=\"${pressedTriggerId}\"]`;\n        let item = document.querySelector(query);\n        let toggleClass = item.getAttribute(this.CLASS);\n        let ariaPressed = pressedTrigger.getAttribute(this.PRESSED);\n\n        item.classList.toggle(toggleClass);\n\n        if(ariaPressed) this.toggleAriaPressed(ariaPressed, pressedTrigger);\n\n        if(groupId) this.toggleIdleGroupMembers(groupId, pressedTriggerId, toggleClass);\n    }\n\n    toggleIdleGroupMembers (groupId, pressedTriggerId, toggleClass) {\n        let query = `[${this.GROUP}=\"${groupId}\"][${this.TRIGGER}]:not([${this.TRIGGER}=\"${pressedTriggerId}\"])`\n        let idleTriggers = document.querySelectorAll(query);\n\n        idleTriggers.forEach((idleTrigger=>{\n            this.removeClassFromTriggeredItem(idleTrigger, toggleClass);\n\n            let ariaPressed = idleTrigger.getAttribute(this.PRESSED);\n\n            if(ariaPressed) this.toggleAriaPressed(ariaPressed, idleTrigger, true);\n        }));\n    }\n\n    removeClassFromTriggeredItem (idleTrigger, toggleClass) {\n        let id = idleTrigger.getAttribute(this.TRIGGER);\n        let triggeredItem = document.querySelector(`[${this.ITEM}=\"${id}\"]`);\n\n        triggeredItem.classList.remove(toggleClass);\n    }\n\n    toggleAriaPressed (ariaPressed, element, idle = false) {\n        if(ariaPressed === 'false' && !idle){\n            element.setAttribute(this.PRESSED, 'true');\n        }else{\n            element.setAttribute(this.PRESSED, 'false');\n        }\n    }\n\n    applyToggle (event = null) {\n        let triggers = document.querySelectorAll(`[${this.TRIGGER}]`);\n\n        if(event) {\n            let newTriggers = []\n            event.forEach((record)=>{\n                record.addedNodes.forEach((node) =>{\n                    if(node.getAttribute && node.getAttribute('js-toggle-trigger')) {\n                        newTriggers.push(node);\n                    }\n                })\n            })\n            triggers = newTriggers;\n        }\n\n        triggers.forEach( (trigger)=>{\n            trigger.addEventListener('click', (event) => {\n                let triggerId = trigger.getAttribute(this.TRIGGER);\n                let groupId = trigger.getAttribute(this.GROUP);\n                \n                this.togglePressedTrigger(triggerId, groupId, trigger);\n            });\n        })\n    }\n\n    observeTriggers(){\n        \n        const container = document.documentElement || document.body;\n        const observerOptions = {\n            childList: true,\n            subtree: true,\n        };\n \n        const observer = new MutationObserver((event) => {\n            this.applyToggle(event);\n        });\n        \n        observer.observe(container, observerOptions);    \n    }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGhlbHNpbmdib3JnLXN0YWQvc3R5bGVndWlkZS9zb3VyY2UvanMvdG9nZ2xlLmpzP2RkYjEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHdCQUF3QixVQUFVLElBQUksaUJBQWlCO0FBQ3ZEO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0Esd0JBQXdCLFdBQVcsSUFBSSxRQUFRLEtBQUssYUFBYSxTQUFTLGFBQWEsSUFBSSxpQkFBaUI7QUFDNUc7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0EsdURBQXVELFVBQVUsSUFBSSxHQUFHOztBQUV4RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxxREFBcUQsYUFBYTs7QUFFbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7O0FBRVQscUQ7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BoZWxzaW5nYm9yZy1zdGFkL3N0eWxlZ3VpZGUvc291cmNlL2pzL3RvZ2dsZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFRvZ2dsZUNsYXNzZXMge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLlRSSUdHRVIgPSAnanMtdG9nZ2xlLXRyaWdnZXInO1xuICAgICAgICB0aGlzLklURU0gPSAnanMtdG9nZ2xlLWl0ZW0nO1xuICAgICAgICB0aGlzLkNMQVNTID0gJ2pzLXRvZ2dsZS1jbGFzcyc7XG4gICAgICAgIHRoaXMuR1JPVVAgPSAnanMtdG9nZ2xlLWdyb3VwJztcbiAgICAgICAgdGhpcy5QUkVTU0VEID0gJ2FyaWEtcHJlc3NlZCc7XG4gICAgICAgIHRoaXMub2JzZXJ2ZVRyaWdnZXJzKCk7XG4gICAgfVxuXG4gICAgdG9nZ2xlUHJlc3NlZFRyaWdnZXIgKHByZXNzZWRUcmlnZ2VySWQsIGdyb3VwSWQsIHByZXNzZWRUcmlnZ2VyKSB7XG4gICAgICAgIGxldCBxdWVyeSA9IGBbJHt0aGlzLklURU19PVwiJHtwcmVzc2VkVHJpZ2dlcklkfVwiXWA7XG4gICAgICAgIGxldCBpdGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihxdWVyeSk7XG4gICAgICAgIGxldCB0b2dnbGVDbGFzcyA9IGl0ZW0uZ2V0QXR0cmlidXRlKHRoaXMuQ0xBU1MpO1xuICAgICAgICBsZXQgYXJpYVByZXNzZWQgPSBwcmVzc2VkVHJpZ2dlci5nZXRBdHRyaWJ1dGUodGhpcy5QUkVTU0VEKTtcblxuICAgICAgICBpdGVtLmNsYXNzTGlzdC50b2dnbGUodG9nZ2xlQ2xhc3MpO1xuXG4gICAgICAgIGlmKGFyaWFQcmVzc2VkKSB0aGlzLnRvZ2dsZUFyaWFQcmVzc2VkKGFyaWFQcmVzc2VkLCBwcmVzc2VkVHJpZ2dlcik7XG5cbiAgICAgICAgaWYoZ3JvdXBJZCkgdGhpcy50b2dnbGVJZGxlR3JvdXBNZW1iZXJzKGdyb3VwSWQsIHByZXNzZWRUcmlnZ2VySWQsIHRvZ2dsZUNsYXNzKTtcbiAgICB9XG5cbiAgICB0b2dnbGVJZGxlR3JvdXBNZW1iZXJzIChncm91cElkLCBwcmVzc2VkVHJpZ2dlcklkLCB0b2dnbGVDbGFzcykge1xuICAgICAgICBsZXQgcXVlcnkgPSBgWyR7dGhpcy5HUk9VUH09XCIke2dyb3VwSWR9XCJdWyR7dGhpcy5UUklHR0VSfV06bm90KFske3RoaXMuVFJJR0dFUn09XCIke3ByZXNzZWRUcmlnZ2VySWR9XCJdKWBcbiAgICAgICAgbGV0IGlkbGVUcmlnZ2VycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwocXVlcnkpO1xuXG4gICAgICAgIGlkbGVUcmlnZ2Vycy5mb3JFYWNoKChpZGxlVHJpZ2dlcj0+e1xuICAgICAgICAgICAgdGhpcy5yZW1vdmVDbGFzc0Zyb21UcmlnZ2VyZWRJdGVtKGlkbGVUcmlnZ2VyLCB0b2dnbGVDbGFzcyk7XG5cbiAgICAgICAgICAgIGxldCBhcmlhUHJlc3NlZCA9IGlkbGVUcmlnZ2VyLmdldEF0dHJpYnV0ZSh0aGlzLlBSRVNTRUQpO1xuXG4gICAgICAgICAgICBpZihhcmlhUHJlc3NlZCkgdGhpcy50b2dnbGVBcmlhUHJlc3NlZChhcmlhUHJlc3NlZCwgaWRsZVRyaWdnZXIsIHRydWUpO1xuICAgICAgICB9KSk7XG4gICAgfVxuXG4gICAgcmVtb3ZlQ2xhc3NGcm9tVHJpZ2dlcmVkSXRlbSAoaWRsZVRyaWdnZXIsIHRvZ2dsZUNsYXNzKSB7XG4gICAgICAgIGxldCBpZCA9IGlkbGVUcmlnZ2VyLmdldEF0dHJpYnV0ZSh0aGlzLlRSSUdHRVIpO1xuICAgICAgICBsZXQgdHJpZ2dlcmVkSXRlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYFske3RoaXMuSVRFTX09XCIke2lkfVwiXWApO1xuXG4gICAgICAgIHRyaWdnZXJlZEl0ZW0uY2xhc3NMaXN0LnJlbW92ZSh0b2dnbGVDbGFzcyk7XG4gICAgfVxuXG4gICAgdG9nZ2xlQXJpYVByZXNzZWQgKGFyaWFQcmVzc2VkLCBlbGVtZW50LCBpZGxlID0gZmFsc2UpIHtcbiAgICAgICAgaWYoYXJpYVByZXNzZWQgPT09ICdmYWxzZScgJiYgIWlkbGUpe1xuICAgICAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUodGhpcy5QUkVTU0VELCAndHJ1ZScpO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKHRoaXMuUFJFU1NFRCwgJ2ZhbHNlJyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhcHBseVRvZ2dsZSAoZXZlbnQgPSBudWxsKSB7XG4gICAgICAgIGxldCB0cmlnZ2VycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYFske3RoaXMuVFJJR0dFUn1dYCk7XG5cbiAgICAgICAgaWYoZXZlbnQpIHtcbiAgICAgICAgICAgIGxldCBuZXdUcmlnZ2VycyA9IFtdXG4gICAgICAgICAgICBldmVudC5mb3JFYWNoKChyZWNvcmQpPT57XG4gICAgICAgICAgICAgICAgcmVjb3JkLmFkZGVkTm9kZXMuZm9yRWFjaCgobm9kZSkgPT57XG4gICAgICAgICAgICAgICAgICAgIGlmKG5vZGUuZ2V0QXR0cmlidXRlICYmIG5vZGUuZ2V0QXR0cmlidXRlKCdqcy10b2dnbGUtdHJpZ2dlcicpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdUcmlnZ2Vycy5wdXNoKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB0cmlnZ2VycyA9IG5ld1RyaWdnZXJzO1xuICAgICAgICB9XG5cbiAgICAgICAgdHJpZ2dlcnMuZm9yRWFjaCggKHRyaWdnZXIpPT57XG4gICAgICAgICAgICB0cmlnZ2VyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHRyaWdnZXJJZCA9IHRyaWdnZXIuZ2V0QXR0cmlidXRlKHRoaXMuVFJJR0dFUik7XG4gICAgICAgICAgICAgICAgbGV0IGdyb3VwSWQgPSB0cmlnZ2VyLmdldEF0dHJpYnV0ZSh0aGlzLkdST1VQKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB0aGlzLnRvZ2dsZVByZXNzZWRUcmlnZ2VyKHRyaWdnZXJJZCwgZ3JvdXBJZCwgdHJpZ2dlcik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBvYnNlcnZlVHJpZ2dlcnMoKXtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCB8fCBkb2N1bWVudC5ib2R5O1xuICAgICAgICBjb25zdCBvYnNlcnZlck9wdGlvbnMgPSB7XG4gICAgICAgICAgICBjaGlsZExpc3Q6IHRydWUsXG4gICAgICAgICAgICBzdWJ0cmVlOiB0cnVlLFxuICAgICAgICB9O1xuIFxuICAgICAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKChldmVudCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5hcHBseVRvZ2dsZShldmVudCk7XG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShjb250YWluZXIsIG9ic2VydmVyT3B0aW9ucyk7ICAgIFxuICAgIH1cbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@helsingborg-stad/styleguide/source/js/toggle.js\n");

/***/ }),

/***/ "./node_modules/ansi-regex/index.js":
/*!******************************************!*\
  !*** ./node_modules/ansi-regex/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYW5zaS1yZWdleC9pbmRleC5qcz85ZWVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2QkFBNkIsWUFBWSxJQUFJLElBQUksTUFBTSxJQUFJO0FBQzNEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2Fuc2ktcmVnZXgvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcblx0cmV0dXJuIC9bXFx1MDAxYlxcdTAwOWJdW1soKSM7P10qKD86WzAtOV17MSw0fSg/OjtbMC05XXswLDR9KSopP1swLTlBLVBSWmNmLW5xcnk9PjxdL2c7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ansi-regex/index.js\n");

/***/ }),

/***/ "./node_modules/ansi-styles/index.js":
/*!*******************************************!*\
  !*** ./node_modules/ansi-styles/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nfunction assembleStyles () {\n\tvar styles = {\n\t\tmodifiers: {\n\t\t\treset: [0, 0],\n\t\t\tbold: [1, 22], // 21 isn't widely supported and 22 does the same thing\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolors: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39]\n\t\t},\n\t\tbgColors: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49]\n\t\t}\n\t};\n\n\t// fix humans\n\tstyles.colors.grey = styles.colors.gray;\n\n\tObject.keys(styles).forEach(function (groupName) {\n\t\tvar group = styles[groupName];\n\n\t\tObject.keys(group).forEach(function (styleName) {\n\t\t\tvar style = group[styleName];\n\n\t\t\tstyles[styleName] = group[styleName] = {\n\t\t\t\topen: '\\u001b[' + style[0] + 'm',\n\t\t\t\tclose: '\\u001b[' + style[1] + 'm'\n\t\t\t};\n\t\t});\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t});\n\n\treturn styles;\n}\n\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYW5zaS1zdHlsZXMvaW5kZXguanM/OGEzMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4Q0FBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFOztBQUVGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9hbnNpLXN0eWxlcy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gYXNzZW1ibGVTdHlsZXMgKCkge1xuXHR2YXIgc3R5bGVzID0ge1xuXHRcdG1vZGlmaWVyczoge1xuXHRcdFx0cmVzZXQ6IFswLCAwXSxcblx0XHRcdGJvbGQ6IFsxLCAyMl0sIC8vIDIxIGlzbid0IHdpZGVseSBzdXBwb3J0ZWQgYW5kIDIyIGRvZXMgdGhlIHNhbWUgdGhpbmdcblx0XHRcdGRpbTogWzIsIDIyXSxcblx0XHRcdGl0YWxpYzogWzMsIDIzXSxcblx0XHRcdHVuZGVybGluZTogWzQsIDI0XSxcblx0XHRcdGludmVyc2U6IFs3LCAyN10sXG5cdFx0XHRoaWRkZW46IFs4LCAyOF0sXG5cdFx0XHRzdHJpa2V0aHJvdWdoOiBbOSwgMjldXG5cdFx0fSxcblx0XHRjb2xvcnM6IHtcblx0XHRcdGJsYWNrOiBbMzAsIDM5XSxcblx0XHRcdHJlZDogWzMxLCAzOV0sXG5cdFx0XHRncmVlbjogWzMyLCAzOV0sXG5cdFx0XHR5ZWxsb3c6IFszMywgMzldLFxuXHRcdFx0Ymx1ZTogWzM0LCAzOV0sXG5cdFx0XHRtYWdlbnRhOiBbMzUsIDM5XSxcblx0XHRcdGN5YW46IFszNiwgMzldLFxuXHRcdFx0d2hpdGU6IFszNywgMzldLFxuXHRcdFx0Z3JheTogWzkwLCAzOV1cblx0XHR9LFxuXHRcdGJnQ29sb3JzOiB7XG5cdFx0XHRiZ0JsYWNrOiBbNDAsIDQ5XSxcblx0XHRcdGJnUmVkOiBbNDEsIDQ5XSxcblx0XHRcdGJnR3JlZW46IFs0MiwgNDldLFxuXHRcdFx0YmdZZWxsb3c6IFs0MywgNDldLFxuXHRcdFx0YmdCbHVlOiBbNDQsIDQ5XSxcblx0XHRcdGJnTWFnZW50YTogWzQ1LCA0OV0sXG5cdFx0XHRiZ0N5YW46IFs0NiwgNDldLFxuXHRcdFx0YmdXaGl0ZTogWzQ3LCA0OV1cblx0XHR9XG5cdH07XG5cblx0Ly8gZml4IGh1bWFuc1xuXHRzdHlsZXMuY29sb3JzLmdyZXkgPSBzdHlsZXMuY29sb3JzLmdyYXk7XG5cblx0T2JqZWN0LmtleXMoc3R5bGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChncm91cE5hbWUpIHtcblx0XHR2YXIgZ3JvdXAgPSBzdHlsZXNbZ3JvdXBOYW1lXTtcblxuXHRcdE9iamVjdC5rZXlzKGdyb3VwKS5mb3JFYWNoKGZ1bmN0aW9uIChzdHlsZU5hbWUpIHtcblx0XHRcdHZhciBzdHlsZSA9IGdyb3VwW3N0eWxlTmFtZV07XG5cblx0XHRcdHN0eWxlc1tzdHlsZU5hbWVdID0gZ3JvdXBbc3R5bGVOYW1lXSA9IHtcblx0XHRcdFx0b3BlbjogJ1xcdTAwMWJbJyArIHN0eWxlWzBdICsgJ20nLFxuXHRcdFx0XHRjbG9zZTogJ1xcdTAwMWJbJyArIHN0eWxlWzFdICsgJ20nXG5cdFx0XHR9O1xuXHRcdH0pO1xuXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KHN0eWxlcywgZ3JvdXBOYW1lLCB7XG5cdFx0XHR2YWx1ZTogZ3JvdXAsXG5cdFx0XHRlbnVtZXJhYmxlOiBmYWxzZVxuXHRcdH0pO1xuXHR9KTtcblxuXHRyZXR1cm4gc3R5bGVzO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCAnZXhwb3J0cycsIHtcblx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0Z2V0OiBhc3NlbWJsZVN0eWxlc1xufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ansi-styles/index.js\n");

/***/ }),

/***/ "./node_modules/chalk/index.js":
/*!*************************************!*\
  !*** ./node_modules/chalk/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\nvar escapeStringRegexp = __webpack_require__(/*! escape-string-regexp */ \"./node_modules/escape-string-regexp/index.js\");\nvar ansiStyles = __webpack_require__(/*! ansi-styles */ \"./node_modules/ansi-styles/index.js\");\nvar stripAnsi = __webpack_require__(/*! strip-ansi */ \"./node_modules/strip-ansi/index.js\");\nvar hasAnsi = __webpack_require__(/*! has-ansi */ \"./node_modules/has-ansi/index.js\");\nvar supportsColor = __webpack_require__(/*! supports-color */ \"./node_modules/supports-color/index.js\");\nvar defineProps = Object.defineProperties;\nvar isSimpleWindowsTerm = process.platform === 'win32' && !/^xterm/i.test(process.env.TERM);\n\nfunction Chalk(options) {\n\t// detect mode if not set manually\n\tthis.enabled = !options || options.enabled === undefined ? supportsColor : options.enabled;\n}\n\n// use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001b[94m';\n}\n\nvar styles = (function () {\n\tvar ret = {};\n\n\tObject.keys(ansiStyles).forEach(function (key) {\n\t\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\t\tret[key] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, this._styles.concat(key));\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n})();\n\nvar proto = defineProps(function chalk() {}, styles);\n\nfunction build(_styles) {\n\tvar builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder.enabled = this.enabled;\n\t// __proto__ is used because we must return a function, but there is\n\t// no way to create a function with a different prototype.\n\t/* eslint-disable no-proto */\n\tbuilder.__proto__ = proto;\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// support varags, but simply cast to string in case there's only one arg\n\tvar args = arguments;\n\tvar argsLen = args.length;\n\tvar str = argsLen !== 0 && String(arguments[0]);\n\n\tif (argsLen > 1) {\n\t\t// don't slice `arguments`, it prevents v8 optimizations\n\t\tfor (var a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || !str) {\n\t\treturn str;\n\t}\n\n\tvar nestedStyles = this._styles;\n\tvar i = nestedStyles.length;\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tvar originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && (nestedStyles.indexOf('gray') !== -1 || nestedStyles.indexOf('grey') !== -1)) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\twhile (i--) {\n\t\tvar code = ansiStyles[nestedStyles[i]];\n\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\t}\n\n\t// Reset the original 'dim' if we changed it to work around the Windows dimmed gray issue.\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction init() {\n\tvar ret = {};\n\n\tObject.keys(styles).forEach(function (name) {\n\t\tret[name] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, [name]);\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n}\n\ndefineProps(Chalk.prototype, init());\n\nmodule.exports = new Chalk();\nmodule.exports.styles = ansiStyles;\nmodule.exports.hasColor = hasAnsi;\nmodule.exports.stripColor = stripAnsi;\nmodule.exports.supportsColor = supportsColor;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2hhbGsvaW5kZXguanM/ZTA5NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQ0FBYTtBQUNiLHlCQUF5QixtQkFBTyxDQUFDLDBFQUFzQjtBQUN2RCxpQkFBaUIsbUJBQU8sQ0FBQyx3REFBYTtBQUN0QyxnQkFBZ0IsbUJBQU8sQ0FBQyxzREFBWTtBQUNwQyxjQUFjLG1CQUFPLENBQUMsa0RBQVU7QUFDaEMsb0JBQW9CLG1CQUFPLENBQUMsOERBQWdCO0FBQzVDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0EsQ0FBQzs7QUFFRCwyQ0FBMkM7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlCQUFpQixhQUFhO0FBQzlCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY2hhbGsvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgZXNjYXBlU3RyaW5nUmVnZXhwID0gcmVxdWlyZSgnZXNjYXBlLXN0cmluZy1yZWdleHAnKTtcbnZhciBhbnNpU3R5bGVzID0gcmVxdWlyZSgnYW5zaS1zdHlsZXMnKTtcbnZhciBzdHJpcEFuc2kgPSByZXF1aXJlKCdzdHJpcC1hbnNpJyk7XG52YXIgaGFzQW5zaSA9IHJlcXVpcmUoJ2hhcy1hbnNpJyk7XG52YXIgc3VwcG9ydHNDb2xvciA9IHJlcXVpcmUoJ3N1cHBvcnRzLWNvbG9yJyk7XG52YXIgZGVmaW5lUHJvcHMgPSBPYmplY3QuZGVmaW5lUHJvcGVydGllcztcbnZhciBpc1NpbXBsZVdpbmRvd3NUZXJtID0gcHJvY2Vzcy5wbGF0Zm9ybSA9PT0gJ3dpbjMyJyAmJiAhL154dGVybS9pLnRlc3QocHJvY2Vzcy5lbnYuVEVSTSk7XG5cbmZ1bmN0aW9uIENoYWxrKG9wdGlvbnMpIHtcblx0Ly8gZGV0ZWN0IG1vZGUgaWYgbm90IHNldCBtYW51YWxseVxuXHR0aGlzLmVuYWJsZWQgPSAhb3B0aW9ucyB8fCBvcHRpb25zLmVuYWJsZWQgPT09IHVuZGVmaW5lZCA/IHN1cHBvcnRzQ29sb3IgOiBvcHRpb25zLmVuYWJsZWQ7XG59XG5cbi8vIHVzZSBicmlnaHQgYmx1ZSBvbiBXaW5kb3dzIGFzIHRoZSBub3JtYWwgYmx1ZSBjb2xvciBpcyBpbGxlZ2libGVcbmlmIChpc1NpbXBsZVdpbmRvd3NUZXJtKSB7XG5cdGFuc2lTdHlsZXMuYmx1ZS5vcGVuID0gJ1xcdTAwMWJbOTRtJztcbn1cblxudmFyIHN0eWxlcyA9IChmdW5jdGlvbiAoKSB7XG5cdHZhciByZXQgPSB7fTtcblxuXHRPYmplY3Qua2V5cyhhbnNpU3R5bGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRhbnNpU3R5bGVzW2tleV0uY2xvc2VSZSA9IG5ldyBSZWdFeHAoZXNjYXBlU3RyaW5nUmVnZXhwKGFuc2lTdHlsZXNba2V5XS5jbG9zZSksICdnJyk7XG5cblx0XHRyZXRba2V5XSA9IHtcblx0XHRcdGdldDogZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRyZXR1cm4gYnVpbGQuY2FsbCh0aGlzLCB0aGlzLl9zdHlsZXMuY29uY2F0KGtleSkpO1xuXHRcdFx0fVxuXHRcdH07XG5cdH0pO1xuXG5cdHJldHVybiByZXQ7XG59KSgpO1xuXG52YXIgcHJvdG8gPSBkZWZpbmVQcm9wcyhmdW5jdGlvbiBjaGFsaygpIHt9LCBzdHlsZXMpO1xuXG5mdW5jdGlvbiBidWlsZChfc3R5bGVzKSB7XG5cdHZhciBidWlsZGVyID0gZnVuY3Rpb24gKCkge1xuXHRcdHJldHVybiBhcHBseVN0eWxlLmFwcGx5KGJ1aWxkZXIsIGFyZ3VtZW50cyk7XG5cdH07XG5cblx0YnVpbGRlci5fc3R5bGVzID0gX3N0eWxlcztcblx0YnVpbGRlci5lbmFibGVkID0gdGhpcy5lbmFibGVkO1xuXHQvLyBfX3Byb3RvX18gaXMgdXNlZCBiZWNhdXNlIHdlIG11c3QgcmV0dXJuIGEgZnVuY3Rpb24sIGJ1dCB0aGVyZSBpc1xuXHQvLyBubyB3YXkgdG8gY3JlYXRlIGEgZnVuY3Rpb24gd2l0aCBhIGRpZmZlcmVudCBwcm90b3R5cGUuXG5cdC8qIGVzbGludC1kaXNhYmxlIG5vLXByb3RvICovXG5cdGJ1aWxkZXIuX19wcm90b19fID0gcHJvdG87XG5cblx0cmV0dXJuIGJ1aWxkZXI7XG59XG5cbmZ1bmN0aW9uIGFwcGx5U3R5bGUoKSB7XG5cdC8vIHN1cHBvcnQgdmFyYWdzLCBidXQgc2ltcGx5IGNhc3QgdG8gc3RyaW5nIGluIGNhc2UgdGhlcmUncyBvbmx5IG9uZSBhcmdcblx0dmFyIGFyZ3MgPSBhcmd1bWVudHM7XG5cdHZhciBhcmdzTGVuID0gYXJncy5sZW5ndGg7XG5cdHZhciBzdHIgPSBhcmdzTGVuICE9PSAwICYmIFN0cmluZyhhcmd1bWVudHNbMF0pO1xuXG5cdGlmIChhcmdzTGVuID4gMSkge1xuXHRcdC8vIGRvbid0IHNsaWNlIGBhcmd1bWVudHNgLCBpdCBwcmV2ZW50cyB2OCBvcHRpbWl6YXRpb25zXG5cdFx0Zm9yICh2YXIgYSA9IDE7IGEgPCBhcmdzTGVuOyBhKyspIHtcblx0XHRcdHN0ciArPSAnICcgKyBhcmdzW2FdO1xuXHRcdH1cblx0fVxuXG5cdGlmICghdGhpcy5lbmFibGVkIHx8ICFzdHIpIHtcblx0XHRyZXR1cm4gc3RyO1xuXHR9XG5cblx0dmFyIG5lc3RlZFN0eWxlcyA9IHRoaXMuX3N0eWxlcztcblx0dmFyIGkgPSBuZXN0ZWRTdHlsZXMubGVuZ3RoO1xuXG5cdC8vIFR1cm5zIG91dCB0aGF0IG9uIFdpbmRvd3MgZGltbWVkIGdyYXkgdGV4dCBiZWNvbWVzIGludmlzaWJsZSBpbiBjbWQuZXhlLFxuXHQvLyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2NoYWxrL2NoYWxrL2lzc3Vlcy81OFxuXHQvLyBJZiB3ZSdyZSBvbiBXaW5kb3dzIGFuZCB3ZSdyZSBkZWFsaW5nIHdpdGggYSBncmF5IGNvbG9yLCB0ZW1wb3JhcmlseSBtYWtlICdkaW0nIGEgbm9vcC5cblx0dmFyIG9yaWdpbmFsRGltID0gYW5zaVN0eWxlcy5kaW0ub3Blbjtcblx0aWYgKGlzU2ltcGxlV2luZG93c1Rlcm0gJiYgKG5lc3RlZFN0eWxlcy5pbmRleE9mKCdncmF5JykgIT09IC0xIHx8IG5lc3RlZFN0eWxlcy5pbmRleE9mKCdncmV5JykgIT09IC0xKSkge1xuXHRcdGFuc2lTdHlsZXMuZGltLm9wZW4gPSAnJztcblx0fVxuXG5cdHdoaWxlIChpLS0pIHtcblx0XHR2YXIgY29kZSA9IGFuc2lTdHlsZXNbbmVzdGVkU3R5bGVzW2ldXTtcblxuXHRcdC8vIFJlcGxhY2UgYW55IGluc3RhbmNlcyBhbHJlYWR5IHByZXNlbnQgd2l0aCBhIHJlLW9wZW5pbmcgY29kZVxuXHRcdC8vIG90aGVyd2lzZSBvbmx5IHRoZSBwYXJ0IG9mIHRoZSBzdHJpbmcgdW50aWwgc2FpZCBjbG9zaW5nIGNvZGVcblx0XHQvLyB3aWxsIGJlIGNvbG9yZWQsIGFuZCB0aGUgcmVzdCB3aWxsIHNpbXBseSBiZSAncGxhaW4nLlxuXHRcdHN0ciA9IGNvZGUub3BlbiArIHN0ci5yZXBsYWNlKGNvZGUuY2xvc2VSZSwgY29kZS5vcGVuKSArIGNvZGUuY2xvc2U7XG5cdH1cblxuXHQvLyBSZXNldCB0aGUgb3JpZ2luYWwgJ2RpbScgaWYgd2UgY2hhbmdlZCBpdCB0byB3b3JrIGFyb3VuZCB0aGUgV2luZG93cyBkaW1tZWQgZ3JheSBpc3N1ZS5cblx0YW5zaVN0eWxlcy5kaW0ub3BlbiA9IG9yaWdpbmFsRGltO1xuXG5cdHJldHVybiBzdHI7XG59XG5cbmZ1bmN0aW9uIGluaXQoKSB7XG5cdHZhciByZXQgPSB7fTtcblxuXHRPYmplY3Qua2V5cyhzdHlsZXMpLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcblx0XHRyZXRbbmFtZV0gPSB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0cmV0dXJuIGJ1aWxkLmNhbGwodGhpcywgW25hbWVdKTtcblx0XHRcdH1cblx0XHR9O1xuXHR9KTtcblxuXHRyZXR1cm4gcmV0O1xufVxuXG5kZWZpbmVQcm9wcyhDaGFsay5wcm90b3R5cGUsIGluaXQoKSk7XG5cbm1vZHVsZS5leHBvcnRzID0gbmV3IENoYWxrKCk7XG5tb2R1bGUuZXhwb3J0cy5zdHlsZXMgPSBhbnNpU3R5bGVzO1xubW9kdWxlLmV4cG9ydHMuaGFzQ29sb3IgPSBoYXNBbnNpO1xubW9kdWxlLmV4cG9ydHMuc3RyaXBDb2xvciA9IHN0cmlwQW5zaTtcbm1vZHVsZS5leHBvcnRzLnN1cHBvcnRzQ29sb3IgPSBzdXBwb3J0c0NvbG9yO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/chalk/index.js\n");

/***/ }),

/***/ "./node_modules/desandro-matches-selector/matches-selector.js":
/*!********************************************************************!*\
  !*** ./node_modules/desandro-matches-selector/matches-selector.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * matchesSelector v2.0.2\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false */\n  'use strict';\n  // universal module definition\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory() {\n  'use strict';\n\n  var matchesMethod = ( function() {\n    var ElemProto = window.Element.prototype;\n    // check for the standard method name first\n    if ( ElemProto.matches ) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if ( ElemProto.matchesSelector ) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];\n\n    for ( var i=0; i < prefixes.length; i++ ) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if ( ElemProto[ method ] ) {\n        return method;\n      }\n    }\n  })();\n\n  return function matchesSelector( elem, selector ) {\n    return elem[ matchesMethod ]( selector );\n  };\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVzYW5kcm8tbWF0Y2hlcy1zZWxlY3Rvci9tYXRjaGVzLXNlbGVjdG9yLmpzP2M3NDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sSUFBeUM7QUFDaEQ7QUFDQSxJQUFJLG9DQUFRLE9BQU87QUFBQTtBQUFBO0FBQUE7QUFBQSxvR0FBRTtBQUNyQixHQUFHLE1BQU0sRUFNTjs7QUFFSCxDQUFDO0FBQ0Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixxQkFBcUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUEsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kZXNhbmRyby1tYXRjaGVzLXNlbGVjdG9yL21hdGNoZXMtc2VsZWN0b3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIG1hdGNoZXNTZWxlY3RvciB2Mi4wLjJcbiAqIG1hdGNoZXNTZWxlY3RvciggZWxlbWVudCwgJy5zZWxlY3RvcicgKVxuICogTUlUIGxpY2Vuc2VcbiAqL1xuXG4vKmpzaGludCBicm93c2VyOiB0cnVlLCBzdHJpY3Q6IHRydWUsIHVuZGVmOiB0cnVlLCB1bnVzZWQ6IHRydWUgKi9cblxuKCBmdW5jdGlvbiggd2luZG93LCBmYWN0b3J5ICkge1xuICAvKmdsb2JhbCBkZWZpbmU6IGZhbHNlLCBtb2R1bGU6IGZhbHNlICovXG4gICd1c2Ugc3RyaWN0JztcbiAgLy8gdW5pdmVyc2FsIG1vZHVsZSBkZWZpbml0aW9uXG4gIGlmICggdHlwZW9mIGRlZmluZSA9PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgKSB7XG4gICAgLy8gQU1EXG4gICAgZGVmaW5lKCBmYWN0b3J5ICk7XG4gIH0gZWxzZSBpZiAoIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMgKSB7XG4gICAgLy8gQ29tbW9uSlNcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBicm93c2VyIGdsb2JhbFxuICAgIHdpbmRvdy5tYXRjaGVzU2VsZWN0b3IgPSBmYWN0b3J5KCk7XG4gIH1cblxufSggd2luZG93LCBmdW5jdGlvbiBmYWN0b3J5KCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgdmFyIG1hdGNoZXNNZXRob2QgPSAoIGZ1bmN0aW9uKCkge1xuICAgIHZhciBFbGVtUHJvdG8gPSB3aW5kb3cuRWxlbWVudC5wcm90b3R5cGU7XG4gICAgLy8gY2hlY2sgZm9yIHRoZSBzdGFuZGFyZCBtZXRob2QgbmFtZSBmaXJzdFxuICAgIGlmICggRWxlbVByb3RvLm1hdGNoZXMgKSB7XG4gICAgICByZXR1cm4gJ21hdGNoZXMnO1xuICAgIH1cbiAgICAvLyBjaGVjayB1bi1wcmVmaXhlZFxuICAgIGlmICggRWxlbVByb3RvLm1hdGNoZXNTZWxlY3RvciApIHtcbiAgICAgIHJldHVybiAnbWF0Y2hlc1NlbGVjdG9yJztcbiAgICB9XG4gICAgLy8gY2hlY2sgdmVuZG9yIHByZWZpeGVzXG4gICAgdmFyIHByZWZpeGVzID0gWyAnd2Via2l0JywgJ21veicsICdtcycsICdvJyBdO1xuXG4gICAgZm9yICggdmFyIGk9MDsgaSA8IHByZWZpeGVzLmxlbmd0aDsgaSsrICkge1xuICAgICAgdmFyIHByZWZpeCA9IHByZWZpeGVzW2ldO1xuICAgICAgdmFyIG1ldGhvZCA9IHByZWZpeCArICdNYXRjaGVzU2VsZWN0b3InO1xuICAgICAgaWYgKCBFbGVtUHJvdG9bIG1ldGhvZCBdICkge1xuICAgICAgICByZXR1cm4gbWV0aG9kO1xuICAgICAgfVxuICAgIH1cbiAgfSkoKTtcblxuICByZXR1cm4gZnVuY3Rpb24gbWF0Y2hlc1NlbGVjdG9yKCBlbGVtLCBzZWxlY3RvciApIHtcbiAgICByZXR1cm4gZWxlbVsgbWF0Y2hlc01ldGhvZCBdKCBzZWxlY3RvciApO1xuICB9O1xuXG59KSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/desandro-matches-selector/matches-selector.js\n");

/***/ }),

/***/ "./node_modules/escape-string-regexp/index.js":
/*!****************************************************!*\
  !*** ./node_modules/escape-string-regexp/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZXNjYXBlLXN0cmluZy1yZWdleHAvaW5kZXguanM/YTMxOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4QkFBOEI7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXNjYXBlLXN0cmluZy1yZWdleHAvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBtYXRjaE9wZXJhdG9yc1JlID0gL1t8XFxcXHt9KClbXFxdXiQrKj8uXS9nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzdHIpIHtcblx0aWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYSBzdHJpbmcnKTtcblx0fVxuXG5cdHJldHVybiBzdHIucmVwbGFjZShtYXRjaE9wZXJhdG9yc1JlLCAnXFxcXCQmJyk7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/escape-string-regexp/index.js\n");

/***/ }),

/***/ "./node_modules/ev-emitter/ev-emitter.js":
/*!***********************************************!*\
  !*** ./node_modules/ev-emitter/ev-emitter.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( true ) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZXYtZW1pdHRlci9ldi1lbWl0dGVyLmpzPzA5NDkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLElBQXlDO0FBQ2hEO0FBQ0EsSUFBSSxvQ0FBUSxPQUFPO0FBQUE7QUFBQTtBQUFBO0FBQUEsb0dBQUU7QUFDckIsR0FBRyxNQUFNLEVBTU47O0FBRUgsQ0FBQzs7QUFFRDs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGdCQUFnQixzQkFBc0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ldi1lbWl0dGVyL2V2LWVtaXR0ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV2RW1pdHRlciB2MS4xLjBcbiAqIExpbCcgZXZlbnQgZW1pdHRlclxuICogTUlUIExpY2Vuc2VcbiAqL1xuXG4vKiBqc2hpbnQgdW51c2VkOiB0cnVlLCB1bmRlZjogdHJ1ZSwgc3RyaWN0OiB0cnVlICovXG5cbiggZnVuY3Rpb24oIGdsb2JhbCwgZmFjdG9yeSApIHtcbiAgLy8gdW5pdmVyc2FsIG1vZHVsZSBkZWZpbml0aW9uXG4gIC8qIGpzaGludCBzdHJpY3Q6IGZhbHNlICovIC8qIGdsb2JhbHMgZGVmaW5lLCBtb2R1bGUsIHdpbmRvdyAqL1xuICBpZiAoIHR5cGVvZiBkZWZpbmUgPT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kICkge1xuICAgIC8vIEFNRCAtIFJlcXVpcmVKU1xuICAgIGRlZmluZSggZmFjdG9yeSApO1xuICB9IGVsc2UgaWYgKCB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzICkge1xuICAgIC8vIENvbW1vbkpTIC0gQnJvd3NlcmlmeSwgV2VicGFja1xuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuICB9IGVsc2Uge1xuICAgIC8vIEJyb3dzZXIgZ2xvYmFsc1xuICAgIGdsb2JhbC5FdkVtaXR0ZXIgPSBmYWN0b3J5KCk7XG4gIH1cblxufSggdHlwZW9mIHdpbmRvdyAhPSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IHRoaXMsIGZ1bmN0aW9uKCkge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gRXZFbWl0dGVyKCkge31cblxudmFyIHByb3RvID0gRXZFbWl0dGVyLnByb3RvdHlwZTtcblxucHJvdG8ub24gPSBmdW5jdGlvbiggZXZlbnROYW1lLCBsaXN0ZW5lciApIHtcbiAgaWYgKCAhZXZlbnROYW1lIHx8ICFsaXN0ZW5lciApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgLy8gc2V0IGV2ZW50cyBoYXNoXG4gIHZhciBldmVudHMgPSB0aGlzLl9ldmVudHMgPSB0aGlzLl9ldmVudHMgfHwge307XG4gIC8vIHNldCBsaXN0ZW5lcnMgYXJyYXlcbiAgdmFyIGxpc3RlbmVycyA9IGV2ZW50c1sgZXZlbnROYW1lIF0gPSBldmVudHNbIGV2ZW50TmFtZSBdIHx8IFtdO1xuICAvLyBvbmx5IGFkZCBvbmNlXG4gIGlmICggbGlzdGVuZXJzLmluZGV4T2YoIGxpc3RlbmVyICkgPT0gLTEgKSB7XG4gICAgbGlzdGVuZXJzLnB1c2goIGxpc3RlbmVyICk7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbnByb3RvLm9uY2UgPSBmdW5jdGlvbiggZXZlbnROYW1lLCBsaXN0ZW5lciApIHtcbiAgaWYgKCAhZXZlbnROYW1lIHx8ICFsaXN0ZW5lciApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgLy8gYWRkIGV2ZW50XG4gIHRoaXMub24oIGV2ZW50TmFtZSwgbGlzdGVuZXIgKTtcbiAgLy8gc2V0IG9uY2UgZmxhZ1xuICAvLyBzZXQgb25jZUV2ZW50cyBoYXNoXG4gIHZhciBvbmNlRXZlbnRzID0gdGhpcy5fb25jZUV2ZW50cyA9IHRoaXMuX29uY2VFdmVudHMgfHwge307XG4gIC8vIHNldCBvbmNlTGlzdGVuZXJzIG9iamVjdFxuICB2YXIgb25jZUxpc3RlbmVycyA9IG9uY2VFdmVudHNbIGV2ZW50TmFtZSBdID0gb25jZUV2ZW50c1sgZXZlbnROYW1lIF0gfHwge307XG4gIC8vIHNldCBmbGFnXG4gIG9uY2VMaXN0ZW5lcnNbIGxpc3RlbmVyIF0gPSB0cnVlO1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxucHJvdG8ub2ZmID0gZnVuY3Rpb24oIGV2ZW50TmFtZSwgbGlzdGVuZXIgKSB7XG4gIHZhciBsaXN0ZW5lcnMgPSB0aGlzLl9ldmVudHMgJiYgdGhpcy5fZXZlbnRzWyBldmVudE5hbWUgXTtcbiAgaWYgKCAhbGlzdGVuZXJzIHx8ICFsaXN0ZW5lcnMubGVuZ3RoICkge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgaW5kZXggPSBsaXN0ZW5lcnMuaW5kZXhPZiggbGlzdGVuZXIgKTtcbiAgaWYgKCBpbmRleCAhPSAtMSApIHtcbiAgICBsaXN0ZW5lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5wcm90by5lbWl0RXZlbnQgPSBmdW5jdGlvbiggZXZlbnROYW1lLCBhcmdzICkge1xuICB2YXIgbGlzdGVuZXJzID0gdGhpcy5fZXZlbnRzICYmIHRoaXMuX2V2ZW50c1sgZXZlbnROYW1lIF07XG4gIGlmICggIWxpc3RlbmVycyB8fCAhbGlzdGVuZXJzLmxlbmd0aCApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgLy8gY29weSBvdmVyIHRvIGF2b2lkIGludGVyZmVyZW5jZSBpZiAub2ZmKCkgaW4gbGlzdGVuZXJcbiAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLnNsaWNlKDApO1xuICBhcmdzID0gYXJncyB8fCBbXTtcbiAgLy8gb25jZSBzdHVmZlxuICB2YXIgb25jZUxpc3RlbmVycyA9IHRoaXMuX29uY2VFdmVudHMgJiYgdGhpcy5fb25jZUV2ZW50c1sgZXZlbnROYW1lIF07XG5cbiAgZm9yICggdmFyIGk9MDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKyApIHtcbiAgICB2YXIgbGlzdGVuZXIgPSBsaXN0ZW5lcnNbaV1cbiAgICB2YXIgaXNPbmNlID0gb25jZUxpc3RlbmVycyAmJiBvbmNlTGlzdGVuZXJzWyBsaXN0ZW5lciBdO1xuICAgIGlmICggaXNPbmNlICkge1xuICAgICAgLy8gcmVtb3ZlIGxpc3RlbmVyXG4gICAgICAvLyByZW1vdmUgYmVmb3JlIHRyaWdnZXIgdG8gcHJldmVudCByZWN1cnNpb25cbiAgICAgIHRoaXMub2ZmKCBldmVudE5hbWUsIGxpc3RlbmVyICk7XG4gICAgICAvLyB1bnNldCBvbmNlIGZsYWdcbiAgICAgIGRlbGV0ZSBvbmNlTGlzdGVuZXJzWyBsaXN0ZW5lciBdO1xuICAgIH1cbiAgICAvLyB0cmlnZ2VyIGxpc3RlbmVyXG4gICAgbGlzdGVuZXIuYXBwbHkoIHRoaXMsIGFyZ3MgKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxucHJvdG8uYWxsT2ZmID0gZnVuY3Rpb24oKSB7XG4gIGRlbGV0ZSB0aGlzLl9ldmVudHM7XG4gIGRlbGV0ZSB0aGlzLl9vbmNlRXZlbnRzO1xufTtcblxucmV0dXJuIEV2RW1pdHRlcjtcblxufSkpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ev-emitter/ev-emitter.js\n");

/***/ }),

/***/ "./node_modules/fizzy-ui-utils/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/fizzy-ui-utils/utils.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Fizzy UI utils v2.0.7\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n      __webpack_require__(/*! desandro-matches-selector/matches-selector */ \"./node_modules/desandro-matches-selector/matches-selector.js\")\n    ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( matchesSelector ) {\n      return factory( window, matchesSelector );\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( window, matchesSelector ) {\n\n'use strict';\n\nvar utils = {};\n\n// ----- extend ----- //\n\n// extends objects\nutils.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\n// ----- modulo ----- //\n\nutils.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\n// ----- makeArray ----- //\n\nvar arraySlice = Array.prototype.slice;\n\n// turn element or nodeList into an array\nutils.makeArray = function( obj ) {\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    return obj;\n  }\n  // return empty array if undefined or null. #6\n  if ( obj === null || obj === undefined ) {\n    return [];\n  }\n\n  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n  if ( isArrayLike ) {\n    // convert nodeList to array\n    return arraySlice.call( obj );\n  }\n\n  // array of single index\n  return [ obj ];\n};\n\n// ----- removeFrom ----- //\n\nutils.removeFrom = function( ary, obj ) {\n  var index = ary.indexOf( obj );\n  if ( index != -1 ) {\n    ary.splice( index, 1 );\n  }\n};\n\n// ----- getParent ----- //\n\nutils.getParent = function( elem, selector ) {\n  while ( elem.parentNode && elem != document.body ) {\n    elem = elem.parentNode;\n    if ( matchesSelector( elem, selector ) ) {\n      return elem;\n    }\n  }\n};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\nutils.getQueryElement = function( elem ) {\n  if ( typeof elem == 'string' ) {\n    return document.querySelector( elem );\n  }\n  return elem;\n};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\nutils.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// ----- filterFindElements ----- //\n\nutils.filterFindElements = function( elems, selector ) {\n  // make array of elems\n  elems = utils.makeArray( elems );\n  var ffElems = [];\n\n  elems.forEach( function( elem ) {\n    // check that elem is an actual element\n    if ( !( elem instanceof HTMLElement ) ) {\n      return;\n    }\n    // add elem if no selector\n    if ( !selector ) {\n      ffElems.push( elem );\n      return;\n    }\n    // filter & find items if we have a selector\n    // filter\n    if ( matchesSelector( elem, selector ) ) {\n      ffElems.push( elem );\n    }\n    // find children\n    var childElems = elem.querySelectorAll( selector );\n    // concat childElems to filterFound array\n    for ( var i=0; i < childElems.length; i++ ) {\n      ffElems.push( childElems[i] );\n    }\n  });\n\n  return ffElems;\n};\n\n// ----- debounceMethod ----- //\n\nutils.debounceMethod = function( _class, methodName, threshold ) {\n  threshold = threshold || 100;\n  // original method\n  var method = _class.prototype[ methodName ];\n  var timeoutName = methodName + 'Timeout';\n\n  _class.prototype[ methodName ] = function() {\n    var timeout = this[ timeoutName ];\n    clearTimeout( timeout );\n\n    var args = arguments;\n    var _this = this;\n    this[ timeoutName ] = setTimeout( function() {\n      method.apply( _this, args );\n      delete _this[ timeoutName ];\n    }, threshold );\n  };\n};\n\n// ----- docReady ----- //\n\nutils.docReady = function( callback ) {\n  var readyState = document.readyState;\n  if ( readyState == 'complete' || readyState == 'interactive' ) {\n    // do async to allow for other scripts to run. metafizzy/flickity#441\n    setTimeout( callback );\n  } else {\n    document.addEventListener( 'DOMContentLoaded', callback );\n  }\n};\n\n// ----- htmlInit ----- //\n\n// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\nutils.toDashed = function( str ) {\n  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n    return $1 + '-' + $2;\n  }).toLowerCase();\n};\n\nvar console = window.console;\n/**\n * allow user to initialize classes via [data-namespace] or .js-namespace class\n * htmlInit( Widget, 'widgetName' )\n * options are parsed from data-namespace-options\n */\nutils.htmlInit = function( WidgetClass, namespace ) {\n  utils.docReady( function() {\n    var dashedNamespace = utils.toDashed( namespace );\n    var dataAttr = 'data-' + dashedNamespace;\n    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );\n    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );\n    var elems = utils.makeArray( dataAttrElems )\n      .concat( utils.makeArray( jsDashElems ) );\n    var dataOptionsAttr = dataAttr + '-options';\n    var jQuery = window.jQuery;\n\n    elems.forEach( function( elem ) {\n      var attr = elem.getAttribute( dataAttr ) ||\n        elem.getAttribute( dataOptionsAttr );\n      var options;\n      try {\n        options = attr && JSON.parse( attr );\n      } catch ( error ) {\n        // log error, do not initialize\n        if ( console ) {\n          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +\n          ': ' + error );\n        }\n        return;\n      }\n      // initialize\n      var instance = new WidgetClass( elem, options );\n      // make available via $().data('namespace')\n      if ( jQuery ) {\n        jQuery.data( elem, namespace, instance );\n      }\n    });\n\n  });\n};\n\n// -----  ----- //\n\nreturn utils;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/fizzy-ui-utils/utils.js\n");

/***/ }),

/***/ "./node_modules/get-size/get-size.js":
/*!*******************************************!*\
  !*** ./node_modules/get-size/get-size.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * getSize v2.0.3\n * measure size of elements\n * MIT license\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n/* globals console: false */\n\n( function( window, factory ) {\n  /* jshint strict: false */ /* globals define, module */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n})( window, function factory() {\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  var num = parseFloat( value );\n  // not a percent like '100%', and a number\n  var isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\nfunction noop() {}\n\nvar logError = typeof console == 'undefined' ? noop :\n  function( message ) {\n    console.error( message );\n  };\n\n// -------------------------- measurements -------------------------- //\n\nvar measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth'\n];\n\nvar measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  var size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0\n  };\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    size[ measurement ] = 0;\n  }\n  return size;\n}\n\n// -------------------------- getStyle -------------------------- //\n\n/**\n * getStyle, get style of element, check for Firefox bug\n * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction getStyle( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    logError( 'Style returned ' + style +\n      '. Are you running this code in a hidden iframe on Firefox? ' +\n      'See https://bit.ly/getsizebug1' );\n  }\n  return style;\n}\n\n// -------------------------- setup -------------------------- //\n\nvar isSetup = false;\n\nvar isBoxSizeOuter;\n\n/**\n * setup\n * check isBoxSizerOuter\n * do on first getSize() rather than on page load for Firefox bug\n */\nfunction setup() {\n  // setup once\n  if ( isSetup ) {\n    return;\n  }\n  isSetup = true;\n\n  // -------------------------- box sizing -------------------------- //\n\n  /**\n   * Chrome & Safari measure the outer-width on style.width on border-box elems\n   * IE11 & Firefox<29 measures the inner-width\n   */\n  var div = document.createElement('div');\n  div.style.width = '200px';\n  div.style.padding = '1px 2px 3px 4px';\n  div.style.borderStyle = 'solid';\n  div.style.borderWidth = '1px 2px 3px 4px';\n  div.style.boxSizing = 'border-box';\n\n  var body = document.body || document.documentElement;\n  body.appendChild( div );\n  var style = getStyle( div );\n  // round value for browser zoom. desandro/masonry#928\n  isBoxSizeOuter = Math.round( getStyleSize( style.width ) ) == 200;\n  getSize.isBoxSizeOuter = isBoxSizeOuter;\n\n  body.removeChild( div );\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  setup();\n\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelector( elem );\n  }\n\n  // do not proceed on non-objects\n  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {\n    return;\n  }\n\n  var style = getStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) {\n    return getZeroSize();\n  }\n\n  var size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    var value = style[ measurement ];\n    var num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  }\n\n  var paddingWidth = size.paddingLeft + size.paddingRight;\n  var paddingHeight = size.paddingTop + size.paddingBottom;\n  var marginWidth = size.marginLeft + size.marginRight;\n  var marginHeight = size.marginTop + size.marginBottom;\n  var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n  // overwrite width and height if we can get it from style\n  var styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n  }\n\n  var styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/get-size/get-size.js\n");

/***/ }),

/***/ "./node_modules/has-ansi/index.js":
/*!****************************************!*\
  !*** ./node_modules/has-ansi/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar ansiRegex = __webpack_require__(/*! ansi-regex */ \"./node_modules/ansi-regex/index.js\");\nvar re = new RegExp(ansiRegex().source); // remove the `g` flag\nmodule.exports = re.test.bind(re);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGFzLWFuc2kvaW5kZXguanM/N2Q4NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGdCQUFnQixtQkFBTyxDQUFDLHNEQUFZO0FBQ3BDLHdDQUF3QztBQUN4QyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9oYXMtYW5zaS9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBhbnNpUmVnZXggPSByZXF1aXJlKCdhbnNpLXJlZ2V4Jyk7XG52YXIgcmUgPSBuZXcgUmVnRXhwKGFuc2lSZWdleCgpLnNvdXJjZSk7IC8vIHJlbW92ZSB0aGUgYGdgIGZsYWdcbm1vZHVsZS5leHBvcnRzID0gcmUudGVzdC5iaW5kKHJlKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/has-ansi/index.js\n");

/***/ }),

/***/ "./node_modules/masonry-layout/masonry.js":
/*!************************************************!*\
  !*** ./node_modules/masonry-layout/masonry.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * Masonry v4.2.2\n * Cascading grid layout library\n * https://masonry.desandro.com\n * MIT License\n * by David DeSandro\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( true ) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n        __webpack_require__(/*! outlayer/outlayer */ \"./node_modules/outlayer/outlayer.js\"),\n        __webpack_require__(/*! get-size/get-size */ \"./node_modules/get-size/get-size.js\")\n      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( Outlayer, getSize ) {\n\n'use strict';\n\n// -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Masonry = Outlayer.create('masonry');\n  // isFitWidth -> fitWidth\n  Masonry.compatOptions.fitWidth = 'isFitWidth';\n\n  var proto = Masonry.prototype;\n\n  proto._resetLayout = function() {\n    this.getSize();\n    this._getMeasurement( 'columnWidth', 'outerWidth' );\n    this._getMeasurement( 'gutter', 'outerWidth' );\n    this.measureColumns();\n\n    // reset column Y\n    this.colYs = [];\n    for ( var i=0; i < this.cols; i++ ) {\n      this.colYs.push( 0 );\n    }\n\n    this.maxY = 0;\n    this.horizontalColIndex = 0;\n  };\n\n  proto.measureColumns = function() {\n    this.getContainerWidth();\n    // if columnWidth is 0, default to outerWidth of first item\n    if ( !this.columnWidth ) {\n      var firstItem = this.items[0];\n      var firstItemElem = firstItem && firstItem.element;\n      // columnWidth fall back to item of first element\n      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||\n        // if first elem has no width, default to size of container\n        this.containerWidth;\n    }\n\n    var columnWidth = this.columnWidth += this.gutter;\n\n    // calculate columns\n    var containerWidth = this.containerWidth + this.gutter;\n    var cols = containerWidth / columnWidth;\n    // fix rounding errors, typically with gutters\n    var excess = columnWidth - containerWidth % columnWidth;\n    // if overshoot is less than a pixel, round up, otherwise floor it\n    var mathMethod = excess && excess < 1 ? 'round' : 'floor';\n    cols = Math[ mathMethod ]( cols );\n    this.cols = Math.max( cols, 1 );\n  };\n\n  proto.getContainerWidth = function() {\n    // container is parent if fit width\n    var isFitWidth = this._getOption('fitWidth');\n    var container = isFitWidth ? this.element.parentNode : this.element;\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var size = getSize( container );\n    this.containerWidth = size && size.innerWidth;\n  };\n\n  proto._getItemLayoutPosition = function( item ) {\n    item.getSize();\n    // how many columns does this brick span\n    var remainder = item.size.outerWidth % this.columnWidth;\n    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\n    // round if off by 1 pixel, otherwise use ceil\n    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );\n    colSpan = Math.min( colSpan, this.cols );\n    // use horizontal or top column position\n    var colPosMethod = this.options.horizontalOrder ?\n      '_getHorizontalColPosition' : '_getTopColPosition';\n    var colPosition = this[ colPosMethod ]( colSpan, item );\n    // position the brick\n    var position = {\n      x: this.columnWidth * colPosition.col,\n      y: colPosition.y\n    };\n    // apply setHeight to necessary columns\n    var setHeight = colPosition.y + item.size.outerHeight;\n    var setMax = colSpan + colPosition.col;\n    for ( var i = colPosition.col; i < setMax; i++ ) {\n      this.colYs[i] = setHeight;\n    }\n\n    return position;\n  };\n\n  proto._getTopColPosition = function( colSpan ) {\n    var colGroup = this._getTopColGroup( colSpan );\n    // get the minimum Y value from the columns\n    var minimumY = Math.min.apply( Math, colGroup );\n\n    return {\n      col: colGroup.indexOf( minimumY ),\n      y: minimumY,\n    };\n  };\n\n  /**\n   * @param {Number} colSpan - number of columns the element spans\n   * @returns {Array} colGroup\n   */\n  proto._getTopColGroup = function( colSpan ) {\n    if ( colSpan < 2 ) {\n      // if brick spans only one column, use all the column Ys\n      return this.colYs;\n    }\n\n    var colGroup = [];\n    // how many different places could this brick fit horizontally\n    var groupCount = this.cols + 1 - colSpan;\n    // for each group potential horizontal position\n    for ( var i = 0; i < groupCount; i++ ) {\n      colGroup[i] = this._getColGroupY( i, colSpan );\n    }\n    return colGroup;\n  };\n\n  proto._getColGroupY = function( col, colSpan ) {\n    if ( colSpan < 2 ) {\n      return this.colYs[ col ];\n    }\n    // make an array of colY values for that one group\n    var groupColYs = this.colYs.slice( col, col + colSpan );\n    // and get the max value of the array\n    return Math.max.apply( Math, groupColYs );\n  };\n\n  // get column position based on horizontal index. #873\n  proto._getHorizontalColPosition = function( colSpan, item ) {\n    var col = this.horizontalColIndex % this.cols;\n    var isOver = colSpan > 1 && col + colSpan > this.cols;\n    // shift to next row if item can't fit on current row\n    col = isOver ? 0 : col;\n    // don't let zero-size items take up space\n    var hasSize = item.size.outerWidth && item.size.outerHeight;\n    this.horizontalColIndex = hasSize ? col + colSpan : this.horizontalColIndex;\n\n    return {\n      col: col,\n      y: this._getColGroupY( col, colSpan ),\n    };\n  };\n\n  proto._manageStamp = function( stamp ) {\n    var stampSize = getSize( stamp );\n    var offset = this._getElementOffset( stamp );\n    // get the columns that this stamp affects\n    var isOriginLeft = this._getOption('originLeft');\n    var firstX = isOriginLeft ? offset.left : offset.right;\n    var lastX = firstX + stampSize.outerWidth;\n    var firstCol = Math.floor( firstX / this.columnWidth );\n    firstCol = Math.max( 0, firstCol );\n    var lastCol = Math.floor( lastX / this.columnWidth );\n    // lastCol should not go over if multiple of columnWidth #425\n    lastCol -= lastX % this.columnWidth ? 0 : 1;\n    lastCol = Math.min( this.cols - 1, lastCol );\n    // set colYs to bottom of the stamp\n\n    var isOriginTop = this._getOption('originTop');\n    var stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +\n      stampSize.outerHeight;\n    for ( var i = firstCol; i <= lastCol; i++ ) {\n      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );\n    }\n  };\n\n  proto._getContainerSize = function() {\n    this.maxY = Math.max.apply( Math, this.colYs );\n    var size = {\n      height: this.maxY\n    };\n\n    if ( this._getOption('fitWidth') ) {\n      size.width = this._getContainerFitWidth();\n    }\n\n    return size;\n  };\n\n  proto._getContainerFitWidth = function() {\n    var unusedCols = 0;\n    // count unused columns\n    var i = this.cols;\n    while ( --i ) {\n      if ( this.colYs[i] !== 0 ) {\n        break;\n      }\n      unusedCols++;\n    }\n    // fit container to columns that have been used\n    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;\n  };\n\n  proto.needsResizeLayout = function() {\n    var previousWidth = this.containerWidth;\n    this.getContainerWidth();\n    return previousWidth != this.containerWidth;\n  };\n\n  return Masonry;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/masonry-layout/masonry.js\n");

/***/ }),

/***/ "./node_modules/outlayer/item.js":
/*!***************************************!*\
  !*** ./node_modules/outlayer/item.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Outlayer Item\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( true ) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n        __webpack_require__(/*! ev-emitter/ev-emitter */ \"./node_modules/ev-emitter/ev-emitter.js\"),\n        __webpack_require__(/*! get-size/get-size */ \"./node_modules/get-size/get-size.js\")\n      ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( EvEmitter, getSize ) {\n'use strict';\n\n// ----- helpers ----- //\n\nfunction isEmptyObj( obj ) {\n  for ( var prop in obj ) {\n    return false;\n  }\n  prop = null;\n  return true;\n}\n\n// -------------------------- CSS3 support -------------------------- //\n\n\nvar docElemStyle = document.documentElement.style;\n\nvar transitionProperty = typeof docElemStyle.transition == 'string' ?\n  'transition' : 'WebkitTransition';\nvar transformProperty = typeof docElemStyle.transform == 'string' ?\n  'transform' : 'WebkitTransform';\n\nvar transitionEndEvent = {\n  WebkitTransition: 'webkitTransitionEnd',\n  transition: 'transitionend'\n}[ transitionProperty ];\n\n// cache all vendor properties that could have vendor prefix\nvar vendorProperties = {\n  transform: transformProperty,\n  transition: transitionProperty,\n  transitionDuration: transitionProperty + 'Duration',\n  transitionProperty: transitionProperty + 'Property',\n  transitionDelay: transitionProperty + 'Delay'\n};\n\n// -------------------------- Item -------------------------- //\n\nfunction Item( element, layout ) {\n  if ( !element ) {\n    return;\n  }\n\n  this.element = element;\n  // parent layout class, i.e. Masonry, Isotope, or Packery\n  this.layout = layout;\n  this.position = {\n    x: 0,\n    y: 0\n  };\n\n  this._create();\n}\n\n// inherit EvEmitter\nvar proto = Item.prototype = Object.create( EvEmitter.prototype );\nproto.constructor = Item;\n\nproto._create = function() {\n  // transition objects\n  this._transn = {\n    ingProperties: {},\n    clean: {},\n    onEnd: {}\n  };\n\n  this.css({\n    position: 'absolute'\n  });\n};\n\n// trigger specified handler for event type\nproto.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * apply CSS styles to element\n * @param {Object} style\n */\nproto.css = function( style ) {\n  var elemStyle = this.element.style;\n\n  for ( var prop in style ) {\n    // use vendor property if available\n    var supportedProp = vendorProperties[ prop ] || prop;\n    elemStyle[ supportedProp ] = style[ prop ];\n  }\n};\n\n // measure position, and sets it\nproto.getPosition = function() {\n  var style = getComputedStyle( this.element );\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  var xValue = style[ isOriginLeft ? 'left' : 'right' ];\n  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];\n  var x = parseFloat( xValue );\n  var y = parseFloat( yValue );\n  // convert percent to pixels\n  var layoutSize = this.layout.size;\n  if ( xValue.indexOf('%') != -1 ) {\n    x = ( x / 100 ) * layoutSize.width;\n  }\n  if ( yValue.indexOf('%') != -1 ) {\n    y = ( y / 100 ) * layoutSize.height;\n  }\n  // clean up 'auto' or other non-integer values\n  x = isNaN( x ) ? 0 : x;\n  y = isNaN( y ) ? 0 : y;\n  // remove padding from measurement\n  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;\n  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;\n\n  this.position.x = x;\n  this.position.y = y;\n};\n\n// set settled position, apply padding\nproto.layoutPosition = function() {\n  var layoutSize = this.layout.size;\n  var style = {};\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n\n  // x\n  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';\n  var xProperty = isOriginLeft ? 'left' : 'right';\n  var xResetProperty = isOriginLeft ? 'right' : 'left';\n\n  var x = this.position.x + layoutSize[ xPadding ];\n  // set in percentage or pixels\n  style[ xProperty ] = this.getXValue( x );\n  // reset other property\n  style[ xResetProperty ] = '';\n\n  // y\n  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';\n  var yProperty = isOriginTop ? 'top' : 'bottom';\n  var yResetProperty = isOriginTop ? 'bottom' : 'top';\n\n  var y = this.position.y + layoutSize[ yPadding ];\n  // set in percentage or pixels\n  style[ yProperty ] = this.getYValue( y );\n  // reset other property\n  style[ yResetProperty ] = '';\n\n  this.css( style );\n  this.emitEvent( 'layout', [ this ] );\n};\n\nproto.getXValue = function( x ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && !isHorizontal ?\n    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';\n};\n\nproto.getYValue = function( y ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && isHorizontal ?\n    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';\n};\n\nproto._transitionTo = function( x, y ) {\n  this.getPosition();\n  // get current x & y from top/left\n  var curX = this.position.x;\n  var curY = this.position.y;\n\n  var didNotMove = x == this.position.x && y == this.position.y;\n\n  // save end position\n  this.setPosition( x, y );\n\n  // if did not move and not transitioning, just go to layout\n  if ( didNotMove && !this.isTransitioning ) {\n    this.layoutPosition();\n    return;\n  }\n\n  var transX = x - curX;\n  var transY = y - curY;\n  var transitionStyle = {};\n  transitionStyle.transform = this.getTranslate( transX, transY );\n\n  this.transition({\n    to: transitionStyle,\n    onTransitionEnd: {\n      transform: this.layoutPosition\n    },\n    isCleaning: true\n  });\n};\n\nproto.getTranslate = function( x, y ) {\n  // flip cooridinates if origin on right or bottom\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  x = isOriginLeft ? x : -x;\n  y = isOriginTop ? y : -y;\n  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n};\n\n// non transition + transform support\nproto.goTo = function( x, y ) {\n  this.setPosition( x, y );\n  this.layoutPosition();\n};\n\nproto.moveTo = proto._transitionTo;\n\nproto.setPosition = function( x, y ) {\n  this.position.x = parseFloat( x );\n  this.position.y = parseFloat( y );\n};\n\n// ----- transition ----- //\n\n/**\n * @param {Object} style - CSS\n * @param {Function} onTransitionEnd\n */\n\n// non transition, just trigger callback\nproto._nonTransition = function( args ) {\n  this.css( args.to );\n  if ( args.isCleaning ) {\n    this._removeStyles( args.to );\n  }\n  for ( var prop in args.onTransitionEnd ) {\n    args.onTransitionEnd[ prop ].call( this );\n  }\n};\n\n/**\n * proper transition\n * @param {Object} args - arguments\n *   @param {Object} to - style to transition to\n *   @param {Object} from - style to start transition from\n *   @param {Boolean} isCleaning - removes transition styles after transition\n *   @param {Function} onTransitionEnd - callback\n */\nproto.transition = function( args ) {\n  // redirect to nonTransition if no transition duration\n  if ( !parseFloat( this.layout.options.transitionDuration ) ) {\n    this._nonTransition( args );\n    return;\n  }\n\n  var _transition = this._transn;\n  // keep track of onTransitionEnd callback by css property\n  for ( var prop in args.onTransitionEnd ) {\n    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];\n  }\n  // keep track of properties that are transitioning\n  for ( prop in args.to ) {\n    _transition.ingProperties[ prop ] = true;\n    // keep track of properties to clean up when transition is done\n    if ( args.isCleaning ) {\n      _transition.clean[ prop ] = true;\n    }\n  }\n\n  // set from styles\n  if ( args.from ) {\n    this.css( args.from );\n    // force redraw. http://blog.alexmaccaw.com/css-transitions\n    var h = this.element.offsetHeight;\n    // hack for JSHint to hush about unused var\n    h = null;\n  }\n  // enable transition\n  this.enableTransition( args.to );\n  // set styles that are transitioning\n  this.css( args.to );\n\n  this.isTransitioning = true;\n\n};\n\n// dash before all cap letters, including first for\n// WebkitTransform => -webkit-transform\nfunction toDashedAll( str ) {\n  return str.replace( /([A-Z])/g, function( $1 ) {\n    return '-' + $1.toLowerCase();\n  });\n}\n\nvar transitionProps = 'opacity,' + toDashedAll( transformProperty );\n\nproto.enableTransition = function(/* style */) {\n  // HACK changing transitionProperty during a transition\n  // will cause transition to jump\n  if ( this.isTransitioning ) {\n    return;\n  }\n\n  // make `transition: foo, bar, baz` from style object\n  // HACK un-comment this when enableTransition can work\n  // while a transition is happening\n  // var transitionValues = [];\n  // for ( var prop in style ) {\n  //   // dash-ify camelCased properties like WebkitTransition\n  //   prop = vendorProperties[ prop ] || prop;\n  //   transitionValues.push( toDashedAll( prop ) );\n  // }\n  // munge number to millisecond, to match stagger\n  var duration = this.layout.options.transitionDuration;\n  duration = typeof duration == 'number' ? duration + 'ms' : duration;\n  // enable transition styles\n  this.css({\n    transitionProperty: transitionProps,\n    transitionDuration: duration,\n    transitionDelay: this.staggerDelay || 0\n  });\n  // listen for transition end event\n  this.element.addEventListener( transitionEndEvent, this, false );\n};\n\n// ----- events ----- //\n\nproto.onwebkitTransitionEnd = function( event ) {\n  this.ontransitionend( event );\n};\n\nproto.onotransitionend = function( event ) {\n  this.ontransitionend( event );\n};\n\n// properties that I munge to make my life easier\nvar dashedVendorProperties = {\n  '-webkit-transform': 'transform'\n};\n\nproto.ontransitionend = function( event ) {\n  // disregard bubbled events from children\n  if ( event.target !== this.element ) {\n    return;\n  }\n  var _transition = this._transn;\n  // get property name of transitioned property, convert to prefix-free\n  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;\n\n  // remove property that has completed transitioning\n  delete _transition.ingProperties[ propertyName ];\n  // check if any properties are still transitioning\n  if ( isEmptyObj( _transition.ingProperties ) ) {\n    // all properties have completed transitioning\n    this.disableTransition();\n  }\n  // clean style\n  if ( propertyName in _transition.clean ) {\n    // clean up style\n    this.element.style[ event.propertyName ] = '';\n    delete _transition.clean[ propertyName ];\n  }\n  // trigger onTransitionEnd callback\n  if ( propertyName in _transition.onEnd ) {\n    var onTransitionEnd = _transition.onEnd[ propertyName ];\n    onTransitionEnd.call( this );\n    delete _transition.onEnd[ propertyName ];\n  }\n\n  this.emitEvent( 'transitionEnd', [ this ] );\n};\n\nproto.disableTransition = function() {\n  this.removeTransitionStyles();\n  this.element.removeEventListener( transitionEndEvent, this, false );\n  this.isTransitioning = false;\n};\n\n/**\n * removes style property from element\n * @param {Object} style\n**/\nproto._removeStyles = function( style ) {\n  // clean up transition styles\n  var cleanStyle = {};\n  for ( var prop in style ) {\n    cleanStyle[ prop ] = '';\n  }\n  this.css( cleanStyle );\n};\n\nvar cleanTransitionStyle = {\n  transitionProperty: '',\n  transitionDuration: '',\n  transitionDelay: ''\n};\n\nproto.removeTransitionStyles = function() {\n  // remove transition\n  this.css( cleanTransitionStyle );\n};\n\n// ----- stagger ----- //\n\nproto.stagger = function( delay ) {\n  delay = isNaN( delay ) ? 0 : delay;\n  this.staggerDelay = delay + 'ms';\n};\n\n// ----- show/hide/remove ----- //\n\n// remove element from DOM\nproto.removeElem = function() {\n  this.element.parentNode.removeChild( this.element );\n  // remove display: none\n  this.css({ display: '' });\n  this.emitEvent( 'remove', [ this ] );\n};\n\nproto.remove = function() {\n  // just remove element if no transition support or no transition\n  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {\n    this.removeElem();\n    return;\n  }\n\n  // start transition\n  this.once( 'transitionEnd', function() {\n    this.removeElem();\n  });\n  this.hide();\n};\n\nproto.reveal = function() {\n  delete this.isHidden;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;\n\n  this.transition({\n    from: options.hiddenStyle,\n    to: options.visibleStyle,\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onRevealTransitionEnd = function() {\n  // check if still visible\n  // during transition, item may have been hidden\n  if ( !this.isHidden ) {\n    this.emitEvent('reveal');\n  }\n};\n\n/**\n * get style property use for hide/reveal transition end\n * @param {String} styleProperty - hiddenStyle/visibleStyle\n * @returns {String}\n */\nproto.getHideRevealTransitionEndProperty = function( styleProperty ) {\n  var optionStyle = this.layout.options[ styleProperty ];\n  // use opacity\n  if ( optionStyle.opacity ) {\n    return 'opacity';\n  }\n  // get first property\n  for ( var prop in optionStyle ) {\n    return prop;\n  }\n};\n\nproto.hide = function() {\n  // set flag\n  this.isHidden = true;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;\n\n  this.transition({\n    from: options.visibleStyle,\n    to: options.hiddenStyle,\n    // keep hidden stuff hidden\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onHideTransitionEnd = function() {\n  // check if still hidden\n  // during transition, item may have been un-hidden\n  if ( this.isHidden ) {\n    this.css({ display: 'none' });\n    this.emitEvent('hide');\n  }\n};\n\nproto.destroy = function() {\n  this.css({\n    position: '',\n    left: '',\n    right: '',\n    top: '',\n    bottom: '',\n    transition: '',\n    transform: ''\n  });\n};\n\nreturn Item;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/outlayer/item.js\n");

/***/ }),

/***/ "./node_modules/outlayer/outlayer.js":
/*!*******************************************!*\
  !*** ./node_modules/outlayer/outlayer.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * Outlayer v2.1.1\n * the brains and guts of a layout library\n * MIT license\n */\n\n( function( window, factory ) {\n  'use strict';\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( true ) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n        __webpack_require__(/*! ev-emitter/ev-emitter */ \"./node_modules/ev-emitter/ev-emitter.js\"),\n        __webpack_require__(/*! get-size/get-size */ \"./node_modules/get-size/get-size.js\"),\n        __webpack_require__(/*! fizzy-ui-utils/utils */ \"./node_modules/fizzy-ui-utils/utils.js\"),\n        __webpack_require__(/*! ./item */ \"./node_modules/outlayer/item.js\")\n      ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( EvEmitter, getSize, utils, Item ) {\n        return factory( window, EvEmitter, getSize, utils, Item);\n      }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( window, function factory( window, EvEmitter, getSize, utils, Item ) {\n'use strict';\n\n// ----- vars ----- //\n\nvar console = window.console;\nvar jQuery = window.jQuery;\nvar noop = function() {};\n\n// -------------------------- Outlayer -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Outlayer intances\nvar instances = {};\n\n\n/**\n * @param {Element, String} element\n * @param {Object} options\n * @constructor\n */\nfunction Outlayer( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for ' + this.constructor.namespace +\n        ': ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // add id for Outlayer.getFromElement\n  var id = ++GUID;\n  this.element.outlayerGUID = id; // expando\n  instances[ id ] = this; // associate via id\n\n  // kick it off\n  this._create();\n\n  var isInitLayout = this._getOption('initLayout');\n  if ( isInitLayout ) {\n    this.layout();\n  }\n}\n\n// settings are for internal use only\nOutlayer.namespace = 'outlayer';\nOutlayer.Item = Item;\n\n// default options\nOutlayer.defaults = {\n  containerStyle: {\n    position: 'relative'\n  },\n  initLayout: true,\n  originLeft: true,\n  originTop: true,\n  resize: true,\n  resizeContainer: true,\n  // item options\n  transitionDuration: '0.4s',\n  hiddenStyle: {\n    opacity: 0,\n    transform: 'scale(0.001)'\n  },\n  visibleStyle: {\n    opacity: 1,\n    transform: 'scale(1)'\n  }\n};\n\nvar proto = Outlayer.prototype;\n// inherit EvEmitter\nutils.extend( proto, EvEmitter.prototype );\n\n/**\n * set options\n * @param {Object} opts\n */\nproto.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\n/**\n * get backwards compatible option value, check old name\n */\nproto._getOption = function( option ) {\n  var oldOption = this.constructor.compatOptions[ option ];\n  return oldOption && this.options[ oldOption ] !== undefined ?\n    this.options[ oldOption ] : this.options[ option ];\n};\n\nOutlayer.compatOptions = {\n  // currentName: oldName\n  initLayout: 'isInitLayout',\n  horizontal: 'isHorizontal',\n  layoutInstant: 'isLayoutInstant',\n  originLeft: 'isOriginLeft',\n  originTop: 'isOriginTop',\n  resize: 'isResizeBound',\n  resizeContainer: 'isResizingContainer'\n};\n\nproto._create = function() {\n  // get items from children\n  this.reloadItems();\n  // elements that affect layout, but are not laid out\n  this.stamps = [];\n  this.stamp( this.options.stamp );\n  // set container style\n  utils.extend( this.element.style, this.options.containerStyle );\n\n  // bind resize method\n  var canBindResize = this._getOption('resize');\n  if ( canBindResize ) {\n    this.bindResize();\n  }\n};\n\n// goes through all children again and gets bricks in proper order\nproto.reloadItems = function() {\n  // collection of item elements\n  this.items = this._itemize( this.element.children );\n};\n\n\n/**\n * turn elements into Outlayer.Items to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - collection of new Outlayer Items\n */\nproto._itemize = function( elems ) {\n\n  var itemElems = this._filterFindItemElements( elems );\n  var Item = this.constructor.Item;\n\n  // create new Outlayer Items for collection\n  var items = [];\n  for ( var i=0; i < itemElems.length; i++ ) {\n    var elem = itemElems[i];\n    var item = new Item( elem, this );\n    items.push( item );\n  }\n\n  return items;\n};\n\n/**\n * get item elements to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - item elements\n */\nproto._filterFindItemElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.itemSelector );\n};\n\n/**\n * getter method for getting item elements\n * @returns {Array} elems - collection of item elements\n */\nproto.getItemElements = function() {\n  return this.items.map( function( item ) {\n    return item.element;\n  });\n};\n\n// ----- init & layout ----- //\n\n/**\n * lays out all items\n */\nproto.layout = function() {\n  this._resetLayout();\n  this._manageStamps();\n\n  // don't animate first layout\n  var layoutInstant = this._getOption('layoutInstant');\n  var isInstant = layoutInstant !== undefined ?\n    layoutInstant : !this._isLayoutInited;\n  this.layoutItems( this.items, isInstant );\n\n  // flag for initalized\n  this._isLayoutInited = true;\n};\n\n// _init is alias for layout\nproto._init = proto.layout;\n\n/**\n * logic before any new layout\n */\nproto._resetLayout = function() {\n  this.getSize();\n};\n\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * get measurement from option, for columnWidth, rowHeight, gutter\n * if option is String -> get element from selector string, & get size of element\n * if option is Element -> get size of element\n * else use option as a number\n *\n * @param {String} measurement\n * @param {String} size - width or height\n * @private\n */\nproto._getMeasurement = function( measurement, size ) {\n  var option = this.options[ measurement ];\n  var elem;\n  if ( !option ) {\n    // default to 0\n    this[ measurement ] = 0;\n  } else {\n    // use option as an element\n    if ( typeof option == 'string' ) {\n      elem = this.element.querySelector( option );\n    } else if ( option instanceof HTMLElement ) {\n      elem = option;\n    }\n    // use size of element, if element\n    this[ measurement ] = elem ? getSize( elem )[ size ] : option;\n  }\n};\n\n/**\n * layout a collection of item elements\n * @api public\n */\nproto.layoutItems = function( items, isInstant ) {\n  items = this._getItemsForLayout( items );\n\n  this._layoutItems( items, isInstant );\n\n  this._postLayout();\n};\n\n/**\n * get the items to be laid out\n * you may want to skip over some items\n * @param {Array} items\n * @returns {Array} items\n */\nproto._getItemsForLayout = function( items ) {\n  return items.filter( function( item ) {\n    return !item.isIgnored;\n  });\n};\n\n/**\n * layout items\n * @param {Array} items\n * @param {Boolean} isInstant\n */\nproto._layoutItems = function( items, isInstant ) {\n  this._emitCompleteOnItems( 'layout', items );\n\n  if ( !items || !items.length ) {\n    // no items, emit event with empty array\n    return;\n  }\n\n  var queue = [];\n\n  items.forEach( function( item ) {\n    // get x/y object from method\n    var position = this._getItemLayoutPosition( item );\n    // enqueue\n    position.item = item;\n    position.isInstant = isInstant || item.isLayoutInstant;\n    queue.push( position );\n  }, this );\n\n  this._processLayoutQueue( queue );\n};\n\n/**\n * get item layout position\n * @param {Outlayer.Item} item\n * @returns {Object} x and y position\n */\nproto._getItemLayoutPosition = function( /* item */ ) {\n  return {\n    x: 0,\n    y: 0\n  };\n};\n\n/**\n * iterate over array and position each item\n * Reason being - separating this logic prevents 'layout invalidation'\n * thx @paul_irish\n * @param {Array} queue\n */\nproto._processLayoutQueue = function( queue ) {\n  this.updateStagger();\n  queue.forEach( function( obj, i ) {\n    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );\n  }, this );\n};\n\n// set stagger from option in milliseconds number\nproto.updateStagger = function() {\n  var stagger = this.options.stagger;\n  if ( stagger === null || stagger === undefined ) {\n    this.stagger = 0;\n    return;\n  }\n  this.stagger = getMilliseconds( stagger );\n  return this.stagger;\n};\n\n/**\n * Sets position of item in DOM\n * @param {Outlayer.Item} item\n * @param {Number} x - horizontal position\n * @param {Number} y - vertical position\n * @param {Boolean} isInstant - disables transitions\n */\nproto._positionItem = function( item, x, y, isInstant, i ) {\n  if ( isInstant ) {\n    // if not transition, just set CSS\n    item.goTo( x, y );\n  } else {\n    item.stagger( i * this.stagger );\n    item.moveTo( x, y );\n  }\n};\n\n/**\n * Any logic you want to do after each layout,\n * i.e. size the container\n */\nproto._postLayout = function() {\n  this.resizeContainer();\n};\n\nproto.resizeContainer = function() {\n  var isResizingContainer = this._getOption('resizeContainer');\n  if ( !isResizingContainer ) {\n    return;\n  }\n  var size = this._getContainerSize();\n  if ( size ) {\n    this._setContainerMeasure( size.width, true );\n    this._setContainerMeasure( size.height, false );\n  }\n};\n\n/**\n * Sets width or height of container if returned\n * @returns {Object} size\n *   @param {Number} width\n *   @param {Number} height\n */\nproto._getContainerSize = noop;\n\n/**\n * @param {Number} measure - size of width or height\n * @param {Boolean} isWidth\n */\nproto._setContainerMeasure = function( measure, isWidth ) {\n  if ( measure === undefined ) {\n    return;\n  }\n\n  var elemSize = this.size;\n  // add padding and border width if border box\n  if ( elemSize.isBorderBox ) {\n    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +\n      elemSize.borderLeftWidth + elemSize.borderRightWidth :\n      elemSize.paddingBottom + elemSize.paddingTop +\n      elemSize.borderTopWidth + elemSize.borderBottomWidth;\n  }\n\n  measure = Math.max( measure, 0 );\n  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';\n};\n\n/**\n * emit eventComplete on a collection of items events\n * @param {String} eventName\n * @param {Array} items - Outlayer.Items\n */\nproto._emitCompleteOnItems = function( eventName, items ) {\n  var _this = this;\n  function onComplete() {\n    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );\n  }\n\n  var count = items.length;\n  if ( !items || !count ) {\n    onComplete();\n    return;\n  }\n\n  var doneCount = 0;\n  function tick() {\n    doneCount++;\n    if ( doneCount == count ) {\n      onComplete();\n    }\n  }\n\n  // bind callback\n  items.forEach( function( item ) {\n    item.once( eventName, tick );\n  });\n};\n\n/**\n * emits events via EvEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  // add original event to arguments\n  var emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery ) {\n    // set this.$element\n    this.$element = this.$element || jQuery( this.element );\n    if ( event ) {\n      // create jQuery event\n      var $event = jQuery.Event( event );\n      $event.type = type;\n      this.$element.trigger( $event, args );\n    } else {\n      // just trigger with type if no event available\n      this.$element.trigger( type, args );\n    }\n  }\n};\n\n// -------------------------- ignore & stamps -------------------------- //\n\n\n/**\n * keep item in collection, but do not lay it out\n * ignored items do not get skipped in layout\n * @param {Element} elem\n */\nproto.ignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    item.isIgnored = true;\n  }\n};\n\n/**\n * return item to layout collection\n * @param {Element} elem\n */\nproto.unignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    delete item.isIgnored;\n  }\n};\n\n/**\n * adds elements to stamps\n * @param {NodeList, Array, Element, or String} elems\n */\nproto.stamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ) {\n    return;\n  }\n\n  this.stamps = this.stamps.concat( elems );\n  // ignore\n  elems.forEach( this.ignore, this );\n};\n\n/**\n * removes elements to stamps\n * @param {NodeList, Array, or Element} elems\n */\nproto.unstamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ){\n    return;\n  }\n\n  elems.forEach( function( elem ) {\n    // filter out removed stamp elements\n    utils.removeFrom( this.stamps, elem );\n    this.unignore( elem );\n  }, this );\n};\n\n/**\n * finds child elements\n * @param {NodeList, Array, Element, or String} elems\n * @returns {Array} elems\n */\nproto._find = function( elems ) {\n  if ( !elems ) {\n    return;\n  }\n  // if string, use argument as selector string\n  if ( typeof elems == 'string' ) {\n    elems = this.element.querySelectorAll( elems );\n  }\n  elems = utils.makeArray( elems );\n  return elems;\n};\n\nproto._manageStamps = function() {\n  if ( !this.stamps || !this.stamps.length ) {\n    return;\n  }\n\n  this._getBoundingRect();\n\n  this.stamps.forEach( this._manageStamp, this );\n};\n\n// update boundingLeft / Top\nproto._getBoundingRect = function() {\n  // get bounding rect for container element\n  var boundingRect = this.element.getBoundingClientRect();\n  var size = this.size;\n  this._boundingRect = {\n    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,\n    top: boundingRect.top + size.paddingTop + size.borderTopWidth,\n    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),\n    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )\n  };\n};\n\n/**\n * @param {Element} stamp\n**/\nproto._manageStamp = noop;\n\n/**\n * get x/y position of element relative to container element\n * @param {Element} elem\n * @returns {Object} offset - has left, top, right, bottom\n */\nproto._getElementOffset = function( elem ) {\n  var boundingRect = elem.getBoundingClientRect();\n  var thisRect = this._boundingRect;\n  var size = getSize( elem );\n  var offset = {\n    left: boundingRect.left - thisRect.left - size.marginLeft,\n    top: boundingRect.top - thisRect.top - size.marginTop,\n    right: thisRect.right - boundingRect.right - size.marginRight,\n    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom\n  };\n  return offset;\n};\n\n// -------------------------- resize -------------------------- //\n\n// enable event handlers for listeners\n// i.e. resize -> onresize\nproto.handleEvent = utils.handleEvent;\n\n/**\n * Bind layout to window resizing\n */\nproto.bindResize = function() {\n  window.addEventListener( 'resize', this );\n  this.isResizeBound = true;\n};\n\n/**\n * Unbind layout to window resizing\n */\nproto.unbindResize = function() {\n  window.removeEventListener( 'resize', this );\n  this.isResizeBound = false;\n};\n\nproto.onresize = function() {\n  this.resize();\n};\n\nutils.debounceMethod( Outlayer, 'onresize', 100 );\n\nproto.resize = function() {\n  // don't trigger if size did not change\n  // or if resize was unbound. See #9\n  if ( !this.isResizeBound || !this.needsResizeLayout() ) {\n    return;\n  }\n\n  this.layout();\n};\n\n/**\n * check if layout is needed post layout\n * @returns Boolean\n */\nproto.needsResizeLayout = function() {\n  var size = getSize( this.element );\n  // check that this.size and size are there\n  // IE8 triggers resize on body size change, so they might not be\n  var hasSizes = this.size && size;\n  return hasSizes && size.innerWidth !== this.size.innerWidth;\n};\n\n// -------------------------- methods -------------------------- //\n\n/**\n * add items to Outlayer instance\n * @param {Array or NodeList or Element} elems\n * @returns {Array} items - Outlayer.Items\n**/\nproto.addItems = function( elems ) {\n  var items = this._itemize( elems );\n  // add items to collection\n  if ( items.length ) {\n    this.items = this.items.concat( items );\n  }\n  return items;\n};\n\n/**\n * Layout newly-appended item elements\n * @param {Array or NodeList or Element} elems\n */\nproto.appended = function( elems ) {\n  var items = this.addItems( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // layout and reveal just the new items\n  this.layoutItems( items, true );\n  this.reveal( items );\n};\n\n/**\n * Layout prepended elements\n * @param {Array or NodeList or Element} elems\n */\nproto.prepended = function( elems ) {\n  var items = this._itemize( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // add items to beginning of collection\n  var previousItems = this.items.slice(0);\n  this.items = items.concat( previousItems );\n  // start new layout\n  this._resetLayout();\n  this._manageStamps();\n  // layout new stuff without transition\n  this.layoutItems( items, true );\n  this.reveal( items );\n  // layout previous items\n  this.layoutItems( previousItems );\n};\n\n/**\n * reveal a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.reveal = function( items ) {\n  this._emitCompleteOnItems( 'reveal', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.reveal();\n  });\n};\n\n/**\n * hide a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.hide = function( items ) {\n  this._emitCompleteOnItems( 'hide', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.hide();\n  });\n};\n\n/**\n * reveal item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.revealItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.reveal( items );\n};\n\n/**\n * hide item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.hideItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.hide( items );\n};\n\n/**\n * get Outlayer.Item, given an Element\n * @param {Element} elem\n * @param {Function} callback\n * @returns {Outlayer.Item} item\n */\nproto.getItem = function( elem ) {\n  // loop through items to get the one that matches\n  for ( var i=0; i < this.items.length; i++ ) {\n    var item = this.items[i];\n    if ( item.element == elem ) {\n      // return item\n      return item;\n    }\n  }\n};\n\n/**\n * get collection of Outlayer.Items, given Elements\n * @param {Array} elems\n * @returns {Array} items - Outlayer.Items\n */\nproto.getItems = function( elems ) {\n  elems = utils.makeArray( elems );\n  var items = [];\n  elems.forEach( function( elem ) {\n    var item = this.getItem( elem );\n    if ( item ) {\n      items.push( item );\n    }\n  }, this );\n\n  return items;\n};\n\n/**\n * remove element(s) from instance and DOM\n * @param {Array or NodeList or Element} elems\n */\nproto.remove = function( elems ) {\n  var removeItems = this.getItems( elems );\n\n  this._emitCompleteOnItems( 'remove', removeItems );\n\n  // bail if no items to remove\n  if ( !removeItems || !removeItems.length ) {\n    return;\n  }\n\n  removeItems.forEach( function( item ) {\n    item.remove();\n    // remove item from collection\n    utils.removeFrom( this.items, item );\n  }, this );\n};\n\n// ----- destroy ----- //\n\n// remove and disable Outlayer instance\nproto.destroy = function() {\n  // clean up dynamic styles\n  var style = this.element.style;\n  style.height = '';\n  style.position = '';\n  style.width = '';\n  // destroy items\n  this.items.forEach( function( item ) {\n    item.destroy();\n  });\n\n  this.unbindResize();\n\n  var id = this.element.outlayerGUID;\n  delete instances[ id ]; // remove reference to instance by id\n  delete this.element.outlayerGUID;\n  // remove data for jQuery\n  if ( jQuery ) {\n    jQuery.removeData( this.element, this.constructor.namespace );\n  }\n\n};\n\n// -------------------------- data -------------------------- //\n\n/**\n * get Outlayer instance from element\n * @param {Element} elem\n * @returns {Outlayer}\n */\nOutlayer.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.outlayerGUID;\n  return id && instances[ id ];\n};\n\n\n// -------------------------- create Outlayer class -------------------------- //\n\n/**\n * create a layout class\n * @param {String} namespace\n */\nOutlayer.create = function( namespace, options ) {\n  // sub-class Outlayer\n  var Layout = subclass( Outlayer );\n  // apply new options and compatOptions\n  Layout.defaults = utils.extend( {}, Outlayer.defaults );\n  utils.extend( Layout.defaults, options );\n  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );\n\n  Layout.namespace = namespace;\n\n  Layout.data = Outlayer.data;\n\n  // sub-class Item\n  Layout.Item = subclass( Item );\n\n  // -------------------------- declarative -------------------------- //\n\n  utils.htmlInit( Layout, namespace );\n\n  // -------------------------- jQuery bridge -------------------------- //\n\n  // make into jQuery plugin\n  if ( jQuery && jQuery.bridget ) {\n    jQuery.bridget( namespace, Layout );\n  }\n\n  return Layout;\n};\n\nfunction subclass( Parent ) {\n  function SubClass() {\n    Parent.apply( this, arguments );\n  }\n\n  SubClass.prototype = Object.create( Parent.prototype );\n  SubClass.prototype.constructor = SubClass;\n\n  return SubClass;\n}\n\n// ----- helpers ----- //\n\n// how many milliseconds are in each unit\nvar msUnits = {\n  ms: 1,\n  s: 1000\n};\n\n// munge time-like parameter into millisecond number\n// '0.4s' -> 40\nfunction getMilliseconds( time ) {\n  if ( typeof time == 'number' ) {\n    return time;\n  }\n  var matches = time.match( /(^\\d*\\.?\\d*)(\\w*)/ );\n  var num = matches && matches[1];\n  var unit = matches && matches[2];\n  if ( !num.length ) {\n    return 0;\n  }\n  num = parseFloat( num );\n  var mult = msUnits[ unit ] || 1;\n  return num * mult;\n}\n\n// ----- fin ----- //\n\n// back in global\nOutlayer.Item = Item;\n\nreturn Outlayer;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/outlayer/outlayer.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : undefined\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "./node_modules/strip-ansi/index.js":
/*!******************************************!*\
  !*** ./node_modules/strip-ansi/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar ansiRegex = __webpack_require__(/*! ansi-regex */ \"./node_modules/ansi-regex/index.js\")();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3RyaXAtYW5zaS9pbmRleC5qcz83NjcxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsZ0JBQWdCLG1CQUFPLENBQUMsc0RBQVk7O0FBRXBDO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zdHJpcC1hbnNpL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIGFuc2lSZWdleCA9IHJlcXVpcmUoJ2Fuc2ktcmVnZXgnKSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzdHIpIHtcblx0cmV0dXJuIHR5cGVvZiBzdHIgPT09ICdzdHJpbmcnID8gc3RyLnJlcGxhY2UoYW5zaVJlZ2V4LCAnJykgOiBzdHI7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/strip-ansi/index.js\n");

/***/ }),

/***/ "./node_modules/supports-color/index.js":
/*!**********************************************!*\
  !*** ./node_modules/supports-color/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\nvar argv = process.argv;\n\nvar terminator = argv.indexOf('--');\nvar hasFlag = function (flag) {\n\tflag = '--' + flag;\n\tvar pos = argv.indexOf(flag);\n\treturn pos !== -1 && (terminator !== -1 ? pos < terminator : true);\n};\n\nmodule.exports = (function () {\n\tif ('FORCE_COLOR' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (hasFlag('no-color') ||\n\t\thasFlag('no-colors') ||\n\t\thasFlag('color=false')) {\n\t\treturn false;\n\t}\n\n\tif (hasFlag('color') ||\n\t\thasFlag('colors') ||\n\t\thasFlag('color=true') ||\n\t\thasFlag('color=always')) {\n\t\treturn true;\n\t}\n\n\tif (process.stdout && !process.stdout.isTTY) {\n\t\treturn false;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn true;\n\t}\n\n\tif ('COLORTERM' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (process.env.TERM === 'dumb') {\n\t\treturn false;\n\t}\n\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n})();\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3VwcG9ydHMtY29sb3IvaW5kZXguanM/NmMwYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQ0FBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zdXBwb3J0cy1jb2xvci9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBhcmd2ID0gcHJvY2Vzcy5hcmd2O1xuXG52YXIgdGVybWluYXRvciA9IGFyZ3YuaW5kZXhPZignLS0nKTtcbnZhciBoYXNGbGFnID0gZnVuY3Rpb24gKGZsYWcpIHtcblx0ZmxhZyA9ICctLScgKyBmbGFnO1xuXHR2YXIgcG9zID0gYXJndi5pbmRleE9mKGZsYWcpO1xuXHRyZXR1cm4gcG9zICE9PSAtMSAmJiAodGVybWluYXRvciAhPT0gLTEgPyBwb3MgPCB0ZXJtaW5hdG9yIDogdHJ1ZSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IChmdW5jdGlvbiAoKSB7XG5cdGlmICgnRk9SQ0VfQ09MT1InIGluIHByb2Nlc3MuZW52KSB7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cblxuXHRpZiAoaGFzRmxhZygnbm8tY29sb3InKSB8fFxuXHRcdGhhc0ZsYWcoJ25vLWNvbG9ycycpIHx8XG5cdFx0aGFzRmxhZygnY29sb3I9ZmFsc2UnKSkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdGlmIChoYXNGbGFnKCdjb2xvcicpIHx8XG5cdFx0aGFzRmxhZygnY29sb3JzJykgfHxcblx0XHRoYXNGbGFnKCdjb2xvcj10cnVlJykgfHxcblx0XHRoYXNGbGFnKCdjb2xvcj1hbHdheXMnKSkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0aWYgKHByb2Nlc3Muc3Rkb3V0ICYmICFwcm9jZXNzLnN0ZG91dC5pc1RUWSkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdGlmIChwcm9jZXNzLnBsYXRmb3JtID09PSAnd2luMzInKSB7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cblxuXHRpZiAoJ0NPTE9SVEVSTScgaW4gcHJvY2Vzcy5lbnYpIHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXG5cdGlmIChwcm9jZXNzLmVudi5URVJNID09PSAnZHVtYicpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRpZiAoL15zY3JlZW58Xnh0ZXJtfF52dDEwMHxjb2xvcnxhbnNpfGN5Z3dpbnxsaW51eC9pLnRlc3QocHJvY2Vzcy5lbnYuVEVSTSkpIHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXG5cdHJldHVybiBmYWxzZTtcbn0pKCk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/supports-color/index.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2NlZDIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9tb2R1bGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuXHRpZiAoIW1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/module.js\n");

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtRQUFBO1FBQ0E7O1FBRUE7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTs7UUFFQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBOzs7UUFHQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0EsMENBQTBDLGdDQUFnQztRQUMxRTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBLHdEQUF3RCxrQkFBa0I7UUFDMUU7UUFDQSxpREFBaUQsY0FBYztRQUMvRDs7UUFFQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0EseUNBQXlDLGlDQUFpQztRQUMxRSxnSEFBZ0gsbUJBQW1CLEVBQUU7UUFDckk7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQSwyQkFBMkIsMEJBQTBCLEVBQUU7UUFDdkQsaUNBQWlDLGVBQWU7UUFDaEQ7UUFDQTtRQUNBOztRQUVBO1FBQ0Esc0RBQXNELCtEQUErRDs7UUFFckg7UUFDQTs7O1FBR0E7UUFDQSIsImZpbGUiOiJqcy9zdHlsZWd1aWRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IFwiLi9hc3NldHMvc291cmNlLzMuMC9qcy9zdHlsZWd1aWRlLmpzXCIpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==